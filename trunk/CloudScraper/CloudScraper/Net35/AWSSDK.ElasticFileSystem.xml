<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.ElasticFileSystem</name>
    </assembly>
    <members>
        <member name="M:Amazon.ElasticFileSystem.Internal.IdempotencyHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Internal.IdempotencyHandler.InvokeAsync(Amazon.Runtime.IAsyncExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
            <returns>IAsyncResult which represent an async operation.</returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig">
            <summary>
            Configuration for accessing Amazon ElasticFileSystem service
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.AmazonElasticFileSystemException">
            <summary>
             Common exception for the ElasticFileSystem service.
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonElasticFileSystemException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonElasticFileSystemException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonElasticFileSystemException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonElasticFileSystemException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonElasticFileSystemException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.LifeCycleState">
            <summary>
            Constants used for properties of type LifeCycleState.
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.LifeCycleState.Available">
            <summary>
            Constant Available for LifeCycleState
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.LifeCycleState.Creating">
            <summary>
            Constant Creating for LifeCycleState
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.LifeCycleState.Deleted">
            <summary>
            Constant Deleted for LifeCycleState
            </summary>
        </member>
        <member name="F:Amazon.ElasticFileSystem.LifeCycleState.Deleting">
            <summary>
            Constant Deleting for LifeCycleState
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.LifeCycleState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.LifeCycleState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.LifeCycleState.op_Implicit(System.String)~Amazon.ElasticFileSystem.LifeCycleState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.AmazonElasticFileSystemRequest">
            <summary>
            Base class for ElasticFileSystem operation requests.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.BadRequestException.#ctor(System.String)">
            <summary>
            Constructs a new BadRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.BadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.BadRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.BadRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.BadRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of BadRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest">
            <summary>
            Container for the parameters to the CreateFileSystem operation.
            Creates a new, empty file system. The operation requires a creation token in the
            request that Amazon EFS uses to ensure idempotent creation (calling the operation
            with same creation token has no effect). If a file system does not currently exist
            that is owned by the caller's AWS account with the specified creation token, this
            operation does the following: 
            
             <ul> <li>Creates a new, empty file system. The file system will have an Amazon EFS
            assigned ID, and an initial lifecycle state "creating". </li> <li> Returns with the
            description of the created file system. </li> </ul> 
            <para>
            Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with
            the ID of the existing file system.
            </para>
             <note>For basic use cases, you can use a randomly generated UUID for the creation
            token.</note> 
            <para>
             The idempotent operation allows you to retry a <code>CreateFileSystem</code> call
            without risk of creating an extra file system. This can happen when an initial call
            fails in a way that leaves it uncertain whether or not a file system was actually
            created. An example might be that a transport level timeout occurred or your connection
            was reset. As long as you use the same creation token, if the initial call had succeeded
            in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code>
            error. 
            </para>
             <note>The <code>CreateFileSystem</code> call returns while the file system's lifecycle
            state is still "creating". You can check the file system creation status by calling
            the <a>DescribeFileSystems</a> API, which among other things returns the file system
            state.</note> 
            <para>
             After the file system is fully created, Amazon EFS sets its lifecycle state to "available",
            at which point you can create one or more mount targets for the file system (<a>CreateMountTarget</a>)
            in your VPC. You mount your Amazon EFS file system on an EC2 instances in your VPC
            via the mount target. For more information, see <a href="http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon
            EFS: How it Works</a> 
            </para>
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:CreateFileSystem</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateFileSystemRequest with the parameterized properties
            </summary>
            <param name="creationToken">String of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.</param>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemRequest.CreationToken">
            <summary>
            Gets and sets the property CreationToken. 
            <para>
            String of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse">
            <summary>
            This object provides description of a file system.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The time at which the file system was created, in seconds, since 1970-01-01T00:00:00Z.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.CreationToken">
            <summary>
            Gets and sets the property CreationToken. 
            <para>
            Opaque string specified in the request. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The file system ID assigned by Amazon EFS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.LifeCycleState">
            <summary>
            Gets and sets the property LifeCycleState. 
            <para>
            A predefined string value that indicates the lifecycle phase of the file system. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            You can add tags to a file system (see <a>CreateTags</a>) including a "Name" tag.
            If the file system has a "Name" tag, Amazon EFS returns the value in this field. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.NumberOfMountTargets">
            <summary>
            Gets and sets the property NumberOfMountTargets. 
            <para>
            The current number of mount targets (see <a>CreateMountTarget</a>) the file system
            has.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account that created the file system. If the file system was created by an
            IAM user, the parent account to which the user belongs is the owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateFileSystemResponse.SizeInBytes">
            <summary>
            Gets and sets the property SizeInBytes. 
            <para>
             This object provides the latest known metered size of data stored in the file system,
            in bytes, in its <code>Value</code> field, and the time at which that size was determined
            in its <code>Timestamp</code> field. The <code>Timestamp</code> value is the integer
            number of seconds since 1970-01-01T00:00:00Z. Note that the value does not represent
            the size of a consistent snapshot of the file system, but it is eventually consistent
            when there are no writes to the file system. That is, the value will represent actual
            size only if the file system is not modified for a period longer than a couple of
            hours. Otherwise, the value is not the exact size the file system was at any instant
            in time. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.CreateMountTargetRequest">
            <summary>
            Container for the parameters to the CreateMountTarget operation.
            Creates a mount target for a file system. You can then mount the file system on EC2
            instances via the mount target. 
            
             
            <para>
            You can create one mount target in each Availability Zone in your VPC. All EC2 instances
            in a VPC within a given Availability Zone share a single mount target for a given
            file system. If you have multiple subnets in an Availability Zone, you create a mount
            target in one of the subnets. EC2 instances do not need to be in the same subnet as
            the mount target in order to access their file system. For more information, see <a
            href="http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS: How
            it Works</a>. 
            </para>
             
            <para>
            In the request, you also specify a file system ID for which you are creating the mount
            target and the file system's lifecycle state must be "available" (see <a>DescribeFileSystems</a>).
            </para>
             
            <para>
             In the request, you also provide a subnet ID, which serves several purposes:
            </para>
             <ul> <li>It determines the VPC in which Amazon EFS creates the mount target.</li>
            <li>It determines the Availability Zone in which Amazon EFS creates the mount target.
            </li> <li>It determines the IP address range from which Amazon EFS selects the IP
            address of the mount target if you don't specify an IP address in the request. </li>
            </ul> 
            <para>
            After creating the mount target, Amazon EFS returns a response that includes, a <code>MountTargetId</code>
            and an <code>IpAddress</code>. You use this IP address when mounting the file system
            in an EC2 instance. You can also use the mount target's DNS name when mounting the
            file system. The EC2 instance on which you mount the file system via the mount target
            can resolve the mount target's DNS name to its IP address. For more information, see
            <a href="http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation">How
            it Works: Implementation Overview</a>. 
            </para>
             
            <para>
             Note that you can create mount targets for a file system in only one VPC, and there
            can be only one mount target per Availability Zone. That is, if the file system already
            has one or more mount targets created for it, the request to add another mount target
            must meet the following requirements: 
            </para>
             <ul> <li> 
            <para>
            The subnet specified in the request must belong to the same VPC as the subnets of
            the existing mount targets.
            </para>
             </li> <li>The subnet specified in the request must not be in the same Availability
            Zone as any of the subnets of the existing mount targets.</li> </ul> 
            <para>
            If the request satisfies the requirements, Amazon EFS does the following:
            </para>
             <ul> <li>Creates a new mount target in the specified subnet. </li> <li>Also creates
            a new network interface in the subnet as follows: <ul> <li>If the request provides
            an <code>IpAddress</code>, Amazon EFS assigns that IP address to the network interface.
            Otherwise, Amazon EFS assigns a free address in the subnet (in the same way that the
            Amazon EC2 <code>CreateNetworkInterface</code> call does when a request does not specify
            a primary private IP address).</li> <li>If the request provides <code>SecurityGroups</code>,
            this network interface is associated with those security groups. Otherwise, it belongs
            to the default security group for the subnet's VPC.</li> <li>Assigns the description
            <code>"Mount target <i>fsmt-id</i> for file system <i>fs-id</i>"</code> where <code><i>fsmt-id</i></code>
            is the mount target ID, and <code><i>fs-id</i></code> is the <code>FileSystemId</code>.</li>
            <li>Sets the <code>requesterManaged</code> property of the network interface to "true",
            and the <code>requesterId</code> value to "EFS".</li> </ul> 
            <para>
            Each Amazon EFS mount target has one corresponding requestor-managed EC2 network interface.
            After the network interface is created, Amazon EFS sets the <code>NetworkInterfaceId</code>
            field in the mount target's description to the network interface ID, and the <code>IpAddress</code>
            field to its address. If network interface creation fails, the entire <code>CreateMountTarget</code>
            operation fails.
            </para>
             </li> </ul> <note>The <code>CreateMountTarget</code> call returns only after creating
            the network interface, but while the mount target state is still "creating". You can
            check the mount target creation status by calling the <a>DescribeFileSystems</a> API,
            which among other things returns the mount target state.</note> 
            <para>
            We recommend you create a mount target in each of the Availability Zones. There are
            cost considerations for using a file system in an Availability Zone through a mount
            target created in another Availability Zone. For more information, go to <a href="http://aws.amazon.com/efs/">Amazon
            EFS</a> product detail page. In addition, by always using a mount target local to
            the instance's Availability Zone, you eliminate a partial failure scenario; if the
            Availability Zone in which your mount target is created goes down, then you won't
            be able to access your file system through that mount target. 
            </para>
             
            <para>
            This operation requires permission for the following action on the file system:
            </para>
             <ul> <li> <code>elasticfilesystem:CreateMountTarget</code> </li> </ul> 
            <para>
            This operation also requires permission for the following Amazon EC2 actions:
            </para>
             <ul> <li> <code>ec2:DescribeSubnets</code> </li> <li> <code>ec2:DescribeNetworkInterfaces</code>
            </li> <li> <code>ec2:CreateNetworkInterface</code> </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system for which to create the mount target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetRequest.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            A valid IPv4 address within the address range of the specified subnet.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetRequest.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
             Up to 5 VPC security group IDs, of the form "sg-xxxxxxxx". These must be for the
            same VPC as subnet specified. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetRequest.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet to add the mount target in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse">
            <summary>
            This object provides description of a mount target.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system for which the mount target is intended.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            The address at which the file system may be mounted via the mount target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.LifeCycleState">
            <summary>
            Gets and sets the property LifeCycleState. 
            <para>
            The lifecycle state the mount target is in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.MountTargetId">
            <summary>
            Gets and sets the property MountTargetId. 
            <para>
            The system-assigned mount target ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface that Amazon EFS created when it created the mount
            target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID that owns the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateMountTargetResponse.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet that the mount target is in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.CreateTagsRequest">
            <summary>
            Container for the parameters to the CreateTags operation.
            Creates or overwrites tags associated with a file system. Each tag is a key-value
            pair. If a tag key specified in the request already exists on the file system, this
            operation overwrites its value with the value provided in the request. If you add
            the "Name" tag to your file system, Amazon EFS returns it in the response to the <a>DescribeFileSystems</a>
            API. 
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:CreateTags</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateTagsRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            String. The ID of the file system whose tags you want to modify. This operation modifies
            only the tags and not the file system.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.CreateTagsRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
             An array of <code>Tag</code> objects to add. Each <code>Tag</code> object is a key-value
            pair. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.CreateTagsResponse">
            <summary>
            This is the response object from the CreateTags operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest">
            <summary>
            Container for the parameters to the DeleteFileSystem operation.
            Deletes a file system, permanently severing access to its contents. Upon return,
            the file system no longer exists and you will not be able to access any contents of
            the deleted file system. 
            
             
            <para>
             You cannot delete a file system that is in use. That is, if the file system has any
            mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a>
            and <a>DeleteMountTarget</a>. 
            </para>
             <note>The <code>DeleteFileSystem</code> call returns while the file system state
            is still "deleting". You can check the file system deletion status by calling the
            <a>DescribeFileSystems</a> API, which returns a list of file systems in your account.
            If you pass file system ID or creation token for the deleted file system, the <a>DescribeFileSystems</a>
            will return a 404 "FileSystemNotFound" error.</note> 
            <para>
            This operation requires permission for the <code>elasticfilesystem:DeleteFileSystem</code>
            action.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteFileSystemRequest with the parameterized properties
            </summary>
            <param name="fileSystemId">The ID of the file system you want to delete.</param>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system you want to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DeleteFileSystemResponse">
            <summary>
            This is the response object from the DeleteFileSystem operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest">
            <summary>
            Container for the parameters to the DeleteMountTarget operation.
            Deletes the specified mount target. 
            
             
            <para>
             This operation forcibly breaks any mounts of the file system via the mount target
            being deleted, which might disrupt instances or applications using those mounts. To
            avoid applications getting cut off abruptly, you might consider unmounting any mounts
            of the mount target, if feasible. The operation also deletes the associated network
            interface. Uncommitted writes may be lost, but breaking a mount target using this
            operation does not corrupt the file system itself. The file system you created remains.
            You can mount an EC2 instance in your VPC using another mount target. 
            </para>
             
            <para>
             This operation requires permission for the following action on the file system: 
            </para>
             <ul> <li> <code>elasticfilesystem:DeleteMountTarget</code> </li> </ul> <note>The
            <code>DeleteMountTarget</code> call returns while the mount target state is still
            "deleting". You can check the mount target deletion by calling the <a>DescribeMountTargets</a>
            API, which returns a list of mount target descriptions for the given file system.
            </note> 
            <para>
            The operation also requires permission for the following Amazon EC2 action on the
            mount target's network interface:
            </para>
             <ul> <li> <code>ec2:DeleteNetworkInterface</code> </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteMountTargetRequest with the parameterized properties
            </summary>
            <param name="mountTargetId">String. The ID of the mount target to delete.</param>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest.MountTargetId">
            <summary>
            Gets and sets the property MountTargetId. 
            <para>
            String. The ID of the mount target to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DeleteMountTargetResponse">
            <summary>
            This is the response object from the DeleteMountTarget operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DeleteTagsRequest">
            <summary>
            Container for the parameters to the DeleteTags operation.
            Deletes the specified tags from a file system. If the <code>DeleteTags</code> request
            includes a tag key that does not exist, Amazon EFS ignores it; it is not an error.
            For more information about tags and related restrictions, go to <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Tag
            Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:DeleteTags</code>
            action.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DeleteTagsRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            String. The ID of the file system whose tags you want to delete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DeleteTagsRequest.TagKeys">
            <summary>
            Gets and sets the property TagKeys. 
            <para>
            A list of tag keys to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DeleteTagsResponse">
            <summary>
            This is the response object from the DeleteTags operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DependencyTimeoutException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DependencyTimeoutException.#ctor(System.String)">
            <summary>
            Constructs a new DependencyTimeoutException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DependencyTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DependencyTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DependencyTimeoutException.#ctor(System.Exception)">
            <summary>
            Construct instance of DependencyTimeoutException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DependencyTimeoutException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DependencyTimeoutException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DependencyTimeoutException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DependencyTimeoutException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest">
            <summary>
            Container for the parameters to the DescribeFileSystems operation.
            Returns the description of a specific Amazon EFS file system if either the file system
            <code>CreationToken</code> or the <code>FileSystemId</code> is provided; otherwise,
            returns descriptions of all file systems owned by the caller's AWS account in the
            AWS region of the endpoint that you're calling.
            
             
            <para>
             When retrieving all file system descriptions, you can optionally specify the <code>MaxItems</code>
            parameter to limit the number of descriptions in a response. If more file system descriptions
            remain, Amazon EFS returns a <code>NextMarker</code>, an opaque token, in the response.
            In this case, you should send a subsequent request with the <code>Marker</code> request
            parameter set to the value of <code>NextMarker</code>. 
            </para>
             
            <para>
             So to retrieve a list of your file system descriptions, the expected usage of this
            API is an iterative process of first calling <code>DescribeFileSystems</code> without
            the <code>Marker</code> and then continuing to call it with the <code>Marker</code>
            parameter set to the value of the <code>NextMarker</code> from the previous response
            until the response has no <code>NextMarker</code>. 
            </para>
             
            <para>
             Note that the implementation may return fewer than <code>MaxItems</code> file system
            descriptions while still including a <code>NextMarker</code> value. 
            </para>
             
            <para>
             The order of file systems returned in the response of one <code>DescribeFileSystems</code>
            call, and the order of file systems returned across the responses of a multi-call
            iteration, is unspecified. 
            </para>
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:DescribeFileSystems</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest.CreationToken">
            <summary>
            Gets and sets the property CreationToken. 
            <para>
             Optional string. Restricts the list to the file system with this creation token (you
            specify a creation token at the time of creating an Amazon EFS file system). 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            Optional string. File system ID whose description you want to retrieve. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
             Optional string. Opaque pagination token returned from a previous <code>DescribeFileSystems</code>
            operation. If present, specifies to continue the list from where the returning call
            had left off. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest.MaxItems">
            <summary>
            Gets and sets the property MaxItems. 
            <para>
            Optional integer. Specifies the maximum number of file systems to return in the response.
            This parameter value must be greater than 0. The number of items Amazon EFS returns
            will be the minimum of the <code>MaxItems</code> parameter specified in the request
            and the service's internal maximum number of items per page. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse">
            <summary>
            This is the response object from the DescribeFileSystems operation.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse.FileSystems">
            <summary>
            Gets and sets the property FileSystems. 
            <para>
            An array of file system descriptions.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            A string, present if provided by caller in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeFileSystemsResponse.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
            A string, present if there are more file systems than returned in the response. You
            can use the <code>NextMarker</code> in the subsequent request to fetch the descriptions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest">
            <summary>
            Container for the parameters to the DescribeMountTargetSecurityGroups operation.
            Returns the security groups currently in effect for a mount target. This operation
            requires that the network interface of the mount target has been created and the life
            cycle state of the mount target is not "deleted".
            
             
            <para>
            This operation requires permissions for the following actions:
            </para>
             <ul> <li> <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action
            on the mount target's file system. </li> <li> <code>ec2:DescribeNetworkInterfaceAttribute</code>
            action on the mount target's network interface. </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest.MountTargetId">
            <summary>
            Gets and sets the property MountTargetId. 
            <para>
            The ID of the mount target whose security groups you want to retrieve.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsResponse">
            <summary>
            This is the response object from the DescribeMountTargetSecurityGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsResponse.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            An array of security groups.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest">
            <summary>
            Container for the parameters to the DescribeMountTargets operation.
            Returns the descriptions of all the current mount targets, or a specific mount target,
            for a file system. When requesting all of the current mount targets, the order of
            mount targets returned in the response is unspecified.
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:DescribeMountTargets</code>
            action, on either the file system id that you specify in <code>FileSystemId</code>,
            or on the file system of the mount target that you specify in <code>MountTargetId</code>.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeMountTargetsRequest with the parameterized properties
            </summary>
            <param name="fileSystemId">Optional. String. The ID of the file system whose mount targets you want to list. It must be included in your request if <code>MountTargetId</code> is not included.</param>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            Optional. String. The ID of the file system whose mount targets you want to list.
            It must be included in your request if <code>MountTargetId</code> is not included.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            Optional. String. Opaque pagination token returned from a previous <code>DescribeMountTargets</code>
            operation. If present, it specifies to continue the list from where the previous returning
            call left off.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest.MaxItems">
            <summary>
            Gets and sets the property MaxItems. 
            <para>
            Optional. Maximum number of mount targets to return in the response. It must be an
            integer with a value greater than zero.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest.MountTargetId">
            <summary>
            Gets and sets the property MountTargetId. 
            <para>
            Optional. String. The ID of the mount target that you want to have described. It must
            be included in your request if <code>FileSystemId</code> is not included.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse">
            <summary>
            This is the response object from the DescribeMountTargets operation.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            If the request included the <code>Marker</code>, the response returns that value in
            this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse.MountTargets">
            <summary>
            Gets and sets the property MountTargets. 
            <para>
            Returns the file system's mount targets as an array of <code>MountTargetDescription</code>
            objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeMountTargetsResponse.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
            If a value is present, there are more mount targets to return. In a subsequent request,
            you can provide <code>Marker</code> in your request with this value to retrieve the
            next set of mount targets.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeTagsRequest">
            <summary>
            Container for the parameters to the DescribeTags operation.
            Returns the tags associated with a file system. The order of tags returned in the
            response of one <code>DescribeTags</code> call, and the order of tags returned across
            the responses of a multi-call iteration (when using pagination), is unspecified. 
            
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:DescribeTags</code>
            action. 
            </para>
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DescribeTagsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.DescribeTagsRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeTagsRequest with the parameterized properties
            </summary>
            <param name="fileSystemId">The ID of the file system whose tag set you want to retrieve.</param>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeTagsRequest.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system whose tag set you want to retrieve.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeTagsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            Optional. String. Opaque pagination token returned from a previous <code>DescribeTags</code>
            operation. If present, it specifies to continue the list from where the previous call
            left off.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeTagsRequest.MaxItems">
            <summary>
            Gets and sets the property MaxItems. 
            <para>
            Optional. Maximum number of file system tags to return in the response. It must be
            an integer with a value greater than zero.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.DescribeTagsResponse">
            <summary>
            This is the response object from the DescribeTags operation.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeTagsResponse.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            If the request included a <code>Marker</code>, the response returns that value in
            this field.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeTagsResponse.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
            If a value is present, there are more tags to return. In a subsequent request, you
            can provide the value of <code>NextMarker</code> as the value of the <code>Marker</code>
            parameter in your next request to retrieve the next set of tags.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.DescribeTagsResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            Returns tags associated with the file system as an array of <code>Tag</code> objects.
            
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new FileSystemAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileSystemAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileSystemAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.FileSystemDescription">
            <summary>
            This object provides description of a file system.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The time at which the file system was created, in seconds, since 1970-01-01T00:00:00Z.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.CreationToken">
            <summary>
            Gets and sets the property CreationToken. 
            <para>
            Opaque string specified in the request. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The file system ID assigned by Amazon EFS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.LifeCycleState">
            <summary>
            Gets and sets the property LifeCycleState. 
            <para>
            A predefined string value that indicates the lifecycle phase of the file system. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            You can add tags to a file system (see <a>CreateTags</a>) including a "Name" tag.
            If the file system has a "Name" tag, Amazon EFS returns the value in this field. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.NumberOfMountTargets">
            <summary>
            Gets and sets the property NumberOfMountTargets. 
            <para>
            The current number of mount targets (see <a>CreateMountTarget</a>) the file system
            has.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account that created the file system. If the file system was created by an
            IAM user, the parent account to which the user belongs is the owner.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemDescription.SizeInBytes">
            <summary>
            Gets and sets the property SizeInBytes. 
            <para>
             This object provides the latest known metered size of data stored in the file system,
            in bytes, in its <code>Value</code> field, and the time at which that size was determined
            in its <code>Timestamp</code> field. The <code>Timestamp</code> value is the integer
            number of seconds since 1970-01-01T00:00:00Z. Note that the value does not represent
            the size of a consistent snapshot of the file system, but it is eventually consistent
            when there are no writes to the file system. That is, the value will represent actual
            size only if the file system is not modified for a period longer than a couple of
            hours. Otherwise, the value is not the exact size the file system was at any instant
            in time. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.FileSystemInUseException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemInUseException.#ctor(System.String)">
            <summary>
            Constructs a new FileSystemInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileSystemInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileSystemInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new FileSystemLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileSystemLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileSystemLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new FileSystemNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of FileSystemNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of FileSystemNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of FileSystemNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.FileSystemSize">
            <summary>
            This object provides the latest known metered size, in bytes, of data stored in the
            file system, in its <code>Value</code> field, and the time at which that size was
            determined in its <code>Timestamp</code> field. Note that the value does not represent
            the size of a consistent snapshot of the file system, but it is eventually consistent
            when there are no writes to the file system. That is, the value will represent the
            actual size only if the file system is not modified for a period longer than a couple
            of hours. Otherwise, the value is not necessarily the exact size the file system was
            at any instant in time.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemSize.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time at which the size of data, returned in the <code>Value</code> field, was
            determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.FileSystemSize.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The latest known metered size, in bytes, of data stored in the file system.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException.#ctor(System.String)">
            <summary>
            Constructs a new IncorrectFileSystemLifeCycleStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IncorrectFileSystemLifeCycleStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of IncorrectFileSystemLifeCycleStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IncorrectFileSystemLifeCycleStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IncorrectFileSystemLifeCycleStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException.#ctor(System.String)">
            <summary>
            Constructs a new IncorrectMountTargetStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IncorrectMountTargetStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of IncorrectMountTargetStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IncorrectMountTargetStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IncorrectMountTargetStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InternalServerErrorException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerErrorException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InternalServerErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InternalServerErrorException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InternalServerErrorException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.InternalServerErrorException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerErrorException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.IpAddressInUseException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IpAddressInUseException.#ctor(System.String)">
            <summary>
            Constructs a new IpAddressInUseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IpAddressInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IpAddressInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IpAddressInUseException.#ctor(System.Exception)">
            <summary>
            Construct instance of IpAddressInUseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IpAddressInUseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IpAddressInUseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.IpAddressInUseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IpAddressInUseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest">
            <summary>
            Container for the parameters to the ModifyMountTargetSecurityGroups operation.
            Modifies the set of security groups in effect for a mount target.
            
             
            <para>
            When you create a mount target, Amazon EFS also creates a new network interface (see
            <a>CreateMountTarget</a>). This operation replaces the security groups in effect for
            the network interface associated with a mount target, with the <code>SecurityGroups</code>
            provided in the request. This operation requires that the network interface of the
            mount target has been created and the life cycle state of the mount target is not
            "deleted". 
            </para>
             
            <para>
            The operation requires permissions for the following actions:
            </para>
             <ul> <li> <code>elasticfilesystem:ModifyMountTargetSecurityGroups</code> action on
            the mount target's file system. </li> <li> <code>ec2:ModifyNetworkInterfaceAttribute</code>
            action on the mount target's network interface. </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest.MountTargetId">
            <summary>
            Gets and sets the property MountTargetId. 
            <para>
            The ID of the mount target whose security groups you want to modify.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest.SecurityGroups">
            <summary>
            Gets and sets the property SecurityGroups. 
            <para>
            An array of up to five VPC security group IDs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsResponse">
            <summary>
            This is the response object from the ModifyMountTargetSecurityGroups operation.
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.MountTargetConflictException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetConflictException.#ctor(System.String)">
            <summary>
            Constructs a new MountTargetConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MountTargetConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of MountTargetConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MountTargetConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MountTargetConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.MountTargetDescription">
            <summary>
            This object provides description of a mount target.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.FileSystemId">
            <summary>
            Gets and sets the property FileSystemId. 
            <para>
            The ID of the file system for which the mount target is intended.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.IpAddress">
            <summary>
            Gets and sets the property IpAddress. 
            <para>
            The address at which the file system may be mounted via the mount target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.LifeCycleState">
            <summary>
            Gets and sets the property LifeCycleState. 
            <para>
            The lifecycle state the mount target is in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.MountTargetId">
            <summary>
            Gets and sets the property MountTargetId. 
            <para>
            The system-assigned mount target ID. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.NetworkInterfaceId">
            <summary>
            Gets and sets the property NetworkInterfaceId. 
            <para>
            The ID of the network interface that Amazon EFS created when it created the mount
            target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.OwnerId">
            <summary>
            Gets and sets the property OwnerId. 
            <para>
            The AWS account ID that owns the resource.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.MountTargetDescription.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The ID of the subnet that the mount target is in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new MountTargetNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MountTargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of MountTargetNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MountTargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MountTargetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new NetworkInterfaceLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NetworkInterfaceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of NetworkInterfaceLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NetworkInterfaceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NetworkInterfaceLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException.#ctor(System.String)">
            <summary>
            Constructs a new NoFreeAddressesInSubnetException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NoFreeAddressesInSubnetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException.#ctor(System.Exception)">
            <summary>
            Construct instance of NoFreeAddressesInSubnetException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoFreeAddressesInSubnetException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NoFreeAddressesInSubnetException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new SecurityGroupLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SecurityGroupLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of SecurityGroupLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SecurityGroupLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SecurityGroupLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SecurityGroupNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SecurityGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SecurityGroupNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SecurityGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SecurityGroupNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.SubnetNotFoundException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SubnetNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new SubnetNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SubnetNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SubnetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SubnetNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of SubnetNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SubnetNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.SubnetNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SubnetNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Tag">
            <summary>
            A tag is a pair of key and value. The allowed characters in keys and values are letters,
            whitespace, and numbers, representable in UTF-8, and the characters '+', '-', '=',
            '.', '_', ':', and '/'.
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Tag.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            Tag key, a string. The key must not start with "aws:".
            </para>
            </summary>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Tag.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            Value of the tag key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException">
            <summary>
             ElasticFileSystem exception
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedAvailabilityZoneException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedAvailabilityZoneException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemRequestMarshaller">
            <summary>
            CreateFileSystem Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.CreateFileSystemRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateFileSystem operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateFileSystemResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetRequestMarshaller">
            <summary>
            CreateMountTarget Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.CreateMountTargetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateMountTarget operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateMountTargetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller">
            <summary>
            CreateTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.CreateTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTags operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.CreateTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemRequestMarshaller">
            <summary>
            DeleteFileSystem Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteFileSystem operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteFileSystemResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetRequestMarshaller">
            <summary>
            DeleteMountTarget Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMountTarget operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteMountTargetResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller">
            <summary>
            DeleteTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DeleteTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTags operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DeleteTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsRequestMarshaller">
            <summary>
            DescribeFileSystems Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeFileSystems operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeFileSystemsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsRequestMarshaller">
            <summary>
            DescribeMountTargetSecurityGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeMountTargetSecurityGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetSecurityGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsRequestMarshaller">
            <summary>
            DescribeMountTargets Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeMountTargets operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeMountTargetsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller">
            <summary>
            DescribeTags Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.DescribeTagsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTags operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.DescribeTagsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for FileSystemDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ElasticFileSystem#Model#FileSystemDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemSizeUnmarshaller">
            <summary>
            Response Unmarshaller for FileSystemSize Object
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemSizeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ElasticFileSystem#Model#FileSystemSize,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemSizeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.FileSystemSizeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsRequestMarshaller">
            <summary>
            ModifyMountTargetSecurityGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsRequestMarshaller.Marshall(Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ModifyMountTargetSecurityGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.ModifyMountTargetSecurityGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.MountTargetDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for MountTargetDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.MountTargetDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ElasticFileSystem#Model#MountTargetDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.MountTargetDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.MountTargetDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagMarshaller">
            <summary>
            Tag Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagMarshaller.Marshall(Amazon.ElasticFileSystem.Model.Tag,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagUnmarshaller">
            <summary>
            Response Unmarshaller for Tag Object
            </summary>  
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#ElasticFileSystem#Model#Tag,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.ElasticFileSystem.Model.Internal.MarshallTransformations.TagUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient">
             <summary>
             Implementation for accessing ElasticFileSystem
            
             Amazon Elastic File System
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor">
             <summary>
             Constructs AmazonElasticFileSystemClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonElasticFileSystemClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig)">
             <summary>
             Constructs AmazonElasticFileSystemClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonElasticFileSystemClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Credentials and an
            AmazonElasticFileSystemClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonElasticFileSystemClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(System.String,System.String,Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Access Key ID, AWS Secret Key and an
            AmazonElasticFileSystemClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonElasticFileSystemClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.#ctor(System.String,System.String,System.String,Amazon.ElasticFileSystem.AmazonElasticFileSystemConfig)">
            <summary>
            Constructs AmazonElasticFileSystemClient with AWS Access Key ID, AWS Secret Key and an
            AmazonElasticFileSystemClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonElasticFileSystemClient Configuration Object</param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customize the pipeline
            </summary>
            <param name="pipeline"></param>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.CreateFileSystem(System.String)">
            <summary>
            Creates a new, empty file system. The operation requires a creation token in the
            request that Amazon EFS uses to ensure idempotent creation (calling the operation
            with same creation token has no effect). If a file system does not currently exist
            that is owned by the caller's AWS account with the specified creation token, this
            operation does the following: 
            
             <ul> <li>Creates a new, empty file system. The file system will have an Amazon EFS
            assigned ID, and an initial lifecycle state "creating". </li> <li> Returns with the
            description of the created file system. </li> </ul> 
            <para>
            Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with
            the ID of the existing file system.
            </para>
             <note>For basic use cases, you can use a randomly generated UUID for the creation
            token.</note> 
            <para>
             The idempotent operation allows you to retry a <code>CreateFileSystem</code> call
            without risk of creating an extra file system. This can happen when an initial call
            fails in a way that leaves it uncertain whether or not a file system was actually
            created. An example might be that a transport level timeout occurred or your connection
            was reset. As long as you use the same creation token, if the initial call had succeeded
            in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code>
            error. 
            </para>
             <note>The <code>CreateFileSystem</code> call returns while the file system's lifecycle
            state is still "creating". You can check the file system creation status by calling
            the <a>DescribeFileSystems</a> API, which among other things returns the file system
            state.</note> 
            <para>
             After the file system is fully created, Amazon EFS sets its lifecycle state to "available",
            at which point you can create one or more mount targets for the file system (<a>CreateMountTarget</a>)
            in your VPC. You mount your Amazon EFS file system on an EC2 instances in your VPC
            via the mount target. For more information, see <a href="http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon
            EFS: How it Works</a> 
            </para>
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:CreateFileSystem</code>
            action. 
            </para>
            </summary>
            <param name="creationToken">String of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.</param>
            
            <returns>The response from the CreateFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException">
            Returned if the file system you are trying to create already exists, with the creation
            token you provided.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException">
            Returned if the AWS account has already created maximum number of file systems allowed
            per account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.CreateFileSystem(Amazon.ElasticFileSystem.Model.CreateFileSystemRequest)">
            <summary>
            Creates a new, empty file system. The operation requires a creation token in the
            request that Amazon EFS uses to ensure idempotent creation (calling the operation
            with same creation token has no effect). If a file system does not currently exist
            that is owned by the caller's AWS account with the specified creation token, this
            operation does the following: 
            
             <ul> <li>Creates a new, empty file system. The file system will have an Amazon EFS
            assigned ID, and an initial lifecycle state "creating". </li> <li> Returns with the
            description of the created file system. </li> </ul> 
            <para>
            Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with
            the ID of the existing file system.
            </para>
             <note>For basic use cases, you can use a randomly generated UUID for the creation
            token.</note> 
            <para>
             The idempotent operation allows you to retry a <code>CreateFileSystem</code> call
            without risk of creating an extra file system. This can happen when an initial call
            fails in a way that leaves it uncertain whether or not a file system was actually
            created. An example might be that a transport level timeout occurred or your connection
            was reset. As long as you use the same creation token, if the initial call had succeeded
            in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code>
            error. 
            </para>
             <note>The <code>CreateFileSystem</code> call returns while the file system's lifecycle
            state is still "creating". You can check the file system creation status by calling
            the <a>DescribeFileSystems</a> API, which among other things returns the file system
            state.</note> 
            <para>
             After the file system is fully created, Amazon EFS sets its lifecycle state to "available",
            at which point you can create one or more mount targets for the file system (<a>CreateMountTarget</a>)
            in your VPC. You mount your Amazon EFS file system on an EC2 instances in your VPC
            via the mount target. For more information, see <a href="http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon
            EFS: How it Works</a> 
            </para>
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:CreateFileSystem</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateFileSystem service method.</param>
            
            <returns>The response from the CreateFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException">
            Returned if the file system you are trying to create already exists, with the creation
            token you provided.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException">
            Returned if the AWS account has already created maximum number of file systems allowed
            per account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.BeginCreateFileSystem(Amazon.ElasticFileSystem.Model.CreateFileSystemRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateFileSystem operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateFileSystem operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateFileSystem
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.EndCreateFileSystem(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateFileSystem operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateFileSystem.</param>
            
            <returns>Returns a  CreateFileSystemResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.CreateMountTarget(Amazon.ElasticFileSystem.Model.CreateMountTargetRequest)">
            <summary>
            Creates a mount target for a file system. You can then mount the file system on EC2
            instances via the mount target. 
            
             
            <para>
            You can create one mount target in each Availability Zone in your VPC. All EC2 instances
            in a VPC within a given Availability Zone share a single mount target for a given
            file system. If you have multiple subnets in an Availability Zone, you create a mount
            target in one of the subnets. EC2 instances do not need to be in the same subnet as
            the mount target in order to access their file system. For more information, see <a
            href="http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS: How
            it Works</a>. 
            </para>
             
            <para>
            In the request, you also specify a file system ID for which you are creating the mount
            target and the file system's lifecycle state must be "available" (see <a>DescribeFileSystems</a>).
            </para>
             
            <para>
             In the request, you also provide a subnet ID, which serves several purposes:
            </para>
             <ul> <li>It determines the VPC in which Amazon EFS creates the mount target.</li>
            <li>It determines the Availability Zone in which Amazon EFS creates the mount target.
            </li> <li>It determines the IP address range from which Amazon EFS selects the IP
            address of the mount target if you don't specify an IP address in the request. </li>
            </ul> 
            <para>
            After creating the mount target, Amazon EFS returns a response that includes, a <code>MountTargetId</code>
            and an <code>IpAddress</code>. You use this IP address when mounting the file system
            in an EC2 instance. You can also use the mount target's DNS name when mounting the
            file system. The EC2 instance on which you mount the file system via the mount target
            can resolve the mount target's DNS name to its IP address. For more information, see
            <a href="http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation">How
            it Works: Implementation Overview</a>. 
            </para>
             
            <para>
             Note that you can create mount targets for a file system in only one VPC, and there
            can be only one mount target per Availability Zone. That is, if the file system already
            has one or more mount targets created for it, the request to add another mount target
            must meet the following requirements: 
            </para>
             <ul> <li> 
            <para>
            The subnet specified in the request must belong to the same VPC as the subnets of
            the existing mount targets.
            </para>
             </li> <li>The subnet specified in the request must not be in the same Availability
            Zone as any of the subnets of the existing mount targets.</li> </ul> 
            <para>
            If the request satisfies the requirements, Amazon EFS does the following:
            </para>
             <ul> <li>Creates a new mount target in the specified subnet. </li> <li>Also creates
            a new network interface in the subnet as follows: <ul> <li>If the request provides
            an <code>IpAddress</code>, Amazon EFS assigns that IP address to the network interface.
            Otherwise, Amazon EFS assigns a free address in the subnet (in the same way that the
            Amazon EC2 <code>CreateNetworkInterface</code> call does when a request does not specify
            a primary private IP address).</li> <li>If the request provides <code>SecurityGroups</code>,
            this network interface is associated with those security groups. Otherwise, it belongs
            to the default security group for the subnet's VPC.</li> <li>Assigns the description
            <code>"Mount target <i>fsmt-id</i> for file system <i>fs-id</i>"</code> where <code><i>fsmt-id</i></code>
            is the mount target ID, and <code><i>fs-id</i></code> is the <code>FileSystemId</code>.</li>
            <li>Sets the <code>requesterManaged</code> property of the network interface to "true",
            and the <code>requesterId</code> value to "EFS".</li> </ul> 
            <para>
            Each Amazon EFS mount target has one corresponding requestor-managed EC2 network interface.
            After the network interface is created, Amazon EFS sets the <code>NetworkInterfaceId</code>
            field in the mount target's description to the network interface ID, and the <code>IpAddress</code>
            field to its address. If network interface creation fails, the entire <code>CreateMountTarget</code>
            operation fails.
            </para>
             </li> </ul> <note>The <code>CreateMountTarget</code> call returns only after creating
            the network interface, but while the mount target state is still "creating". You can
            check the mount target creation status by calling the <a>DescribeFileSystems</a> API,
            which among other things returns the mount target state.</note> 
            <para>
            We recommend you create a mount target in each of the Availability Zones. There are
            cost considerations for using a file system in an Availability Zone through a mount
            target created in another Availability Zone. For more information, go to <a href="http://aws.amazon.com/efs/">Amazon
            EFS</a> product detail page. In addition, by always using a mount target local to
            the instance's Availability Zone, you eliminate a partial failure scenario; if the
            Availability Zone in which your mount target is created goes down, then you won't
            be able to access your file system through that mount target. 
            </para>
             
            <para>
            This operation requires permission for the following action on the file system:
            </para>
             <ul> <li> <code>elasticfilesystem:CreateMountTarget</code> </li> </ul> 
            <para>
            This operation also requires permission for the following Amazon EC2 actions:
            </para>
             <ul> <li> <code>ec2:DescribeSubnets</code> </li> <li> <code>ec2:DescribeNetworkInterfaces</code>
            </li> <li> <code>ec2:CreateNetworkInterface</code> </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMountTarget service method.</param>
            
            <returns>The response from the CreateMountTarget service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException">
            Returned if the file system's life cycle state is not "created".
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IpAddressInUseException">
            Returned if the request specified an <code>IpAddress</code> that is already in use
            in the subnet.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetConflictException">
            Returned if the mount target would violate one of the specified restrictions based
            on the file system's existing mount targets.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException">
            The calling account has reached the ENI limit for the specific AWS region. Client
            should try to delete some ENIs or get its account limit raised. For more information,
            go to <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html">Amazon
            VPC Limits</a> in the Amazon Virtual Private Cloud User Guide (see the Network interfaces
            per VPC entry in the table).
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException">
            Returned if <code>IpAddress</code> was not specified in the request and there are
            no free IP addresses in the subnet.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException">
            Returned if the size of <code>SecurityGroups</code> specified in the request is greater
            than five.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException">
            Returned if one of the specified security groups does not exist in the subnet's VPC.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SubnetNotFoundException">
            Returned if there is no subnet with ID <code>SubnetId</code> provided in the request.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException">
            
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.BeginCreateMountTarget(Amazon.ElasticFileSystem.Model.CreateMountTargetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateMountTarget operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateMountTarget operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateMountTarget
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.EndCreateMountTarget(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateMountTarget operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateMountTarget.</param>
            
            <returns>Returns a  CreateMountTargetResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.CreateTags(Amazon.ElasticFileSystem.Model.CreateTagsRequest)">
            <summary>
            Creates or overwrites tags associated with a file system. Each tag is a key-value
            pair. If a tag key specified in the request already exists on the file system, this
            operation overwrites its value with the value provided in the request. If you add
            the "Name" tag to your file system, Amazon EFS returns it in the response to the <a>DescribeFileSystems</a>
            API. 
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:CreateTags</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTags service method.</param>
            
            <returns>The response from the CreateTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.BeginCreateTags(Amazon.ElasticFileSystem.Model.CreateTagsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateTags operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTags operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateTags
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.EndCreateTags(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateTags operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateTags.</param>
            
            <returns>Returns a  CreateTagsResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DeleteFileSystem(System.String)">
            <summary>
            Deletes a file system, permanently severing access to its contents. Upon return,
            the file system no longer exists and you will not be able to access any contents of
            the deleted file system. 
            
             
            <para>
             You cannot delete a file system that is in use. That is, if the file system has any
            mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a>
            and <a>DeleteMountTarget</a>. 
            </para>
             <note>The <code>DeleteFileSystem</code> call returns while the file system state
            is still "deleting". You can check the file system deletion status by calling the
            <a>DescribeFileSystems</a> API, which returns a list of file systems in your account.
            If you pass file system ID or creation token for the deleted file system, the <a>DescribeFileSystems</a>
            will return a 404 "FileSystemNotFound" error.</note> 
            <para>
            This operation requires permission for the <code>elasticfilesystem:DeleteFileSystem</code>
            action.
            </para>
            </summary>
            <param name="fileSystemId">The ID of the file system you want to delete.</param>
            
            <returns>The response from the DeleteFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemInUseException">
            Returned if a file system has mount targets.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DeleteFileSystem(Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest)">
            <summary>
            Deletes a file system, permanently severing access to its contents. Upon return,
            the file system no longer exists and you will not be able to access any contents of
            the deleted file system. 
            
             
            <para>
             You cannot delete a file system that is in use. That is, if the file system has any
            mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a>
            and <a>DeleteMountTarget</a>. 
            </para>
             <note>The <code>DeleteFileSystem</code> call returns while the file system state
            is still "deleting". You can check the file system deletion status by calling the
            <a>DescribeFileSystems</a> API, which returns a list of file systems in your account.
            If you pass file system ID or creation token for the deleted file system, the <a>DescribeFileSystems</a>
            will return a 404 "FileSystemNotFound" error.</note> 
            <para>
            This operation requires permission for the <code>elasticfilesystem:DeleteFileSystem</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFileSystem service method.</param>
            
            <returns>The response from the DeleteFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemInUseException">
            Returned if a file system has mount targets.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.BeginDeleteFileSystem(Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteFileSystem operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteFileSystem operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteFileSystem
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.EndDeleteFileSystem(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteFileSystem operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteFileSystem.</param>
            
            <returns>Returns a  DeleteFileSystemResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DeleteMountTarget(System.String)">
            <summary>
            Deletes the specified mount target. 
            
             
            <para>
             This operation forcibly breaks any mounts of the file system via the mount target
            being deleted, which might disrupt instances or applications using those mounts. To
            avoid applications getting cut off abruptly, you might consider unmounting any mounts
            of the mount target, if feasible. The operation also deletes the associated network
            interface. Uncommitted writes may be lost, but breaking a mount target using this
            operation does not corrupt the file system itself. The file system you created remains.
            You can mount an EC2 instance in your VPC using another mount target. 
            </para>
             
            <para>
             This operation requires permission for the following action on the file system: 
            </para>
             <ul> <li> <code>elasticfilesystem:DeleteMountTarget</code> </li> </ul> <note>The
            <code>DeleteMountTarget</code> call returns while the mount target state is still
            "deleting". You can check the mount target deletion by calling the <a>DescribeMountTargets</a>
            API, which returns a list of mount target descriptions for the given file system.
            </note> 
            <para>
            The operation also requires permission for the following Amazon EC2 action on the
            mount target's network interface:
            </para>
             <ul> <li> <code>ec2:DeleteNetworkInterface</code> </li> </ul>
            </summary>
            <param name="mountTargetId">String. The ID of the mount target to delete.</param>
            
            <returns>The response from the DeleteMountTarget service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.DependencyTimeoutException">
            The service timed out trying to fulfill the request, and the client should try the
            call again.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DeleteMountTarget(Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest)">
            <summary>
            Deletes the specified mount target. 
            
             
            <para>
             This operation forcibly breaks any mounts of the file system via the mount target
            being deleted, which might disrupt instances or applications using those mounts. To
            avoid applications getting cut off abruptly, you might consider unmounting any mounts
            of the mount target, if feasible. The operation also deletes the associated network
            interface. Uncommitted writes may be lost, but breaking a mount target using this
            operation does not corrupt the file system itself. The file system you created remains.
            You can mount an EC2 instance in your VPC using another mount target. 
            </para>
             
            <para>
             This operation requires permission for the following action on the file system: 
            </para>
             <ul> <li> <code>elasticfilesystem:DeleteMountTarget</code> </li> </ul> <note>The
            <code>DeleteMountTarget</code> call returns while the mount target state is still
            "deleting". You can check the mount target deletion by calling the <a>DescribeMountTargets</a>
            API, which returns a list of mount target descriptions for the given file system.
            </note> 
            <para>
            The operation also requires permission for the following Amazon EC2 action on the
            mount target's network interface:
            </para>
             <ul> <li> <code>ec2:DeleteNetworkInterface</code> </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMountTarget service method.</param>
            
            <returns>The response from the DeleteMountTarget service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.DependencyTimeoutException">
            The service timed out trying to fulfill the request, and the client should try the
            call again.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.BeginDeleteMountTarget(Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteMountTarget operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMountTarget operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteMountTarget
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.EndDeleteMountTarget(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteMountTarget operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteMountTarget.</param>
            
            <returns>Returns a  DeleteMountTargetResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DeleteTags(Amazon.ElasticFileSystem.Model.DeleteTagsRequest)">
            <summary>
            Deletes the specified tags from a file system. If the <code>DeleteTags</code> request
            includes a tag key that does not exist, Amazon EFS ignores it; it is not an error.
            For more information about tags and related restrictions, go to <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Tag
            Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:DeleteTags</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTags service method.</param>
            
            <returns>The response from the DeleteTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.BeginDeleteTags(Amazon.ElasticFileSystem.Model.DeleteTagsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteTags operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTags operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteTags
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.EndDeleteTags(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteTags operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteTags.</param>
            
            <returns>Returns a  DeleteTagsResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeFileSystems(Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest)">
            <summary>
            Returns the description of a specific Amazon EFS file system if either the file system
            <code>CreationToken</code> or the <code>FileSystemId</code> is provided; otherwise,
            returns descriptions of all file systems owned by the caller's AWS account in the
            AWS region of the endpoint that you're calling.
            
             
            <para>
             When retrieving all file system descriptions, you can optionally specify the <code>MaxItems</code>
            parameter to limit the number of descriptions in a response. If more file system descriptions
            remain, Amazon EFS returns a <code>NextMarker</code>, an opaque token, in the response.
            In this case, you should send a subsequent request with the <code>Marker</code> request
            parameter set to the value of <code>NextMarker</code>. 
            </para>
             
            <para>
             So to retrieve a list of your file system descriptions, the expected usage of this
            API is an iterative process of first calling <code>DescribeFileSystems</code> without
            the <code>Marker</code> and then continuing to call it with the <code>Marker</code>
            parameter set to the value of the <code>NextMarker</code> from the previous response
            until the response has no <code>NextMarker</code>. 
            </para>
             
            <para>
             Note that the implementation may return fewer than <code>MaxItems</code> file system
            descriptions while still including a <code>NextMarker</code> value. 
            </para>
             
            <para>
             The order of file systems returned in the response of one <code>DescribeFileSystems</code>
            call, and the order of file systems returned across the responses of a multi-call
            iteration, is unspecified. 
            </para>
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:DescribeFileSystems</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeFileSystems service method.</param>
            
            <returns>The response from the DescribeFileSystems service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.BeginDescribeFileSystems(Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeFileSystems operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeFileSystems operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeFileSystems
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.EndDescribeFileSystems(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeFileSystems operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeFileSystems.</param>
            
            <returns>Returns a  DescribeFileSystemsResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeMountTargets(System.String)">
            <summary>
            Returns the descriptions of all the current mount targets, or a specific mount target,
            for a file system. When requesting all of the current mount targets, the order of
            mount targets returned in the response is unspecified.
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:DescribeMountTargets</code>
            action, on either the file system id that you specify in <code>FileSystemId</code>,
            or on the file system of the mount target that you specify in <code>MountTargetId</code>.
            </para>
            </summary>
            <param name="fileSystemId">Optional. String. The ID of the file system whose mount targets you want to list. It must be included in your request if <code>MountTargetId</code> is not included.</param>
            
            <returns>The response from the DescribeMountTargets service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeMountTargets(Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest)">
            <summary>
            Returns the descriptions of all the current mount targets, or a specific mount target,
            for a file system. When requesting all of the current mount targets, the order of
            mount targets returned in the response is unspecified.
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:DescribeMountTargets</code>
            action, on either the file system id that you specify in <code>FileSystemId</code>,
            or on the file system of the mount target that you specify in <code>MountTargetId</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMountTargets service method.</param>
            
            <returns>The response from the DescribeMountTargets service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.BeginDescribeMountTargets(Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeMountTargets operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeMountTargets operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeMountTargets
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.EndDescribeMountTargets(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeMountTargets operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeMountTargets.</param>
            
            <returns>Returns a  DescribeMountTargetsResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeMountTargetSecurityGroups(System.String)">
            <summary>
            Returns the security groups currently in effect for a mount target. This operation
            requires that the network interface of the mount target has been created and the life
            cycle state of the mount target is not "deleted".
            
             
            <para>
            This operation requires permissions for the following actions:
            </para>
             <ul> <li> <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action
            on the mount target's file system. </li> <li> <code>ec2:DescribeNetworkInterfaceAttribute</code>
            action on the mount target's network interface. </li> </ul>
            </summary>
            <param name="mountTargetId">The ID of the mount target whose security groups you want to retrieve.</param>
            
            <returns>The response from the DescribeMountTargetSecurityGroups service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            Returned if the mount target is not in the correct state for the operation.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeMountTargetSecurityGroups(Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest)">
            <summary>
            Returns the security groups currently in effect for a mount target. This operation
            requires that the network interface of the mount target has been created and the life
            cycle state of the mount target is not "deleted".
            
             
            <para>
            This operation requires permissions for the following actions:
            </para>
             <ul> <li> <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action
            on the mount target's file system. </li> <li> <code>ec2:DescribeNetworkInterfaceAttribute</code>
            action on the mount target's network interface. </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMountTargetSecurityGroups service method.</param>
            
            <returns>The response from the DescribeMountTargetSecurityGroups service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            Returned if the mount target is not in the correct state for the operation.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.BeginDescribeMountTargetSecurityGroups(Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeMountTargetSecurityGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeMountTargetSecurityGroups operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeMountTargetSecurityGroups
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.EndDescribeMountTargetSecurityGroups(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeMountTargetSecurityGroups operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeMountTargetSecurityGroups.</param>
            
            <returns>Returns a  DescribeMountTargetSecurityGroupsResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeTags(System.String)">
            <summary>
            Returns the tags associated with a file system. The order of tags returned in the
            response of one <code>DescribeTags</code> call, and the order of tags returned across
            the responses of a multi-call iteration (when using pagination), is unspecified. 
            
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:DescribeTags</code>
            action. 
            </para>
            </summary>
            <param name="fileSystemId">The ID of the file system whose tag set you want to retrieve.</param>
            
            <returns>The response from the DescribeTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.DescribeTags(Amazon.ElasticFileSystem.Model.DescribeTagsRequest)">
            <summary>
            Returns the tags associated with a file system. The order of tags returned in the
            response of one <code>DescribeTags</code> call, and the order of tags returned across
            the responses of a multi-call iteration (when using pagination), is unspecified. 
            
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:DescribeTags</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTags service method.</param>
            
            <returns>The response from the DescribeTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.BeginDescribeTags(Amazon.ElasticFileSystem.Model.DescribeTagsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeTags operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTags operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeTags
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.EndDescribeTags(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeTags operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeTags.</param>
            
            <returns>Returns a  DescribeTagsResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.ModifyMountTargetSecurityGroups(Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest)">
            <summary>
            Modifies the set of security groups in effect for a mount target.
            
             
            <para>
            When you create a mount target, Amazon EFS also creates a new network interface (see
            <a>CreateMountTarget</a>). This operation replaces the security groups in effect for
            the network interface associated with a mount target, with the <code>SecurityGroups</code>
            provided in the request. This operation requires that the network interface of the
            mount target has been created and the life cycle state of the mount target is not
            "deleted". 
            </para>
             
            <para>
            The operation requires permissions for the following actions:
            </para>
             <ul> <li> <code>elasticfilesystem:ModifyMountTargetSecurityGroups</code> action on
            the mount target's file system. </li> <li> <code>ec2:ModifyNetworkInterfaceAttribute</code>
            action on the mount target's network interface. </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyMountTargetSecurityGroups service method.</param>
            
            <returns>The response from the ModifyMountTargetSecurityGroups service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            Returned if the mount target is not in the correct state for the operation.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException">
            Returned if the size of <code>SecurityGroups</code> specified in the request is greater
            than five.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException">
            Returned if one of the specified security groups does not exist in the subnet's VPC.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.BeginModifyMountTargetSecurityGroups(Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ModifyMountTargetSecurityGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyMountTargetSecurityGroups operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndModifyMountTargetSecurityGroups
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.AmazonElasticFileSystemClient.EndModifyMountTargetSecurityGroups(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ModifyMountTargetSecurityGroups operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginModifyMountTargetSecurityGroups.</param>
            
            <returns>Returns a  ModifyMountTargetSecurityGroupsResult from ElasticFileSystem.</returns>
        </member>
        <member name="T:Amazon.ElasticFileSystem.IAmazonElasticFileSystem">
             <summary>
             Interface for accessing ElasticFileSystem
            
             Amazon Elastic File System
             </summary>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.CreateFileSystem(System.String)">
            <summary>
            Creates a new, empty file system. The operation requires a creation token in the
            request that Amazon EFS uses to ensure idempotent creation (calling the operation
            with same creation token has no effect). If a file system does not currently exist
            that is owned by the caller's AWS account with the specified creation token, this
            operation does the following: 
            
             <ul> <li>Creates a new, empty file system. The file system will have an Amazon EFS
            assigned ID, and an initial lifecycle state "creating". </li> <li> Returns with the
            description of the created file system. </li> </ul> 
            <para>
            Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with
            the ID of the existing file system.
            </para>
             <note>For basic use cases, you can use a randomly generated UUID for the creation
            token.</note> 
            <para>
             The idempotent operation allows you to retry a <code>CreateFileSystem</code> call
            without risk of creating an extra file system. This can happen when an initial call
            fails in a way that leaves it uncertain whether or not a file system was actually
            created. An example might be that a transport level timeout occurred or your connection
            was reset. As long as you use the same creation token, if the initial call had succeeded
            in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code>
            error. 
            </para>
             <note>The <code>CreateFileSystem</code> call returns while the file system's lifecycle
            state is still "creating". You can check the file system creation status by calling
            the <a>DescribeFileSystems</a> API, which among other things returns the file system
            state.</note> 
            <para>
             After the file system is fully created, Amazon EFS sets its lifecycle state to "available",
            at which point you can create one or more mount targets for the file system (<a>CreateMountTarget</a>)
            in your VPC. You mount your Amazon EFS file system on an EC2 instances in your VPC
            via the mount target. For more information, see <a href="http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon
            EFS: How it Works</a> 
            </para>
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:CreateFileSystem</code>
            action. 
            </para>
            </summary>
            <param name="creationToken">String of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.</param>
            
            <returns>The response from the CreateFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException">
            Returned if the file system you are trying to create already exists, with the creation
            token you provided.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException">
            Returned if the AWS account has already created maximum number of file systems allowed
            per account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.CreateFileSystem(Amazon.ElasticFileSystem.Model.CreateFileSystemRequest)">
            <summary>
            Creates a new, empty file system. The operation requires a creation token in the
            request that Amazon EFS uses to ensure idempotent creation (calling the operation
            with same creation token has no effect). If a file system does not currently exist
            that is owned by the caller's AWS account with the specified creation token, this
            operation does the following: 
            
             <ul> <li>Creates a new, empty file system. The file system will have an Amazon EFS
            assigned ID, and an initial lifecycle state "creating". </li> <li> Returns with the
            description of the created file system. </li> </ul> 
            <para>
            Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with
            the ID of the existing file system.
            </para>
             <note>For basic use cases, you can use a randomly generated UUID for the creation
            token.</note> 
            <para>
             The idempotent operation allows you to retry a <code>CreateFileSystem</code> call
            without risk of creating an extra file system. This can happen when an initial call
            fails in a way that leaves it uncertain whether or not a file system was actually
            created. An example might be that a transport level timeout occurred or your connection
            was reset. As long as you use the same creation token, if the initial call had succeeded
            in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code>
            error. 
            </para>
             <note>The <code>CreateFileSystem</code> call returns while the file system's lifecycle
            state is still "creating". You can check the file system creation status by calling
            the <a>DescribeFileSystems</a> API, which among other things returns the file system
            state.</note> 
            <para>
             After the file system is fully created, Amazon EFS sets its lifecycle state to "available",
            at which point you can create one or more mount targets for the file system (<a>CreateMountTarget</a>)
            in your VPC. You mount your Amazon EFS file system on an EC2 instances in your VPC
            via the mount target. For more information, see <a href="http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon
            EFS: How it Works</a> 
            </para>
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:CreateFileSystem</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateFileSystem service method.</param>
            
            <returns>The response from the CreateFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemAlreadyExistsException">
            Returned if the file system you are trying to create already exists, with the creation
            token you provided.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemLimitExceededException">
            Returned if the AWS account has already created maximum number of file systems allowed
            per account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.BeginCreateFileSystem(Amazon.ElasticFileSystem.Model.CreateFileSystemRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateFileSystem operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateFileSystem operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateFileSystem
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.EndCreateFileSystem(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateFileSystem operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateFileSystem.</param>
            
            <returns>Returns a  CreateFileSystemResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.CreateMountTarget(Amazon.ElasticFileSystem.Model.CreateMountTargetRequest)">
            <summary>
            Creates a mount target for a file system. You can then mount the file system on EC2
            instances via the mount target. 
            
             
            <para>
            You can create one mount target in each Availability Zone in your VPC. All EC2 instances
            in a VPC within a given Availability Zone share a single mount target for a given
            file system. If you have multiple subnets in an Availability Zone, you create a mount
            target in one of the subnets. EC2 instances do not need to be in the same subnet as
            the mount target in order to access their file system. For more information, see <a
            href="http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html">Amazon EFS: How
            it Works</a>. 
            </para>
             
            <para>
            In the request, you also specify a file system ID for which you are creating the mount
            target and the file system's lifecycle state must be "available" (see <a>DescribeFileSystems</a>).
            </para>
             
            <para>
             In the request, you also provide a subnet ID, which serves several purposes:
            </para>
             <ul> <li>It determines the VPC in which Amazon EFS creates the mount target.</li>
            <li>It determines the Availability Zone in which Amazon EFS creates the mount target.
            </li> <li>It determines the IP address range from which Amazon EFS selects the IP
            address of the mount target if you don't specify an IP address in the request. </li>
            </ul> 
            <para>
            After creating the mount target, Amazon EFS returns a response that includes, a <code>MountTargetId</code>
            and an <code>IpAddress</code>. You use this IP address when mounting the file system
            in an EC2 instance. You can also use the mount target's DNS name when mounting the
            file system. The EC2 instance on which you mount the file system via the mount target
            can resolve the mount target's DNS name to its IP address. For more information, see
            <a href="http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation">How
            it Works: Implementation Overview</a>. 
            </para>
             
            <para>
             Note that you can create mount targets for a file system in only one VPC, and there
            can be only one mount target per Availability Zone. That is, if the file system already
            has one or more mount targets created for it, the request to add another mount target
            must meet the following requirements: 
            </para>
             <ul> <li> 
            <para>
            The subnet specified in the request must belong to the same VPC as the subnets of
            the existing mount targets.
            </para>
             </li> <li>The subnet specified in the request must not be in the same Availability
            Zone as any of the subnets of the existing mount targets.</li> </ul> 
            <para>
            If the request satisfies the requirements, Amazon EFS does the following:
            </para>
             <ul> <li>Creates a new mount target in the specified subnet. </li> <li>Also creates
            a new network interface in the subnet as follows: <ul> <li>If the request provides
            an <code>IpAddress</code>, Amazon EFS assigns that IP address to the network interface.
            Otherwise, Amazon EFS assigns a free address in the subnet (in the same way that the
            Amazon EC2 <code>CreateNetworkInterface</code> call does when a request does not specify
            a primary private IP address).</li> <li>If the request provides <code>SecurityGroups</code>,
            this network interface is associated with those security groups. Otherwise, it belongs
            to the default security group for the subnet's VPC.</li> <li>Assigns the description
            <code>"Mount target <i>fsmt-id</i> for file system <i>fs-id</i>"</code> where <code><i>fsmt-id</i></code>
            is the mount target ID, and <code><i>fs-id</i></code> is the <code>FileSystemId</code>.</li>
            <li>Sets the <code>requesterManaged</code> property of the network interface to "true",
            and the <code>requesterId</code> value to "EFS".</li> </ul> 
            <para>
            Each Amazon EFS mount target has one corresponding requestor-managed EC2 network interface.
            After the network interface is created, Amazon EFS sets the <code>NetworkInterfaceId</code>
            field in the mount target's description to the network interface ID, and the <code>IpAddress</code>
            field to its address. If network interface creation fails, the entire <code>CreateMountTarget</code>
            operation fails.
            </para>
             </li> </ul> <note>The <code>CreateMountTarget</code> call returns only after creating
            the network interface, but while the mount target state is still "creating". You can
            check the mount target creation status by calling the <a>DescribeFileSystems</a> API,
            which among other things returns the mount target state.</note> 
            <para>
            We recommend you create a mount target in each of the Availability Zones. There are
            cost considerations for using a file system in an Availability Zone through a mount
            target created in another Availability Zone. For more information, go to <a href="http://aws.amazon.com/efs/">Amazon
            EFS</a> product detail page. In addition, by always using a mount target local to
            the instance's Availability Zone, you eliminate a partial failure scenario; if the
            Availability Zone in which your mount target is created goes down, then you won't
            be able to access your file system through that mount target. 
            </para>
             
            <para>
            This operation requires permission for the following action on the file system:
            </para>
             <ul> <li> <code>elasticfilesystem:CreateMountTarget</code> </li> </ul> 
            <para>
            This operation also requires permission for the following Amazon EC2 actions:
            </para>
             <ul> <li> <code>ec2:DescribeSubnets</code> </li> <li> <code>ec2:DescribeNetworkInterfaces</code>
            </li> <li> <code>ec2:CreateNetworkInterface</code> </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMountTarget service method.</param>
            
            <returns>The response from the CreateMountTarget service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectFileSystemLifeCycleStateException">
            Returned if the file system's life cycle state is not "created".
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IpAddressInUseException">
            Returned if the request specified an <code>IpAddress</code> that is already in use
            in the subnet.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetConflictException">
            Returned if the mount target would violate one of the specified restrictions based
            on the file system's existing mount targets.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.NetworkInterfaceLimitExceededException">
            The calling account has reached the ENI limit for the specific AWS region. Client
            should try to delete some ENIs or get its account limit raised. For more information,
            go to <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html">Amazon
            VPC Limits</a> in the Amazon Virtual Private Cloud User Guide (see the Network interfaces
            per VPC entry in the table).
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.NoFreeAddressesInSubnetException">
            Returned if <code>IpAddress</code> was not specified in the request and there are
            no free IP addresses in the subnet.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException">
            Returned if the size of <code>SecurityGroups</code> specified in the request is greater
            than five.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException">
            Returned if one of the specified security groups does not exist in the subnet's VPC.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SubnetNotFoundException">
            Returned if there is no subnet with ID <code>SubnetId</code> provided in the request.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.UnsupportedAvailabilityZoneException">
            
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.BeginCreateMountTarget(Amazon.ElasticFileSystem.Model.CreateMountTargetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateMountTarget operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateMountTarget operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateMountTarget
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.EndCreateMountTarget(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateMountTarget operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateMountTarget.</param>
            
            <returns>Returns a  CreateMountTargetResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.CreateTags(Amazon.ElasticFileSystem.Model.CreateTagsRequest)">
            <summary>
            Creates or overwrites tags associated with a file system. Each tag is a key-value
            pair. If a tag key specified in the request already exists on the file system, this
            operation overwrites its value with the value provided in the request. If you add
            the "Name" tag to your file system, Amazon EFS returns it in the response to the <a>DescribeFileSystems</a>
            API. 
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:CreateTags</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTags service method.</param>
            
            <returns>The response from the CreateTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.BeginCreateTags(Amazon.ElasticFileSystem.Model.CreateTagsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateTags operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTags operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateTags
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.EndCreateTags(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateTags operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateTags.</param>
            
            <returns>Returns a  CreateTagsResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DeleteFileSystem(System.String)">
            <summary>
            Deletes a file system, permanently severing access to its contents. Upon return,
            the file system no longer exists and you will not be able to access any contents of
            the deleted file system. 
            
             
            <para>
             You cannot delete a file system that is in use. That is, if the file system has any
            mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a>
            and <a>DeleteMountTarget</a>. 
            </para>
             <note>The <code>DeleteFileSystem</code> call returns while the file system state
            is still "deleting". You can check the file system deletion status by calling the
            <a>DescribeFileSystems</a> API, which returns a list of file systems in your account.
            If you pass file system ID or creation token for the deleted file system, the <a>DescribeFileSystems</a>
            will return a 404 "FileSystemNotFound" error.</note> 
            <para>
            This operation requires permission for the <code>elasticfilesystem:DeleteFileSystem</code>
            action.
            </para>
            </summary>
            <param name="fileSystemId">The ID of the file system you want to delete.</param>
            
            <returns>The response from the DeleteFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemInUseException">
            Returned if a file system has mount targets.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DeleteFileSystem(Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest)">
            <summary>
            Deletes a file system, permanently severing access to its contents. Upon return,
            the file system no longer exists and you will not be able to access any contents of
            the deleted file system. 
            
             
            <para>
             You cannot delete a file system that is in use. That is, if the file system has any
            mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a>
            and <a>DeleteMountTarget</a>. 
            </para>
             <note>The <code>DeleteFileSystem</code> call returns while the file system state
            is still "deleting". You can check the file system deletion status by calling the
            <a>DescribeFileSystems</a> API, which returns a list of file systems in your account.
            If you pass file system ID or creation token for the deleted file system, the <a>DescribeFileSystems</a>
            will return a 404 "FileSystemNotFound" error.</note> 
            <para>
            This operation requires permission for the <code>elasticfilesystem:DeleteFileSystem</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteFileSystem service method.</param>
            
            <returns>The response from the DeleteFileSystem service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemInUseException">
            Returned if a file system has mount targets.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.BeginDeleteFileSystem(Amazon.ElasticFileSystem.Model.DeleteFileSystemRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteFileSystem operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteFileSystem operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteFileSystem
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.EndDeleteFileSystem(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteFileSystem operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteFileSystem.</param>
            
            <returns>Returns a  DeleteFileSystemResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DeleteMountTarget(System.String)">
            <summary>
            Deletes the specified mount target. 
            
             
            <para>
             This operation forcibly breaks any mounts of the file system via the mount target
            being deleted, which might disrupt instances or applications using those mounts. To
            avoid applications getting cut off abruptly, you might consider unmounting any mounts
            of the mount target, if feasible. The operation also deletes the associated network
            interface. Uncommitted writes may be lost, but breaking a mount target using this
            operation does not corrupt the file system itself. The file system you created remains.
            You can mount an EC2 instance in your VPC using another mount target. 
            </para>
             
            <para>
             This operation requires permission for the following action on the file system: 
            </para>
             <ul> <li> <code>elasticfilesystem:DeleteMountTarget</code> </li> </ul> <note>The
            <code>DeleteMountTarget</code> call returns while the mount target state is still
            "deleting". You can check the mount target deletion by calling the <a>DescribeMountTargets</a>
            API, which returns a list of mount target descriptions for the given file system.
            </note> 
            <para>
            The operation also requires permission for the following Amazon EC2 action on the
            mount target's network interface:
            </para>
             <ul> <li> <code>ec2:DeleteNetworkInterface</code> </li> </ul>
            </summary>
            <param name="mountTargetId">String. The ID of the mount target to delete.</param>
            
            <returns>The response from the DeleteMountTarget service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.DependencyTimeoutException">
            The service timed out trying to fulfill the request, and the client should try the
            call again.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DeleteMountTarget(Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest)">
            <summary>
            Deletes the specified mount target. 
            
             
            <para>
             This operation forcibly breaks any mounts of the file system via the mount target
            being deleted, which might disrupt instances or applications using those mounts. To
            avoid applications getting cut off abruptly, you might consider unmounting any mounts
            of the mount target, if feasible. The operation also deletes the associated network
            interface. Uncommitted writes may be lost, but breaking a mount target using this
            operation does not corrupt the file system itself. The file system you created remains.
            You can mount an EC2 instance in your VPC using another mount target. 
            </para>
             
            <para>
             This operation requires permission for the following action on the file system: 
            </para>
             <ul> <li> <code>elasticfilesystem:DeleteMountTarget</code> </li> </ul> <note>The
            <code>DeleteMountTarget</code> call returns while the mount target state is still
            "deleting". You can check the mount target deletion by calling the <a>DescribeMountTargets</a>
            API, which returns a list of mount target descriptions for the given file system.
            </note> 
            <para>
            The operation also requires permission for the following Amazon EC2 action on the
            mount target's network interface:
            </para>
             <ul> <li> <code>ec2:DeleteNetworkInterface</code> </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMountTarget service method.</param>
            
            <returns>The response from the DeleteMountTarget service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.DependencyTimeoutException">
            The service timed out trying to fulfill the request, and the client should try the
            call again.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.BeginDeleteMountTarget(Amazon.ElasticFileSystem.Model.DeleteMountTargetRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteMountTarget operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMountTarget operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteMountTarget
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.EndDeleteMountTarget(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteMountTarget operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteMountTarget.</param>
            
            <returns>Returns a  DeleteMountTargetResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DeleteTags(Amazon.ElasticFileSystem.Model.DeleteTagsRequest)">
            <summary>
            Deletes the specified tags from a file system. If the <code>DeleteTags</code> request
            includes a tag key that does not exist, Amazon EFS ignores it; it is not an error.
            For more information about tags and related restrictions, go to <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Tag
            Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>.
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:DeleteTags</code>
            action.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTags service method.</param>
            
            <returns>The response from the DeleteTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.BeginDeleteTags(Amazon.ElasticFileSystem.Model.DeleteTagsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteTags operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTags operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteTags
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.EndDeleteTags(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteTags operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteTags.</param>
            
            <returns>Returns a  DeleteTagsResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeFileSystems(Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest)">
            <summary>
            Returns the description of a specific Amazon EFS file system if either the file system
            <code>CreationToken</code> or the <code>FileSystemId</code> is provided; otherwise,
            returns descriptions of all file systems owned by the caller's AWS account in the
            AWS region of the endpoint that you're calling.
            
             
            <para>
             When retrieving all file system descriptions, you can optionally specify the <code>MaxItems</code>
            parameter to limit the number of descriptions in a response. If more file system descriptions
            remain, Amazon EFS returns a <code>NextMarker</code>, an opaque token, in the response.
            In this case, you should send a subsequent request with the <code>Marker</code> request
            parameter set to the value of <code>NextMarker</code>. 
            </para>
             
            <para>
             So to retrieve a list of your file system descriptions, the expected usage of this
            API is an iterative process of first calling <code>DescribeFileSystems</code> without
            the <code>Marker</code> and then continuing to call it with the <code>Marker</code>
            parameter set to the value of the <code>NextMarker</code> from the previous response
            until the response has no <code>NextMarker</code>. 
            </para>
             
            <para>
             Note that the implementation may return fewer than <code>MaxItems</code> file system
            descriptions while still including a <code>NextMarker</code> value. 
            </para>
             
            <para>
             The order of file systems returned in the response of one <code>DescribeFileSystems</code>
            call, and the order of file systems returned across the responses of a multi-call
            iteration, is unspecified. 
            </para>
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:DescribeFileSystems</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeFileSystems service method.</param>
            
            <returns>The response from the DescribeFileSystems service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.BeginDescribeFileSystems(Amazon.ElasticFileSystem.Model.DescribeFileSystemsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeFileSystems operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeFileSystems operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeFileSystems
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.EndDescribeFileSystems(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeFileSystems operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeFileSystems.</param>
            
            <returns>Returns a  DescribeFileSystemsResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeMountTargets(System.String)">
            <summary>
            Returns the descriptions of all the current mount targets, or a specific mount target,
            for a file system. When requesting all of the current mount targets, the order of
            mount targets returned in the response is unspecified.
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:DescribeMountTargets</code>
            action, on either the file system id that you specify in <code>FileSystemId</code>,
            or on the file system of the mount target that you specify in <code>MountTargetId</code>.
            </para>
            </summary>
            <param name="fileSystemId">Optional. String. The ID of the file system whose mount targets you want to list. It must be included in your request if <code>MountTargetId</code> is not included.</param>
            
            <returns>The response from the DescribeMountTargets service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeMountTargets(Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest)">
            <summary>
            Returns the descriptions of all the current mount targets, or a specific mount target,
            for a file system. When requesting all of the current mount targets, the order of
            mount targets returned in the response is unspecified.
            
             
            <para>
            This operation requires permission for the <code>elasticfilesystem:DescribeMountTargets</code>
            action, on either the file system id that you specify in <code>FileSystemId</code>,
            or on the file system of the mount target that you specify in <code>MountTargetId</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMountTargets service method.</param>
            
            <returns>The response from the DescribeMountTargets service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.BeginDescribeMountTargets(Amazon.ElasticFileSystem.Model.DescribeMountTargetsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeMountTargets operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeMountTargets operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeMountTargets
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.EndDescribeMountTargets(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeMountTargets operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeMountTargets.</param>
            
            <returns>Returns a  DescribeMountTargetsResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeMountTargetSecurityGroups(System.String)">
            <summary>
            Returns the security groups currently in effect for a mount target. This operation
            requires that the network interface of the mount target has been created and the life
            cycle state of the mount target is not "deleted".
            
             
            <para>
            This operation requires permissions for the following actions:
            </para>
             <ul> <li> <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action
            on the mount target's file system. </li> <li> <code>ec2:DescribeNetworkInterfaceAttribute</code>
            action on the mount target's network interface. </li> </ul>
            </summary>
            <param name="mountTargetId">The ID of the mount target whose security groups you want to retrieve.</param>
            
            <returns>The response from the DescribeMountTargetSecurityGroups service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            Returned if the mount target is not in the correct state for the operation.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeMountTargetSecurityGroups(Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest)">
            <summary>
            Returns the security groups currently in effect for a mount target. This operation
            requires that the network interface of the mount target has been created and the life
            cycle state of the mount target is not "deleted".
            
             
            <para>
            This operation requires permissions for the following actions:
            </para>
             <ul> <li> <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action
            on the mount target's file system. </li> <li> <code>ec2:DescribeNetworkInterfaceAttribute</code>
            action on the mount target's network interface. </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMountTargetSecurityGroups service method.</param>
            
            <returns>The response from the DescribeMountTargetSecurityGroups service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            Returned if the mount target is not in the correct state for the operation.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.BeginDescribeMountTargetSecurityGroups(Amazon.ElasticFileSystem.Model.DescribeMountTargetSecurityGroupsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeMountTargetSecurityGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeMountTargetSecurityGroups operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeMountTargetSecurityGroups
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.EndDescribeMountTargetSecurityGroups(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeMountTargetSecurityGroups operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeMountTargetSecurityGroups.</param>
            
            <returns>Returns a  DescribeMountTargetSecurityGroupsResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeTags(System.String)">
            <summary>
            Returns the tags associated with a file system. The order of tags returned in the
            response of one <code>DescribeTags</code> call, and the order of tags returned across
            the responses of a multi-call iteration (when using pagination), is unspecified. 
            
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:DescribeTags</code>
            action. 
            </para>
            </summary>
            <param name="fileSystemId">The ID of the file system whose tag set you want to retrieve.</param>
            
            <returns>The response from the DescribeTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.DescribeTags(Amazon.ElasticFileSystem.Model.DescribeTagsRequest)">
            <summary>
            Returns the tags associated with a file system. The order of tags returned in the
            response of one <code>DescribeTags</code> call, and the order of tags returned across
            the responses of a multi-call iteration (when using pagination), is unspecified. 
            
             
            <para>
             This operation requires permission for the <code>elasticfilesystem:DescribeTags</code>
            action. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTags service method.</param>
            
            <returns>The response from the DescribeTags service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.FileSystemNotFoundException">
            Returned if the specified <code>FileSystemId</code> does not exist in the requester's
            AWS account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.BeginDescribeTags(Amazon.ElasticFileSystem.Model.DescribeTagsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeTags operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTags operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeTags
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.EndDescribeTags(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeTags operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeTags.</param>
            
            <returns>Returns a  DescribeTagsResult from ElasticFileSystem.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.ModifyMountTargetSecurityGroups(Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest)">
            <summary>
            Modifies the set of security groups in effect for a mount target.
            
             
            <para>
            When you create a mount target, Amazon EFS also creates a new network interface (see
            <a>CreateMountTarget</a>). This operation replaces the security groups in effect for
            the network interface associated with a mount target, with the <code>SecurityGroups</code>
            provided in the request. This operation requires that the network interface of the
            mount target has been created and the life cycle state of the mount target is not
            "deleted". 
            </para>
             
            <para>
            The operation requires permissions for the following actions:
            </para>
             <ul> <li> <code>elasticfilesystem:ModifyMountTargetSecurityGroups</code> action on
            the mount target's file system. </li> <li> <code>ec2:ModifyNetworkInterfaceAttribute</code>
            action on the mount target's network interface. </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ModifyMountTargetSecurityGroups service method.</param>
            
            <returns>The response from the ModifyMountTargetSecurityGroups service method, as returned by ElasticFileSystem.</returns>
            <exception cref="T:Amazon.ElasticFileSystem.Model.BadRequestException">
            Returned if the request is malformed or contains an error such as an invalid parameter
            value or a missing required parameter.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.IncorrectMountTargetStateException">
            Returned if the mount target is not in the correct state for the operation.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.InternalServerErrorException">
            Returned if an error occurred on the server side.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.MountTargetNotFoundException">
            Returned if there is no mount target with the specified ID found in the caller's account.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupLimitExceededException">
            Returned if the size of <code>SecurityGroups</code> specified in the request is greater
            than five.
            </exception>
            <exception cref="T:Amazon.ElasticFileSystem.Model.SecurityGroupNotFoundException">
            Returned if one of the specified security groups does not exist in the subnet's VPC.
            </exception>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.BeginModifyMountTargetSecurityGroups(Amazon.ElasticFileSystem.Model.ModifyMountTargetSecurityGroupsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ModifyMountTargetSecurityGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ModifyMountTargetSecurityGroups operation on AmazonElasticFileSystemClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndModifyMountTargetSecurityGroups
                    operation.</returns>
        </member>
        <member name="M:Amazon.ElasticFileSystem.IAmazonElasticFileSystem.EndModifyMountTargetSecurityGroups(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ModifyMountTargetSecurityGroups operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginModifyMountTargetSecurityGroups.</param>
            
            <returns>Returns a  ModifyMountTargetSecurityGroupsResult from ElasticFileSystem.</returns>
        </member>
    </members>
</doc>
