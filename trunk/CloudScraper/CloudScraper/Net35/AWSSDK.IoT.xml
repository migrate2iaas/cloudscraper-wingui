<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.IoT</name>
    </assembly>
    <members>
        <member name="T:Amazon.IoT.Model.ListPrincipalThingsResponse">
            <summary>
            The output from the ListPrincipalThings operation.
            </summary>
            <summary>
            The output from the ListPrincipalThings operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPrincipalThingsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            A token used to retrieve the next value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPrincipalThingsResponse.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
            A token used to retrieve the next value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPrincipalThingsResponse.Things">
            <summary>
            Gets and sets the property Things. 
            <para>
            The things.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.AcceptCertificateTransferRequest">
            <summary>
            Container for the parameters to the AcceptCertificateTransfer operation.
            Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.
            
             
            <para>
            To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate
            your certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.AcceptCertificateTransferRequest.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The ID of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.AcceptCertificateTransferRequest.SetAsActive">
            <summary>
            Gets and sets the property SetAsActive. 
            <para>
            Specifies whether the certificate is active.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.AcceptCertificateTransferResponse">
            <summary>
            This is the response object from the AcceptCertificateTransfer operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.Action">
            <summary>
            Describes the actions associated with a rule.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Action.CloudwatchAlarm">
            <summary>
            Gets and sets the property CloudwatchAlarm. 
            <para>
            Change the state of a CloudWatch alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Action.CloudwatchMetric">
            <summary>
            Gets and sets the property CloudwatchMetric. 
            <para>
            Capture a CloudWatch metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Action.DynamoDB">
            <summary>
            Gets and sets the property DynamoDB. 
            <para>
            Write to a DynamoDB table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Action.Elasticsearch">
            <summary>
            Gets and sets the property Elasticsearch. 
            <para>
            Write data to an Amazon Elasticsearch Service; domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Action.Firehose">
            <summary>
            Gets and sets the property Firehose. 
            <para>
            Write to an Amazon Kinesis Firehose stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Action.Kinesis">
            <summary>
            Gets and sets the property Kinesis. 
            <para>
            Write data to an Amazon Kinesis stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Action.Lambda">
            <summary>
            Gets and sets the property Lambda. 
            <para>
            Invoke a Lambda function.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Action.Republish">
            <summary>
            Gets and sets the property Republish. 
            <para>
            Publish to another MQTT topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Action.S3">
            <summary>
            Gets and sets the property S3. 
            <para>
            Write to an Amazon S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Action.Sns">
            <summary>
            Gets and sets the property Sns. 
            <para>
            Publish to an Amazon SNS topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Action.Sqs">
            <summary>
            Gets and sets the property Sqs. 
            <para>
            Publish to an Amazon SQS queue.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.AttachPrincipalPolicyRequest">
            <summary>
            Container for the parameters to the AttachPrincipalPolicy operation.
            Attaches the specified policy to the specified principal (certificate or other credential).
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.AttachPrincipalPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The policy name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.AttachPrincipalPolicyRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal, which can be a certificate ARN (as returned from the CreateCertificate
            operation) or an Amazon Cognito ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.AttachPrincipalPolicyResponse">
            <summary>
            This is the response object from the AttachPrincipalPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.AttachThingPrincipalRequest">
            <summary>
            Container for the parameters to the AttachThingPrincipal operation.
            Attaches the specified principal to the specified thing.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.AttachThingPrincipalRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal (certificate or other credential).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.AttachThingPrincipalRequest.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the thing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.AttachThingPrincipalResponse">
            <summary>
            The output from the AttachThingPrincipal operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.AttributePayload">
            <summary>
            The attribute payload, a JSON string containing up to three key-value pairs (for example,
            {\"attributes\":{\"string1\":\"string2\"}}).
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.AttributePayload.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            A JSON string containing up to three key-value pair in JSON format (for example, {\"attributes\":{\"string1\":\"string2\"}}).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CancelCertificateTransferRequest">
            <summary>
            Container for the parameters to the CancelCertificateTransfer operation.
            Cancels a pending transfer for the specified certificate.
            
             
            <para>
            <b>Note</b> Only the transfer source account can use this operation to cancel a transfer.
            (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer,
            AWS IoT returns the certificate to the source account in the INACTIVE state. After
            the destination account has accepted the transfer, the transfer cannot be cancelled.
            </para>
             
            <para>
            After a certificate transfer is cancelled, the status of the certificate changes from
            PENDING_TRANSFER to INACTIVE.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CancelCertificateTransferRequest.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The ID of the certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CancelCertificateTransferResponse">
            <summary>
            This is the response object from the CancelCertificateTransfer operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.Certificate">
            <summary>
            Information about a certificate.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Certificate.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The ARN of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Certificate.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The ID of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Certificate.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date and time the certificate was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Certificate.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CertificateDescription">
            <summary>
            Describes a certificate.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CertificateDescription.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The ARN of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CertificateDescription.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The ID of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CertificateDescription.CertificatePem">
            <summary>
            Gets and sets the property CertificatePem. 
            <para>
            The certificate data, in PEM format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CertificateDescription.CreationDate">
            <summary>
            Gets and sets the property CreationDate. 
            <para>
            The date and time the certificate was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CertificateDescription.LastModifiedDate">
            <summary>
            Gets and sets the property LastModifiedDate. 
            <para>
            The date and time the certificate was last modified.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CertificateDescription.OwnedBy">
            <summary>
            Gets and sets the property OwnedBy. 
            <para>
            The ID of the AWS account that owns the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CertificateDescription.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CertificateStateException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.CertificateStateException.#ctor(System.String)">
            <summary>
            Constructs a new CertificateStateException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.CertificateStateException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of CertificateStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.CertificateStateException.#ctor(System.Exception)">
            <summary>
            Construct instance of CertificateStateException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.CertificateStateException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CertificateStateException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.CertificateStateException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of CertificateStateException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.CloudwatchAlarmAction">
            <summary>
            Describes an action that updates a CloudWatch alarm.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CloudwatchAlarmAction.AlarmName">
            <summary>
            Gets and sets the property AlarmName. 
            <para>
            The CloudWatch alarm name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CloudwatchAlarmAction.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The IAM role that allows access to the CloudWatch alarm.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CloudwatchAlarmAction.StateReason">
            <summary>
            Gets and sets the property StateReason. 
            <para>
            The reason for the alarm change.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CloudwatchAlarmAction.StateValue">
            <summary>
            Gets and sets the property StateValue. 
            <para>
            The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CloudwatchMetricAction">
            <summary>
            Describes an action that captures a CloudWatch metric.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CloudwatchMetricAction.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The CloudWatch metric name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CloudwatchMetricAction.MetricNamespace">
            <summary>
            Gets and sets the property MetricNamespace. 
            <para>
            The CloudWatch metric namespace name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CloudwatchMetricAction.MetricTimestamp">
            <summary>
            Gets and sets the property MetricTimestamp. 
            <para>
            An optional <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp">Unix
            timestamp</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CloudwatchMetricAction.MetricUnit">
            <summary>
            Gets and sets the property MetricUnit. 
            <para>
            The <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit">metric
            unit</a> supported by CloudWatch.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CloudwatchMetricAction.MetricValue">
            <summary>
            Gets and sets the property MetricValue. 
            <para>
            The CloudWatch metric value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CloudwatchMetricAction.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The IAM role that allows access to the CloudWatch metric.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CreateCertificateFromCsrRequest">
            <summary>
            Container for the parameters to the CreateCertificateFromCsr operation.
            Creates an X.509 certificate using the specified certificate signing request.
            
             
            <para>
            <b>Note</b> Reusing the same certificate signing request (CSR) results in a distinct
            certificate.
            </para>
             
            <para>
            You can create multiple certificates in a batch by creating a directory, copying multiple
            .csr files into that directory, and then specifying that directory on the command
            line. The following commands show how to create a batch of certificates given a batch
            of CSRs. 
            </para>
             
            <para>
            Assuming a set of CSRs are located inside of the directory my-csr-directory:
            </para>
            &gt; 
            <para>
            On Linux and OS X, the command is:
            </para>
             
            <para>
            $ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{}
            </para>
             
            <para>
             This command lists all of the CSRs in my-csr-directory and pipes each CSR file name
            to the aws iot create-certificate-from-csr AWS CLI command to create a certificate
            for the corresponding CSR. 
            </para>
             
            <para>
             The aws iot create-certificate-from-csr part of the command can also be run in parallel
            to speed up the certificate creation process: 
            </para>
             
            <para>
             $ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{} 
            </para>
             
            <para>
             On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/$_} 
            </para>
             
            <para>
             On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr
            --certificate-signing-request file://@path"
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateCertificateFromCsrRequest.CertificateSigningRequest">
            <summary>
            Gets and sets the property CertificateSigningRequest. 
            <para>
            The certificate signing request (CSR).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateCertificateFromCsrRequest.SetAsActive">
            <summary>
            Gets and sets the property SetAsActive. 
            <para>
            Specifies whether the certificate is active.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CreateCertificateFromCsrResponse">
            <summary>
            The output from the CreateCertificateFromCsr operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateCertificateFromCsrResponse.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal
            for policy operations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateCertificateFromCsrResponse.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The ID of the certificate. Certificate management operations only take a certificateId.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateCertificateFromCsrResponse.CertificatePem">
            <summary>
            Gets and sets the property CertificatePem. 
            <para>
            The certificate data, in PEM format.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CreateKeysAndCertificateRequest">
            <summary>
            Container for the parameters to the CreateKeysAndCertificate operation.
            Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public
            key.
            
             
            <para>
            <b>Note</b> This is the only time AWS IoT issues the private key for this certificate,
            so it is important to keep it in a secure location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateKeysAndCertificateRequest.SetAsActive">
            <summary>
            Gets and sets the property SetAsActive. 
            <para>
            Specifies whether the certificate is active.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CreateKeysAndCertificateResponse">
            <summary>
            The output of the CreateKeysAndCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateKeysAndCertificateResponse.CertificateArn">
            <summary>
            Gets and sets the property CertificateArn. 
            <para>
            The ARN of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateKeysAndCertificateResponse.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The ID of the certificate. AWS IoT issues a default subject name for the certificate
            (for example, AWS IoT Certificate).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateKeysAndCertificateResponse.CertificatePem">
            <summary>
            Gets and sets the property CertificatePem. 
            <para>
            The certificate data, in PEM format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateKeysAndCertificateResponse.KeyPair">
            <summary>
            Gets and sets the property KeyPair. 
            <para>
            The generated key pair.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CreatePolicyRequest">
            <summary>
            Container for the parameters to the CreatePolicy operation.
            Creates an AWS IoT policy.
            
             
            <para>
            The created policy is the default version for the policy. This operation creates a
            policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's
            default version.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyRequest.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The JSON document that describes the policy. <b>policyDocument</b> must have a minimum
            length of 1, with a maximum length of 2048, excluding whitespace.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The policy name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CreatePolicyResponse">
            <summary>
            The output from the CreatePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyResponse.PolicyArn">
            <summary>
            Gets and sets the property PolicyArn. 
            <para>
            The policy ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyResponse.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The JSON document that describes the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyResponse.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The policy name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyResponse.PolicyVersionId">
            <summary>
            Gets and sets the property PolicyVersionId. 
            <para>
            The policy version ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CreatePolicyVersionRequest">
            <summary>
            Container for the parameters to the CreatePolicyVersion operation.
            Creates a new version of the specified AWS IoT policy. To update a policy, create
            a new policy version. A managed policy can have up to five versions. If the policy
            has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version
            before you create a new one.
            
             
            <para>
            Optionally, you can set the new version as the policy's default version. The default
            version is the operative version (that is, the version that is in effect for the certificates
            to which the policy is attached).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyVersionRequest.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The JSON document that describes the policy. Minimum length of 1. Maximum length of
            2048, excluding whitespaces
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyVersionRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The policy name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyVersionRequest.SetAsDefault">
            <summary>
            Gets and sets the property SetAsDefault. 
            <para>
            Specifies whether the policy version is set as the default. When this parameter is
            true, the new policy version becomes the operative version (that is, the version that
            is in effect for the certificates to which the policy is attached).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CreatePolicyVersionResponse">
            <summary>
            The output of the CreatePolicyVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyVersionResponse.IsDefaultVersion">
            <summary>
            Gets and sets the property IsDefaultVersion. 
            <para>
            Specifies whether the policy version is the default.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyVersionResponse.PolicyArn">
            <summary>
            Gets and sets the property PolicyArn. 
            <para>
            The policy ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyVersionResponse.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The JSON document that describes the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreatePolicyVersionResponse.PolicyVersionId">
            <summary>
            Gets and sets the property PolicyVersionId. 
            <para>
            The policy version ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CreateThingRequest">
            <summary>
            Container for the parameters to the CreateThing operation.
            Creates a thing in the Thing Registry.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateThingRequest.AttributePayload">
            <summary>
            Gets and sets the property AttributePayload. 
            <para>
            The attribute payload, which consists of up to 3 name/value pairs in a JSON document
            (for example, {\"attributes\":{\"string1\":\"string2\"}}).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateThingRequest.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the thing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CreateThingResponse">
            <summary>
            The output of the CreateThing operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateThingResponse.ThingArn">
            <summary>
            Gets and sets the property ThingArn. 
            <para>
            The thing ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateThingResponse.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the thing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CreateTopicRuleRequest">
            <summary>
            Container for the parameters to the CreateTopicRule operation.
            Creates a rule. Creating rules is an administrator-level action. Any user who has
            permission to create rules will be able to access data processed by the rule.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateTopicRuleRequest.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.CreateTopicRuleRequest.TopicRulePayload">
            <summary>
            Gets and sets the property TopicRulePayload. 
            <para>
            The rule payload.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.CreateTopicRuleResponse">
            <summary>
            This is the response object from the CreateTopicRule operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DeleteCertificateRequest">
            <summary>
            Container for the parameters to the DeleteCertificate operation.
            Deletes the specified certificate.
            
             
            <para>
            A certificate cannot be deleted if it has a policy attached to it or if its status
            is set to ACTIVE. To delete a certificate, first use the <a>DetachPrincipalPolicy</a>
            API to detach all policies. Next, use the <a>UpdateCertificate</a> API to set the
            certificate to the INACTIVE status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DeleteCertificateRequest.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The ID of the certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DeleteCertificateResponse">
            <summary>
            This is the response object from the DeleteCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DeleteConflictException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.DeleteConflictException.#ctor(System.String)">
            <summary>
            Constructs a new DeleteConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.DeleteConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DeleteConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.DeleteConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of DeleteConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.DeleteConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DeleteConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.DeleteConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DeleteConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.DeletePolicyRequest">
            <summary>
            Container for the parameters to the DeletePolicy operation.
            Deletes the specified policy.
            
             
            <para>
            A policy cannot be deleted if it has non-default versions or it is attached to any
            certificate.
            </para>
             
            <para>
            To delete a policy, use the DeletePolicyVersion API to delete all non-default versions
            of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate;
            and then use the DeletePolicy API to delete the policy.
            </para>
             
            <para>
            When a policy is deleted using DeletePolicy, its default version is deleted with it.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DeletePolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the policy to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DeletePolicyResponse">
            <summary>
            This is the response object from the DeletePolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DeletePolicyVersionRequest">
            <summary>
            Container for the parameters to the DeletePolicyVersion operation.
            Deletes the specified version of the specified policy. You cannot delete the default
            version of a policy using this API. To delete the default version of a policy, use
            <a>DeletePolicy</a>. To find out which version of a policy is marked as the default
            version, use ListPolicyVersions.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DeletePolicyVersionRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DeletePolicyVersionRequest.PolicyVersionId">
            <summary>
            Gets and sets the property PolicyVersionId. 
            <para>
            The policy version ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DeletePolicyVersionResponse">
            <summary>
            This is the response object from the DeletePolicyVersion operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DeleteThingRequest">
            <summary>
            Container for the parameters to the DeleteThing operation.
            Deletes the specified thing from the Thing Registry.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DeleteThingRequest.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The thing name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DeleteThingResponse">
            <summary>
            The output of the DeleteThing operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DeleteTopicRuleRequest">
            <summary>
            Container for the parameters to the DeleteTopicRule operation.
            Deletes the specified rule.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DeleteTopicRuleRequest.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DeleteTopicRuleResponse">
            <summary>
            This is the response object from the DeleteTopicRule operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DescribeCertificateRequest">
            <summary>
            Container for the parameters to the DescribeCertificate operation.
            Gets information about the specified certificate.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DescribeCertificateRequest.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The ID of the certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DescribeCertificateResponse">
            <summary>
            The output of the DescribeCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DescribeCertificateResponse.CertificateDescription">
            <summary>
            Gets and sets the property CertificateDescription. 
            <para>
            The description of the certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DescribeEndpointRequest">
            <summary>
            Container for the parameters to the DescribeEndpoint operation.
            Returns a unique endpoint specific to the AWS account making the call. You specify
            the following URI when updating state information for your thing: https://<i>endpoint</i>/things/<i>thingName</i>/shadow.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DescribeEndpointResponse">
            <summary>
            The output from the DescribeEndpoint operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DescribeEndpointResponse.EndpointAddress">
            <summary>
            Gets and sets the property EndpointAddress. 
            <para>
            The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DescribeThingRequest">
            <summary>
            Container for the parameters to the DescribeThing operation.
            Gets information about the specified thing.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DescribeThingRequest.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the thing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DescribeThingResponse">
            <summary>
            The output from the DescribeThing operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DescribeThingResponse.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes, which are name/value pairs in JSON format (for example: {\"attributes\":{\"some-name1\":\"some-value1\"},
            {\"some-name2\":\"some-value2\"}, {\"some-name3\":\"some-value3\"}})
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DescribeThingResponse.DefaultClientId">
            <summary>
            Gets and sets the property DefaultClientId. 
            <para>
            The default client ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DescribeThingResponse.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the thing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DetachPrincipalPolicyRequest">
            <summary>
            Container for the parameters to the DetachPrincipalPolicy operation.
            Removes the specified policy from the specified certificate.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DetachPrincipalPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the policy to detach.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DetachPrincipalPolicyRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal.
            </para>
             
            <para>
            If the principal is a certificate, specify the certificate ARN. If the principal is
            an Amazon Cognito identity, specify the identity ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DetachPrincipalPolicyResponse">
            <summary>
            This is the response object from the DetachPrincipalPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DetachThingPrincipalRequest">
            <summary>
            Container for the parameters to the DetachThingPrincipal operation.
            Detaches the specified principal from the specified thing.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DetachThingPrincipalRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DetachThingPrincipalRequest.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the thing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DetachThingPrincipalResponse">
            <summary>
            The output from the DetachThingPrincipal operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DisableTopicRuleRequest">
            <summary>
            Container for the parameters to the DisableTopicRule operation.
            Disables the specified rule.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DisableTopicRuleRequest.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            The name of the rule to disable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DisableTopicRuleResponse">
            <summary>
            This is the response object from the DisableTopicRule operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.DynamoDBAction">
            <summary>
            Describes an action to write to a DynamoDB table.
            
             
            <para>
            The <code>tableName</code>, <code>hashKeyField</code>, and <code>rangeKeyField</code>
            values must match the values used when you created the table.
            </para>
             
            <para>
            The <code>hashKeyValue</code> and <code>rangeKeyvalue</code> fields use a substitution
            template syntax. These templates provide data at runtime. The syntax is as follows:
            ${<i>sql-expression</i>}.
            </para>
             
            <para>
            You can specify any valid expression in a WHERE or SELECT clause, including JSON properties,
            comparisons, calculations, and functions. For example, the following field uses the
            third level of the topic:
            </para>
             
            <para>
            <code>"hashKeyValue": "${topic(3)}"</code>
            </para>
             
            <para>
            The following field uses the timestamp:
            </para>
             
            <para>
            <code>"rangeKeyValue": "${timestamp()}"</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DynamoDBAction.HashKeyField">
            <summary>
            Gets and sets the property HashKeyField. 
            <para>
            The hash key name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DynamoDBAction.HashKeyValue">
            <summary>
            Gets and sets the property HashKeyValue. 
            <para>
            The hash key value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DynamoDBAction.PayloadField">
            <summary>
            Gets and sets the property PayloadField. 
            <para>
            The action payload. This name can be customized.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DynamoDBAction.RangeKeyField">
            <summary>
            Gets and sets the property RangeKeyField. 
            <para>
            The range key name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DynamoDBAction.RangeKeyValue">
            <summary>
            Gets and sets the property RangeKeyValue. 
            <para>
            The range key value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DynamoDBAction.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role that grants access to the DynamoDB table.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.DynamoDBAction.TableName">
            <summary>
            Gets and sets the property TableName. 
            <para>
            The name of the DynamoDB table.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ElasticsearchAction">
            <summary>
            Describes an action that writes data to an Amazon Elasticsearch Service; domain.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ElasticsearchAction.Endpoint">
            <summary>
            Gets and sets the property Endpoint. 
            <para>
            The endpoint of your Elasticsearch domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ElasticsearchAction.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The unique identifier for the document you are storing.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ElasticsearchAction.Index">
            <summary>
            Gets and sets the property Index. 
            <para>
            The Elasticsearch index where you want to store your data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ElasticsearchAction.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The IAM role ARN that has access to Elasticsearch.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ElasticsearchAction.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of document you are storing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.EnableTopicRuleRequest">
            <summary>
            Container for the parameters to the EnableTopicRule operation.
            Enables the specified rule.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.EnableTopicRuleRequest.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            The name of the topic rule to enable.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.EnableTopicRuleResponse">
            <summary>
            This is the response object from the EnableTopicRule operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.FirehoseAction">
            <summary>
            Describes an action that writes data to an Amazon Kinesis Firehose stream.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.FirehoseAction.DeliveryStreamName">
            <summary>
            Gets and sets the property DeliveryStreamName. 
            <para>
            The delivery stream name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.FirehoseAction.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The IAM role that grants access to the Amazon Kinesis Firehost stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.GetLoggingOptionsRequest">
            <summary>
            Container for the parameters to the GetLoggingOptions operation.
            Gets the logging options.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.GetLoggingOptionsResponse">
            <summary>
            The output from the GetLoggingOptions operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetLoggingOptionsResponse.LogLevel">
            <summary>
            Gets and sets the property LogLevel. 
            <para>
            The logging level.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetLoggingOptionsResponse.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role that grants access.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.GetPolicyRequest">
            <summary>
            Container for the parameters to the GetPolicy operation.
            Gets information about the specified policy with the policy document of the default
            version.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetPolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.GetPolicyResponse">
            <summary>
            The output from the GetPolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetPolicyResponse.DefaultVersionId">
            <summary>
            Gets and sets the property DefaultVersionId. 
            <para>
            The default policy version ID.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetPolicyResponse.PolicyArn">
            <summary>
            Gets and sets the property PolicyArn. 
            <para>
            The policy ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetPolicyResponse.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The JSON document that describes the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetPolicyResponse.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The policy name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.GetPolicyVersionRequest">
            <summary>
            Container for the parameters to the GetPolicyVersion operation.
            Gets information about the specified policy version.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetPolicyVersionRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetPolicyVersionRequest.PolicyVersionId">
            <summary>
            Gets and sets the property PolicyVersionId. 
            <para>
            The policy version ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.GetPolicyVersionResponse">
            <summary>
            The output from the GetPolicyVersion operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetPolicyVersionResponse.IsDefaultVersion">
            <summary>
            Gets and sets the property IsDefaultVersion. 
            <para>
            Specifies whether the policy version is the default.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetPolicyVersionResponse.PolicyArn">
            <summary>
            Gets and sets the property PolicyArn. 
            <para>
            The policy ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetPolicyVersionResponse.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The JSON document that describes the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetPolicyVersionResponse.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The policy name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetPolicyVersionResponse.PolicyVersionId">
            <summary>
            Gets and sets the property PolicyVersionId. 
            <para>
            The policy version ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.GetTopicRuleRequest">
            <summary>
            Container for the parameters to the GetTopicRule operation.
            Gets information about the specified rule.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetTopicRuleRequest.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.GetTopicRuleResponse">
            <summary>
            The output from the GetTopicRule operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetTopicRuleResponse.Rule">
            <summary>
            Gets and sets the property Rule. 
            <para>
            The rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.GetTopicRuleResponse.RuleArn">
            <summary>
            Gets and sets the property RuleArn. 
            <para>
            The rule ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.InternalException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.InternalException.#ctor(System.String)">
            <summary>
            Constructs a new InternalException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.InternalException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.InternalException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.InternalException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.InternalException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.InternalFailureException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.InternalFailureException.#ctor(System.String)">
            <summary>
            Constructs a new InternalFailureException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.InternalFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.InternalFailureException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalFailureException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.InternalFailureException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalFailureException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.InternalFailureException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalFailureException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.InvalidRequestException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.InvalidRequestException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidRequestException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.InvalidRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.InvalidRequestException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.InvalidRequestException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.InvalidRequestException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidRequestException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.KeyPair">
            <summary>
            Describes a key pair.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.KeyPair.PrivateKey">
            <summary>
            Gets and sets the property PrivateKey. 
            <para>
            The private key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.KeyPair.PublicKey">
            <summary>
            Gets and sets the property PublicKey. 
            <para>
            The public key.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.KinesisAction">
            <summary>
            Describes an action to write data to an Amazon Kinesis stream.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.KinesisAction.PartitionKey">
            <summary>
            Gets and sets the property PartitionKey. 
            <para>
            The partition key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.KinesisAction.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role that grants access to the Amazon Kinesis stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.KinesisAction.StreamName">
            <summary>
            Gets and sets the property StreamName. 
            <para>
            The name of the Amazon Kinesis stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.LambdaAction">
            <summary>
            Describes an action to invoke a Lambda function.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.LambdaAction.FunctionArn">
            <summary>
            Gets and sets the property FunctionArn. 
            <para>
            The ARN of the Lambda function.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.LimitExceededException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.ListCertificatesRequest">
            <summary>
            Container for the parameters to the ListCertificates operation.
            Lists your certificates.
            
             
            <para>
            The results are paginated with a default page size of 25. You can use the returned
            marker to retrieve additional results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListCertificatesRequest.AscendingOrder">
            <summary>
            Gets and sets the property AscendingOrder. 
            <para>
            Specifies the order for results. If True, the results are returned in ascending order,
            based on the creation date.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListCertificatesRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            The marker for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListCertificatesRequest.PageSize">
            <summary>
            Gets and sets the property PageSize. 
            <para>
            The result page size.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListCertificatesResponse">
            <summary>
            The output of the ListCertificates operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListCertificatesResponse.Certificates">
            <summary>
            Gets and sets the property Certificates. 
            <para>
            The descriptions of the certificates.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListCertificatesResponse.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
            The marker for the next set of results, or null if there are no additional results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListPoliciesRequest">
            <summary>
            Container for the parameters to the ListPolicies operation.
            Lists your policies.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPoliciesRequest.AscendingOrder">
            <summary>
            Gets and sets the property AscendingOrder. 
            <para>
            Specifies the order for results. If true, the results are returned in ascending creation
            order.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPoliciesRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            The marker for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPoliciesRequest.PageSize">
            <summary>
            Gets and sets the property PageSize. 
            <para>
            The result page size.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListPoliciesResponse">
            <summary>
            The output from the ListPolicies operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPoliciesResponse.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
            The marker for the next set of results, or null if there are no additional results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPoliciesResponse.Policies">
            <summary>
            Gets and sets the property Policies. 
            <para>
            The descriptions of the policies.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListPolicyVersionsRequest">
            <summary>
            Container for the parameters to the ListPolicyVersions operation.
            Lists the versions of the specified policy, and identifies the default version.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPolicyVersionsRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The policy name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListPolicyVersionsResponse">
            <summary>
            The output from the ListPolicyVersions operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPolicyVersionsResponse.PolicyVersions">
            <summary>
            Gets and sets the property PolicyVersions. 
            <para>
            The policy versions.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListPrincipalPoliciesRequest">
            <summary>
            Container for the parameters to the ListPrincipalPolicies operation.
            Lists the policies attached to the specified principal. If you use an Cognito identity,
            the ID must be in <a href="http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax">AmazonCognito
            Identity format</a>.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPrincipalPoliciesRequest.AscendingOrder">
            <summary>
            Gets and sets the property AscendingOrder. 
            <para>
            Specifies the order for results. If true, results are returned in ascending creation
            order.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPrincipalPoliciesRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            The marker for the next set of results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPrincipalPoliciesRequest.PageSize">
            <summary>
            Gets and sets the property PageSize. 
            <para>
            The result page size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPrincipalPoliciesRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListPrincipalPoliciesResponse">
            <summary>
            The output from the ListPrincipalPolicies operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPrincipalPoliciesResponse.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
            The marker for the next set of results, or null if there are no additional results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPrincipalPoliciesResponse.Policies">
            <summary>
            Gets and sets the property Policies. 
            <para>
            The policies.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListPrincipalThingsRequest">
            <summary>
            Container for the parameters to the ListPrincipalThings operation.
            Lists the things associated with the specified principal.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPrincipalThingsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            A token used to retrieve the next value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPrincipalThingsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of principals to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListPrincipalThingsRequest.Principal">
            <summary>
            Gets and sets the property Principal. 
            <para>
            The principal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListThingPrincipalsRequest">
            <summary>
            Container for the parameters to the ListThingPrincipals operation.
            Lists the principals associated with the specified thing.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListThingPrincipalsRequest.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the thing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListThingPrincipalsResponse">
            <summary>
            The output from the ListThingPrincipals operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListThingPrincipalsResponse.Principals">
            <summary>
            Gets and sets the property Principals. 
            <para>
            The principals.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListThingsRequest">
            <summary>
            Container for the parameters to the ListThings operation.
            Lists your things. You can pass an AttributeName or AttributeValue to filter your
            things (for example, "ListThings where AttributeName=Color and AttributeValue=Red").
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListThingsRequest.AttributeName">
            <summary>
            Gets and sets the property AttributeName. 
            <para>
            The attribute name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListThingsRequest.AttributeValue">
            <summary>
            Gets and sets the property AttributeValue. 
            <para>
            The attribute value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListThingsRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            The token for the next value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListThingsRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListThingsResponse">
            <summary>
            The output from the ListThings operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListThingsResponse.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
            A token used to retrieve the next value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListThingsResponse.Things">
            <summary>
            Gets and sets the property Things. 
            <para>
            The things.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListTopicRulesRequest">
            <summary>
            Container for the parameters to the ListTopicRules operation.
            Lists the rules for the specific topic.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListTopicRulesRequest.Marker">
            <summary>
            Gets and sets the property Marker. 
            <para>
            A token used to retrieve the next value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListTopicRulesRequest.MaxResults">
            <summary>
            Gets and sets the property MaxResults. 
            <para>
            The maximum number of results to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListTopicRulesRequest.RuleDisabled">
            <summary>
            Gets and sets the property RuleDisabled. 
            <para>
            Specifies whether the rule is disabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListTopicRulesRequest.Topic">
            <summary>
            Gets and sets the property Topic. 
            <para>
            The topic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ListTopicRulesResponse">
            <summary>
            The output from the ListTopicRules operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListTopicRulesResponse.NextMarker">
            <summary>
            Gets and sets the property NextMarker. 
            <para>
            A token used to retrieve the next value.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ListTopicRulesResponse.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            The rules.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.LoggingOptionsPayload">
            <summary>
            Describes the logging options payload.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.LoggingOptionsPayload.LogLevel">
            <summary>
            Gets and sets the property LogLevel. 
            <para>
            The logging level.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.LoggingOptionsPayload.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role that grants access.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.MalformedPolicyException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.MalformedPolicyException.#ctor(System.String)">
            <summary>
            Constructs a new MalformedPolicyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.MalformedPolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of MalformedPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.MalformedPolicyException.#ctor(System.Exception)">
            <summary>
            Construct instance of MalformedPolicyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.MalformedPolicyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedPolicyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.MalformedPolicyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of MalformedPolicyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.Policy">
            <summary>
            Describes an AWS IoT policy.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Policy.PolicyArn">
            <summary>
            Gets and sets the property PolicyArn. 
            <para>
            The policy ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.Policy.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The policy name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.PolicyVersion">
            <summary>
            Describes a policy version.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.PolicyVersion.CreateDate">
            <summary>
            Gets and sets the property CreateDate. 
            <para>
            The date and time the policy was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.PolicyVersion.IsDefaultVersion">
            <summary>
            Gets and sets the property IsDefaultVersion. 
            <para>
            Specifies whether the policy version is the default.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.PolicyVersion.VersionId">
            <summary>
            Gets and sets the property VersionId. 
            <para>
            The policy version ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.RejectCertificateTransferRequest">
            <summary>
            Container for the parameters to the RejectCertificateTransfer operation.
            Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer,
            the certificate status changes from <b>PENDING_TRANFER</b> to <b>INACTIVE</b>.
            
             
            <para>
            To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate
            your certificates.
            </para>
             
            <para>
            This operation can only be called by the transfer destination. After it is called,
            the certificate will be returned to the source's account in the INACTIVE state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.RejectCertificateTransferRequest.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The ID of the certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.RejectCertificateTransferResponse">
            <summary>
            This is the response object from the RejectCertificateTransfer operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ReplaceTopicRuleRequest">
            <summary>
            Container for the parameters to the ReplaceTopicRule operation.
            Replaces the specified rule. You must specify all parameters for the new rule. Creating
            rules is an administrator-level action. Any user who has permission to create rules
            will be able to access data processed by the rule.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ReplaceTopicRuleRequest.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ReplaceTopicRuleRequest.TopicRulePayload">
            <summary>
            Gets and sets the property TopicRulePayload. 
            <para>
            The rule payload.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ReplaceTopicRuleResponse">
            <summary>
            This is the response object from the ReplaceTopicRule operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.RepublishAction">
            <summary>
            Describes an action to republish to another topic.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.RepublishAction.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role that grants access.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.RepublishAction.Topic">
            <summary>
            Gets and sets the property Topic. 
            <para>
            The name of the MQTT topic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ResourceAlreadyExistsException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.ResourceAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.ResourceAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.ResourceAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.ResourceAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.ResourceAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.ResourceNotFoundException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.S3Action">
            <summary>
            Describes an action to write data to an Amazon S3 bucket.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.S3Action.BucketName">
            <summary>
            Gets and sets the property BucketName. 
            <para>
            The Amazon S3 bucket.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.S3Action.Key">
            <summary>
            Gets and sets the property Key. 
            <para>
            The object key.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.S3Action.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role that grants access.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ServiceUnavailableException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.ServiceUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.ServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.ServiceUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.ServiceUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.ServiceUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.SetDefaultPolicyVersionRequest">
            <summary>
            Container for the parameters to the SetDefaultPolicyVersion operation.
            Sets the specified version of the specified policy as the policy's default (operative)
            version. This action affects all certificates to which the policy is attached. To
            list the principals the policy is attached to, use the ListPrincipalPolicy API.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.SetDefaultPolicyVersionRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The policy name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.SetDefaultPolicyVersionRequest.PolicyVersionId">
            <summary>
            Gets and sets the property PolicyVersionId. 
            <para>
            The policy version ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.SetDefaultPolicyVersionResponse">
            <summary>
            This is the response object from the SetDefaultPolicyVersion operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.SetLoggingOptionsRequest">
            <summary>
            Container for the parameters to the SetLoggingOptions operation.
            Sets the logging options.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.SetLoggingOptionsRequest.LoggingOptionsPayload">
            <summary>
            Gets and sets the property LoggingOptionsPayload. 
            <para>
            The logging options payload.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.SetLoggingOptionsResponse">
            <summary>
            This is the response object from the SetLoggingOptions operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.SnsAction">
            <summary>
            Describes an action to publish to an Amazon SNS topic.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.SnsAction.MessageFormat">
            <summary>
            Gets and sets the property MessageFormat. 
            <para>
            The message format of the message to publish. Optional. Accepted values are "JSON"
            and "RAW". The default value of the attribute is "RAW". SNS uses this setting to determine
            if the payload should be parsed and relevant platform-specific bits of the payload
            should be extracted. To read more about SNS message formats, see <a href="http://docs.aws.amazon.com/sns/latest/dg/json-formats.html"></a>
            refer to their official documentation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.SnsAction.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role that grants access.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.SnsAction.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            The ARN of the SNS topic.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.SqlParseException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.SqlParseException.#ctor(System.String)">
            <summary>
            Constructs a new SqlParseException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.SqlParseException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SqlParseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.SqlParseException.#ctor(System.Exception)">
            <summary>
            Construct instance of SqlParseException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.SqlParseException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SqlParseException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.SqlParseException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SqlParseException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.SqsAction">
            <summary>
            Describes an action to publish data to an Amazon SQS queue.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.SqsAction.QueueUrl">
            <summary>
            Gets and sets the property QueueUrl. 
            <para>
            The URL of the Amazon SQS queue.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.SqsAction.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of the IAM role that grants access.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.SqsAction.UseBase64">
            <summary>
            Gets and sets the property UseBase64. 
            <para>
            Specifies whether to use Base64 encoding.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ThingAttribute">
            <summary>
            Describes a thing attribute.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ThingAttribute.Attributes">
            <summary>
            Gets and sets the property Attributes. 
            <para>
            The attributes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.ThingAttribute.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The name of the thing.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.ThrottlingException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.ThrottlingException.#ctor(System.String)">
            <summary>
            Constructs a new ThrottlingException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.ThrottlingException.#ctor(System.Exception)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.ThrottlingException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.ThrottlingException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ThrottlingException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.TopicRule">
            <summary>
            Describes a rule.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRule.Actions">
            <summary>
            Gets and sets the property Actions. 
            <para>
            The actions associated with the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRule.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date and time the rule was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRule.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRule.RuleDisabled">
            <summary>
            Gets and sets the property RuleDisabled. 
            <para>
            Specifies whether the rule is disabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRule.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRule.Sql">
            <summary>
            Gets and sets the property Sql. 
            <para>
            The SQL statement used to query the topic. When using a SQL query with multiple lines,
            be sure to escape the newline characters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.TopicRuleListItem">
            <summary>
            Describes a rule.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRuleListItem.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The date and time the rule was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRuleListItem.RuleArn">
            <summary>
            Gets and sets the property RuleArn. 
            <para>
            The rule ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRuleListItem.RuleDisabled">
            <summary>
            Gets and sets the property RuleDisabled. 
            <para>
            Specifies whether the rule is disabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRuleListItem.RuleName">
            <summary>
            Gets and sets the property RuleName. 
            <para>
            The name of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRuleListItem.TopicPattern">
            <summary>
            Gets and sets the property TopicPattern. 
            <para>
            The pattern for the topic names that apply.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.TopicRulePayload">
            <summary>
            Describes a rule.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRulePayload.Actions">
            <summary>
            Gets and sets the property Actions. 
            <para>
            The actions associated with the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRulePayload.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The description of the rule.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRulePayload.RuleDisabled">
            <summary>
            Gets and sets the property RuleDisabled. 
            <para>
            Specifies whether the rule is disabled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TopicRulePayload.Sql">
            <summary>
            Gets and sets the property Sql. 
            <para>
            The SQL statement used to query the topic. For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference">AWS
            IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.TransferAlreadyCompletedException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.TransferAlreadyCompletedException.#ctor(System.String)">
            <summary>
            Constructs a new TransferAlreadyCompletedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.TransferAlreadyCompletedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TransferAlreadyCompletedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.TransferAlreadyCompletedException.#ctor(System.Exception)">
            <summary>
            Construct instance of TransferAlreadyCompletedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.TransferAlreadyCompletedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TransferAlreadyCompletedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.TransferAlreadyCompletedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TransferAlreadyCompletedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.TransferCertificateRequest">
            <summary>
            Container for the parameters to the TransferCertificate operation.
            Transfers the specified certificate to the specified AWS account.
            
             
            <para>
            You can cancel the transfer until it is acknowledged by the recipient.
            </para>
             
            <para>
            No notification is sent to the transfer destination's account. It is up to the caller
            to notify the transfer target.
            </para>
             
            <para>
            The certificate being transferred must not be in the ACTIVE state. You can use the
            UpdateCertificate API to deactivate it.
            </para>
             
            <para>
            The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy
            API to detach them.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TransferCertificateRequest.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The ID of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TransferCertificateRequest.TargetAwsAccount">
            <summary>
            Gets and sets the property TargetAwsAccount. 
            <para>
            The AWS account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.TransferCertificateResponse">
            <summary>
            The output from the TransferCertificate operation.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.TransferCertificateResponse.TransferredCertificateArn">
            <summary>
            Gets and sets the property TransferredCertificateArn. 
            <para>
            The ARN of the certificate.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.TransferConflictException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.TransferConflictException.#ctor(System.String)">
            <summary>
            Constructs a new TransferConflictException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.TransferConflictException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of TransferConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.TransferConflictException.#ctor(System.Exception)">
            <summary>
            Construct instance of TransferConflictException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.TransferConflictException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TransferConflictException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.TransferConflictException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of TransferConflictException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.UnauthorizedException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.UnauthorizedException.#ctor(System.String)">
            <summary>
            Constructs a new UnauthorizedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.UnauthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnauthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.UnauthorizedException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnauthorizedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.UnauthorizedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnauthorizedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.UnauthorizedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnauthorizedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.UpdateCertificateRequest">
            <summary>
            Container for the parameters to the UpdateCertificate operation.
            Updates the status of the specified certificate. This operation is idempotent.
            
             
            <para>
            Moving a certificate from the ACTIVE state (including REVOKED) will not disconnect
            currently connected devices, but these devices will be unable to reconnect.
            </para>
             
            <para>
            The ACTIVE state is required to authenticate devices connecting to AWS IoT using a
            certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.UpdateCertificateRequest.CertificateId">
            <summary>
            Gets and sets the property CertificateId. 
            <para>
            The ID of the certificate.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.UpdateCertificateRequest.NewStatus">
            <summary>
            Gets and sets the property NewStatus. 
            <para>
            The new status.
            </para>
             
            <para>
            <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being
            thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended
            for developer use.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.UpdateCertificateResponse">
            <summary>
            This is the response object from the UpdateCertificate operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.UpdateThingRequest">
            <summary>
            Container for the parameters to the UpdateThing operation.
            Updates the data for a thing.
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.UpdateThingRequest.AttributePayload">
            <summary>
            Gets and sets the property AttributePayload. 
            <para>
            The attribute payload, a JSON string containing up to three key-value pairs (for example,
            {\"attributes\":{\"string1\":\"string2\"}}).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.IoT.Model.UpdateThingRequest.ThingName">
            <summary>
            Gets and sets the property ThingName. 
            <para>
            The thing name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.UpdateThingResponse">
            <summary>
            The output from the UpdateThing operation.
            </summary>
        </member>
        <member name="T:Amazon.IoT.Model.VersionsLimitExceededException">
            <summary>
             IoT exception
             </summary>
        </member>
        <member name="M:Amazon.IoT.Model.VersionsLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new VersionsLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.IoT.Model.VersionsLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of VersionsLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.VersionsLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of VersionsLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.Model.VersionsLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of VersionsLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.Model.VersionsLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of VersionsLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.AcceptCertificateTransferRequestMarshaller">
            <summary>
            AcceptCertificateTransfer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AcceptCertificateTransferRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AcceptCertificateTransferRequestMarshaller.Marshall(Amazon.IoT.Model.AcceptCertificateTransferRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.AcceptCertificateTransferResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AcceptCertificateTransfer operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AcceptCertificateTransferResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AcceptCertificateTransferResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.AcceptCertificateTransferResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ActionMarshaller">
            <summary>
            Action Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ActionMarshaller.Marshall(Amazon.IoT.Model.Action,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.ActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ActionUnmarshaller">
            <summary>
            Response Unmarshaller for Action Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#Action,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.ActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.AttachPrincipalPolicyRequestMarshaller">
            <summary>
            AttachPrincipalPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AttachPrincipalPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AttachPrincipalPolicyRequestMarshaller.Marshall(Amazon.IoT.Model.AttachPrincipalPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.AttachPrincipalPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachPrincipalPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AttachPrincipalPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AttachPrincipalPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.AttachPrincipalPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.AttachThingPrincipalRequestMarshaller">
            <summary>
            AttachThingPrincipal Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AttachThingPrincipalRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AttachThingPrincipalRequestMarshaller.Marshall(Amazon.IoT.Model.AttachThingPrincipalRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.AttachThingPrincipalResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AttachThingPrincipal operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AttachThingPrincipalResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AttachThingPrincipalResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.AttachThingPrincipalResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.AttributePayloadMarshaller">
            <summary>
            AttributePayload Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.AttributePayloadMarshaller.Marshall(Amazon.IoT.Model.AttributePayload,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.AttributePayloadMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CancelCertificateTransferRequestMarshaller">
            <summary>
            CancelCertificateTransfer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CancelCertificateTransferRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CancelCertificateTransferRequestMarshaller.Marshall(Amazon.IoT.Model.CancelCertificateTransferRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CancelCertificateTransferResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelCertificateTransfer operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CancelCertificateTransferResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CancelCertificateTransferResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.CancelCertificateTransferResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CertificateDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for CertificateDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CertificateDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#CertificateDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CertificateDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.CertificateDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CertificateUnmarshaller">
            <summary>
            Response Unmarshaller for Certificate Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CertificateUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#Certificate,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CertificateUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.CertificateUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchAlarmActionMarshaller">
            <summary>
            CloudwatchAlarmAction Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchAlarmActionMarshaller.Marshall(Amazon.IoT.Model.CloudwatchAlarmAction,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchAlarmActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchAlarmActionUnmarshaller">
            <summary>
            Response Unmarshaller for CloudwatchAlarmAction Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchAlarmActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#CloudwatchAlarmAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchAlarmActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchAlarmActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchMetricActionMarshaller">
            <summary>
            CloudwatchMetricAction Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchMetricActionMarshaller.Marshall(Amazon.IoT.Model.CloudwatchMetricAction,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchMetricActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchMetricActionUnmarshaller">
            <summary>
            Response Unmarshaller for CloudwatchMetricAction Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchMetricActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#CloudwatchMetricAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchMetricActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.CloudwatchMetricActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CreateCertificateFromCsrRequestMarshaller">
            <summary>
            CreateCertificateFromCsr Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateCertificateFromCsrRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateCertificateFromCsrRequestMarshaller.Marshall(Amazon.IoT.Model.CreateCertificateFromCsrRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CreateCertificateFromCsrResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateCertificateFromCsr operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateCertificateFromCsrResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateCertificateFromCsrResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.CreateCertificateFromCsrResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CreateKeysAndCertificateRequestMarshaller">
            <summary>
            CreateKeysAndCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateKeysAndCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateKeysAndCertificateRequestMarshaller.Marshall(Amazon.IoT.Model.CreateKeysAndCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CreateKeysAndCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateKeysAndCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateKeysAndCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateKeysAndCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.CreateKeysAndCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyRequestMarshaller">
            <summary>
            CreatePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyRequestMarshaller.Marshall(Amazon.IoT.Model.CreatePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyVersionRequestMarshaller">
            <summary>
            CreatePolicyVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyVersionRequestMarshaller.Marshall(Amazon.IoT.Model.CreatePolicyVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreatePolicyVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.CreatePolicyVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CreateThingRequestMarshaller">
            <summary>
            CreateThing Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateThingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateThingRequestMarshaller.Marshall(Amazon.IoT.Model.CreateThingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CreateThingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateThing operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateThingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateThingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.CreateThingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CreateTopicRuleRequestMarshaller">
            <summary>
            CreateTopicRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateTopicRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateTopicRuleRequestMarshaller.Marshall(Amazon.IoT.Model.CreateTopicRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.CreateTopicRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTopicRule operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateTopicRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.CreateTopicRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.CreateTopicRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller">
            <summary>
            DeleteCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteCertificateRequestMarshaller.Marshall(Amazon.IoT.Model.DeleteCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyRequestMarshaller">
            <summary>
            DeletePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyRequestMarshaller.Marshall(Amazon.IoT.Model.DeletePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyVersionRequestMarshaller">
            <summary>
            DeletePolicyVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyVersionRequestMarshaller.Marshall(Amazon.IoT.Model.DeletePolicyVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeletePolicyVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.DeletePolicyVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteThingRequestMarshaller">
            <summary>
            DeleteThing Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteThingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteThingRequestMarshaller.Marshall(Amazon.IoT.Model.DeleteThingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteThingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteThing operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteThingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteThingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteThingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteTopicRuleRequestMarshaller">
            <summary>
            DeleteTopicRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteTopicRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteTopicRuleRequestMarshaller.Marshall(Amazon.IoT.Model.DeleteTopicRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteTopicRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTopicRule operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteTopicRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteTopicRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.DeleteTopicRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller">
            <summary>
            DescribeCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeCertificateRequestMarshaller.Marshall(Amazon.IoT.Model.DescribeCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeEndpointRequestMarshaller">
            <summary>
            DescribeEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeEndpointRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeEndpointRequestMarshaller.Marshall(Amazon.IoT.Model.DescribeEndpointRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEndpoint operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeEndpointResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeEndpointResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeEndpointResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeThingRequestMarshaller">
            <summary>
            DescribeThing Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeThingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeThingRequestMarshaller.Marshall(Amazon.IoT.Model.DescribeThingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeThingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeThing operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeThingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeThingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.DescribeThingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DetachPrincipalPolicyRequestMarshaller">
            <summary>
            DetachPrincipalPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DetachPrincipalPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DetachPrincipalPolicyRequestMarshaller.Marshall(Amazon.IoT.Model.DetachPrincipalPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DetachPrincipalPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachPrincipalPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DetachPrincipalPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DetachPrincipalPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.DetachPrincipalPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DetachThingPrincipalRequestMarshaller">
            <summary>
            DetachThingPrincipal Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DetachThingPrincipalRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DetachThingPrincipalRequestMarshaller.Marshall(Amazon.IoT.Model.DetachThingPrincipalRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DetachThingPrincipalResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DetachThingPrincipal operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DetachThingPrincipalResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DetachThingPrincipalResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.DetachThingPrincipalResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DisableTopicRuleRequestMarshaller">
            <summary>
            DisableTopicRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DisableTopicRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DisableTopicRuleRequestMarshaller.Marshall(Amazon.IoT.Model.DisableTopicRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DisableTopicRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableTopicRule operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DisableTopicRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DisableTopicRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.DisableTopicRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DynamoDBActionMarshaller">
            <summary>
            DynamoDBAction Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DynamoDBActionMarshaller.Marshall(Amazon.IoT.Model.DynamoDBAction,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.DynamoDBActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.DynamoDBActionUnmarshaller">
            <summary>
            Response Unmarshaller for DynamoDBAction Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DynamoDBActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#DynamoDBAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.DynamoDBActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.DynamoDBActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ElasticsearchActionMarshaller">
            <summary>
            ElasticsearchAction Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ElasticsearchActionMarshaller.Marshall(Amazon.IoT.Model.ElasticsearchAction,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.ElasticsearchActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ElasticsearchActionUnmarshaller">
            <summary>
            Response Unmarshaller for ElasticsearchAction Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ElasticsearchActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#ElasticsearchAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ElasticsearchActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.ElasticsearchActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.EnableTopicRuleRequestMarshaller">
            <summary>
            EnableTopicRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.EnableTopicRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.EnableTopicRuleRequestMarshaller.Marshall(Amazon.IoT.Model.EnableTopicRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.EnableTopicRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableTopicRule operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.EnableTopicRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.EnableTopicRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.EnableTopicRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.FirehoseActionMarshaller">
            <summary>
            FirehoseAction Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.FirehoseActionMarshaller.Marshall(Amazon.IoT.Model.FirehoseAction,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.FirehoseActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.FirehoseActionUnmarshaller">
            <summary>
            Response Unmarshaller for FirehoseAction Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.FirehoseActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#FirehoseAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.FirehoseActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.FirehoseActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.GetLoggingOptionsRequestMarshaller">
            <summary>
            GetLoggingOptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetLoggingOptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetLoggingOptionsRequestMarshaller.Marshall(Amazon.IoT.Model.GetLoggingOptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.GetLoggingOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLoggingOptions operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetLoggingOptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetLoggingOptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.GetLoggingOptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyRequestMarshaller">
            <summary>
            GetPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyRequestMarshaller.Marshall(Amazon.IoT.Model.GetPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyVersionRequestMarshaller">
            <summary>
            GetPolicyVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyVersionRequestMarshaller.Marshall(Amazon.IoT.Model.GetPolicyVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetPolicyVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.GetPolicyVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.GetTopicRuleRequestMarshaller">
            <summary>
            GetTopicRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetTopicRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetTopicRuleRequestMarshaller.Marshall(Amazon.IoT.Model.GetTopicRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.GetTopicRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetTopicRule operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetTopicRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.GetTopicRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.GetTopicRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.KeyPairUnmarshaller">
            <summary>
            Response Unmarshaller for KeyPair Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.KeyPairUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#KeyPair,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.KeyPairUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.KeyPairUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.KinesisActionMarshaller">
            <summary>
            KinesisAction Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.KinesisActionMarshaller.Marshall(Amazon.IoT.Model.KinesisAction,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.KinesisActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.KinesisActionUnmarshaller">
            <summary>
            Response Unmarshaller for KinesisAction Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.KinesisActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#KinesisAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.KinesisActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.KinesisActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.LambdaActionMarshaller">
            <summary>
            LambdaAction Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.LambdaActionMarshaller.Marshall(Amazon.IoT.Model.LambdaAction,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.LambdaActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.LambdaActionUnmarshaller">
            <summary>
            Response Unmarshaller for LambdaAction Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.LambdaActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#LambdaAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.LambdaActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.LambdaActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller">
            <summary>
            ListCertificates Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListCertificatesRequestMarshaller.Marshall(Amazon.IoT.Model.ListCertificatesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListCertificates operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.ListCertificatesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListPoliciesRequestMarshaller">
            <summary>
            ListPolicies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPoliciesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPoliciesRequestMarshaller.Marshall(Amazon.IoT.Model.ListPoliciesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListPoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPolicies operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPoliciesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPoliciesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.ListPoliciesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListPolicyVersionsRequestMarshaller">
            <summary>
            ListPolicyVersions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPolicyVersionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPolicyVersionsRequestMarshaller.Marshall(Amazon.IoT.Model.ListPolicyVersionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListPolicyVersionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPolicyVersions operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPolicyVersionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPolicyVersionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.ListPolicyVersionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalPoliciesRequestMarshaller">
            <summary>
            ListPrincipalPolicies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalPoliciesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalPoliciesRequestMarshaller.Marshall(Amazon.IoT.Model.ListPrincipalPoliciesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalPoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPrincipalPolicies operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalPoliciesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalPoliciesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalPoliciesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalThingsRequestMarshaller">
            <summary>
            ListPrincipalThings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalThingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalThingsRequestMarshaller.Marshall(Amazon.IoT.Model.ListPrincipalThingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalThingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListPrincipalThings operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalThingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalThingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.ListPrincipalThingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingPrincipalsRequestMarshaller">
            <summary>
            ListThingPrincipals Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingPrincipalsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingPrincipalsRequestMarshaller.Marshall(Amazon.IoT.Model.ListThingPrincipalsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingPrincipalsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListThingPrincipals operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingPrincipalsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingPrincipalsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingPrincipalsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingsRequestMarshaller">
            <summary>
            ListThings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingsRequestMarshaller.Marshall(Amazon.IoT.Model.ListThingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListThings operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.ListThingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListTopicRulesRequestMarshaller">
            <summary>
            ListTopicRules Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListTopicRulesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListTopicRulesRequestMarshaller.Marshall(Amazon.IoT.Model.ListTopicRulesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ListTopicRulesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTopicRules operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListTopicRulesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ListTopicRulesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.ListTopicRulesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.LoggingOptionsPayloadMarshaller">
            <summary>
            LoggingOptionsPayload Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.LoggingOptionsPayloadMarshaller.Marshall(Amazon.IoT.Model.LoggingOptionsPayload,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.LoggingOptionsPayloadMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.PolicyUnmarshaller">
            <summary>
            Response Unmarshaller for Policy Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.PolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#Policy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.PolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.PolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.PolicyVersionUnmarshaller">
            <summary>
            Response Unmarshaller for PolicyVersion Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.PolicyVersionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#PolicyVersion,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.PolicyVersionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.PolicyVersionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.RejectCertificateTransferRequestMarshaller">
            <summary>
            RejectCertificateTransfer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.RejectCertificateTransferRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.RejectCertificateTransferRequestMarshaller.Marshall(Amazon.IoT.Model.RejectCertificateTransferRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.RejectCertificateTransferResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RejectCertificateTransfer operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.RejectCertificateTransferResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.RejectCertificateTransferResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.RejectCertificateTransferResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ReplaceTopicRuleRequestMarshaller">
            <summary>
            ReplaceTopicRule Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ReplaceTopicRuleRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ReplaceTopicRuleRequestMarshaller.Marshall(Amazon.IoT.Model.ReplaceTopicRuleRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ReplaceTopicRuleResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ReplaceTopicRule operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ReplaceTopicRuleResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ReplaceTopicRuleResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.ReplaceTopicRuleResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.RepublishActionMarshaller">
            <summary>
            RepublishAction Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.RepublishActionMarshaller.Marshall(Amazon.IoT.Model.RepublishAction,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.RepublishActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.RepublishActionUnmarshaller">
            <summary>
            Response Unmarshaller for RepublishAction Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.RepublishActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#RepublishAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.RepublishActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.RepublishActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.S3ActionMarshaller">
            <summary>
            S3Action Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.S3ActionMarshaller.Marshall(Amazon.IoT.Model.S3Action,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.S3ActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.S3ActionUnmarshaller">
            <summary>
            Response Unmarshaller for S3Action Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.S3ActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#S3Action,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.S3ActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.S3ActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.SetDefaultPolicyVersionRequestMarshaller">
            <summary>
            SetDefaultPolicyVersion Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SetDefaultPolicyVersionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SetDefaultPolicyVersionRequestMarshaller.Marshall(Amazon.IoT.Model.SetDefaultPolicyVersionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.SetDefaultPolicyVersionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetDefaultPolicyVersion operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SetDefaultPolicyVersionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SetDefaultPolicyVersionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.SetDefaultPolicyVersionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.SetLoggingOptionsRequestMarshaller">
            <summary>
            SetLoggingOptions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SetLoggingOptionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SetLoggingOptionsRequestMarshaller.Marshall(Amazon.IoT.Model.SetLoggingOptionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.SetLoggingOptionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for SetLoggingOptions operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SetLoggingOptionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SetLoggingOptionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.SetLoggingOptionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.SnsActionMarshaller">
            <summary>
            SnsAction Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SnsActionMarshaller.Marshall(Amazon.IoT.Model.SnsAction,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.SnsActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.SnsActionUnmarshaller">
            <summary>
            Response Unmarshaller for SnsAction Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SnsActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#SnsAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SnsActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.SnsActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.SqsActionMarshaller">
            <summary>
            SqsAction Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SqsActionMarshaller.Marshall(Amazon.IoT.Model.SqsAction,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.SqsActionMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.SqsActionUnmarshaller">
            <summary>
            Response Unmarshaller for SqsAction Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SqsActionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#SqsAction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.SqsActionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.SqsActionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.ThingAttributeUnmarshaller">
            <summary>
            Response Unmarshaller for ThingAttribute Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ThingAttributeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#ThingAttribute,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.ThingAttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.ThingAttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.TopicRuleListItemUnmarshaller">
            <summary>
            Response Unmarshaller for TopicRuleListItem Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.TopicRuleListItemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#TopicRuleListItem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.TopicRuleListItemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.TopicRuleListItemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.TopicRulePayloadMarshaller">
            <summary>
            TopicRulePayload Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.TopicRulePayloadMarshaller.Marshall(Amazon.IoT.Model.TopicRulePayload,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.IoT.Model.Internal.MarshallTransformations.TopicRulePayloadMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.TopicRuleUnmarshaller">
            <summary>
            Response Unmarshaller for TopicRule Object
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.TopicRuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#IoT#Model#TopicRule,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.TopicRuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.TopicRuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.TransferCertificateRequestMarshaller">
            <summary>
            TransferCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.TransferCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.TransferCertificateRequestMarshaller.Marshall(Amazon.IoT.Model.TransferCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.TransferCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TransferCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.TransferCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.TransferCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.TransferCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateCertificateRequestMarshaller">
            <summary>
            UpdateCertificate Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateCertificateRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateCertificateRequestMarshaller.Marshall(Amazon.IoT.Model.UpdateCertificateRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateCertificateResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateCertificate operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateCertificateResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateCertificateResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateCertificateResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateThingRequestMarshaller">
            <summary>
            UpdateThing Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateThingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateThingRequestMarshaller.Marshall(Amazon.IoT.Model.UpdateThingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateThingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateThing operation
            </summary>  
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateThingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateThingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.IoT.Model.Internal.MarshallTransformations.UpdateThingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.IoT.AmazonIoTConfig">
            <summary>
            Configuration for accessing Amazon IoT service
            </summary>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.IoT.AmazonIoTConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.IoT.AmazonIoTConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.IoT.AmazonIoTConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.IoT.AmazonIoTException">
            <summary>
             Common exception for the IoT service.
             </summary>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonIoTException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonIoTException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonIoTException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonIoTException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonIoTException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.IoT.CertificateStatus">
            <summary>
            Constants used for properties of type CertificateStatus.
            </summary>
        </member>
        <member name="F:Amazon.IoT.CertificateStatus.ACTIVE">
            <summary>
            Constant ACTIVE for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.IoT.CertificateStatus.INACTIVE">
            <summary>
            Constant INACTIVE for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.IoT.CertificateStatus.PENDING_TRANSFER">
            <summary>
            Constant PENDING_TRANSFER for CertificateStatus
            </summary>
        </member>
        <member name="F:Amazon.IoT.CertificateStatus.REVOKED">
            <summary>
            Constant REVOKED for CertificateStatus
            </summary>
        </member>
        <member name="M:Amazon.IoT.CertificateStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.IoT.CertificateStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.IoT.CertificateStatus.op_Implicit(System.String)~Amazon.IoT.CertificateStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.LogLevel">
            <summary>
            Constants used for properties of type LogLevel.
            </summary>
        </member>
        <member name="F:Amazon.IoT.LogLevel.DEBUG">
            <summary>
            Constant DEBUG for LogLevel
            </summary>
        </member>
        <member name="F:Amazon.IoT.LogLevel.DISABLED">
            <summary>
            Constant DISABLED for LogLevel
            </summary>
        </member>
        <member name="F:Amazon.IoT.LogLevel.ERROR">
            <summary>
            Constant ERROR for LogLevel
            </summary>
        </member>
        <member name="F:Amazon.IoT.LogLevel.INFO">
            <summary>
            Constant INFO for LogLevel
            </summary>
        </member>
        <member name="F:Amazon.IoT.LogLevel.WARN">
            <summary>
            Constant WARN for LogLevel
            </summary>
        </member>
        <member name="M:Amazon.IoT.LogLevel.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.IoT.LogLevel.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.IoT.LogLevel.op_Implicit(System.String)~Amazon.IoT.LogLevel">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.MessageFormat">
            <summary>
            Constants used for properties of type MessageFormat.
            </summary>
        </member>
        <member name="F:Amazon.IoT.MessageFormat.JSON">
            <summary>
            Constant JSON for MessageFormat
            </summary>
        </member>
        <member name="F:Amazon.IoT.MessageFormat.RAW">
            <summary>
            Constant RAW for MessageFormat
            </summary>
        </member>
        <member name="M:Amazon.IoT.MessageFormat.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.IoT.MessageFormat.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.IoT.MessageFormat.op_Implicit(System.String)~Amazon.IoT.MessageFormat">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.IoT.AmazonIoTRequest">
            <summary>
            Base class for IoT operation requests.
            </summary>
        </member>
        <member name="T:Amazon.IoT.AmazonIoTClient">
             <summary>
             Implementation for accessing IoT
            
             AWS IoT 
             <para>
             AWS IoT provides secure, bi-directional communication between Internet-connected things
             (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud.
             You can discover your custom IoT-Data endpoint to communicate with, configure rules
             for data processing and integration with other services, organize resources associated
             with each thing (Thing Registry), configure logging, and create and manage policies
             and credentials to authenticate things.
             </para>
              
             <para>
             For more information about how AWS IoT works, see the <a href="http://docs.aws.amazon.com/iot/latest/developerguide/aws-iot-how-it-works.html">Developer
             Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.#ctor">
             <summary>
             Constructs AmazonIoTClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonIoTClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.#ctor(Amazon.IoT.AmazonIoTConfig)">
             <summary>
             Constructs AmazonIoTClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonIoTClient Configuration Object</param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonIoTClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonIoTClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.IoT.AmazonIoTConfig)">
            <summary>
            Constructs AmazonIoTClient with AWS Credentials and an
            AmazonIoTClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonIoTClient Configuration Object</param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonIoTClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonIoTClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.#ctor(System.String,System.String,Amazon.IoT.AmazonIoTConfig)">
            <summary>
            Constructs AmazonIoTClient with AWS Access Key ID, AWS Secret Key and an
            AmazonIoTClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonIoTClient Configuration Object</param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonIoTClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonIoTClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.#ctor(System.String,System.String,System.String,Amazon.IoT.AmazonIoTConfig)">
            <summary>
            Constructs AmazonIoTClient with AWS Access Key ID, AWS Secret Key and an
            AmazonIoTClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonIoTClient Configuration Object</param>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.AcceptCertificateTransfer(Amazon.IoT.Model.AcceptCertificateTransferRequest)">
            <summary>
            Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.
            
             
            <para>
            To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate
            your certificates.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AcceptCertificateTransfer service method.</param>
            
            <returns>The response from the AcceptCertificateTransfer service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferAlreadyCompletedException">
            You can't revert the certificate transfer because the transfer is already complete.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginAcceptCertificateTransfer(Amazon.IoT.Model.AcceptCertificateTransferRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AcceptCertificateTransfer operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AcceptCertificateTransfer operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAcceptCertificateTransfer
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndAcceptCertificateTransfer(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AcceptCertificateTransfer operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAcceptCertificateTransfer.</param>
            
            <returns>Returns a  AcceptCertificateTransferResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.AttachPrincipalPolicy(System.String,System.String)">
            <summary>
            Attaches the specified policy to the specified principal (certificate or other credential).
            </summary>
            <param name="policyName">The policy name.</param>
            <param name="principal">The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</param>
            
            <returns>The response from the AttachPrincipalPolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.LimitExceededException">
            The number of attached entities exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.AttachPrincipalPolicy(Amazon.IoT.Model.AttachPrincipalPolicyRequest)">
            <summary>
            Attaches the specified policy to the specified principal (certificate or other credential).
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachPrincipalPolicy service method.</param>
            
            <returns>The response from the AttachPrincipalPolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.LimitExceededException">
            The number of attached entities exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginAttachPrincipalPolicy(Amazon.IoT.Model.AttachPrincipalPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AttachPrincipalPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachPrincipalPolicy operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAttachPrincipalPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndAttachPrincipalPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AttachPrincipalPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAttachPrincipalPolicy.</param>
            
            <returns>Returns a  AttachPrincipalPolicyResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.AttachThingPrincipal(System.String,System.String)">
            <summary>
            Attaches the specified principal to the specified thing.
            </summary>
            <param name="thingName">The name of the thing.</param>
            <param name="principal">The principal (certificate or other credential).</param>
            
            <returns>The response from the AttachThingPrincipal service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.AttachThingPrincipal(Amazon.IoT.Model.AttachThingPrincipalRequest)">
            <summary>
            Attaches the specified principal to the specified thing.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachThingPrincipal service method.</param>
            
            <returns>The response from the AttachThingPrincipal service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginAttachThingPrincipal(Amazon.IoT.Model.AttachThingPrincipalRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AttachThingPrincipal operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachThingPrincipal operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAttachThingPrincipal
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndAttachThingPrincipal(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AttachThingPrincipal operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAttachThingPrincipal.</param>
            
            <returns>Returns a  AttachThingPrincipalResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CancelCertificateTransfer(System.String)">
            <summary>
            Cancels a pending transfer for the specified certificate.
            
             
            <para>
            <b>Note</b> Only the transfer source account can use this operation to cancel a transfer.
            (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer,
            AWS IoT returns the certificate to the source account in the INACTIVE state. After
            the destination account has accepted the transfer, the transfer cannot be cancelled.
            </para>
             
            <para>
            After a certificate transfer is cancelled, the status of the certificate changes from
            PENDING_TRANSFER to INACTIVE.
            </para>
            </summary>
            <param name="certificateId">The ID of the certificate.</param>
            
            <returns>The response from the CancelCertificateTransfer service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferAlreadyCompletedException">
            You can't revert the certificate transfer because the transfer is already complete.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CancelCertificateTransfer(Amazon.IoT.Model.CancelCertificateTransferRequest)">
            <summary>
            Cancels a pending transfer for the specified certificate.
            
             
            <para>
            <b>Note</b> Only the transfer source account can use this operation to cancel a transfer.
            (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer,
            AWS IoT returns the certificate to the source account in the INACTIVE state. After
            the destination account has accepted the transfer, the transfer cannot be cancelled.
            </para>
             
            <para>
            After a certificate transfer is cancelled, the status of the certificate changes from
            PENDING_TRANSFER to INACTIVE.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelCertificateTransfer service method.</param>
            
            <returns>The response from the CancelCertificateTransfer service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferAlreadyCompletedException">
            You can't revert the certificate transfer because the transfer is already complete.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginCancelCertificateTransfer(Amazon.IoT.Model.CancelCertificateTransferRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CancelCertificateTransfer operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelCertificateTransfer operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCancelCertificateTransfer
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndCancelCertificateTransfer(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CancelCertificateTransfer operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCancelCertificateTransfer.</param>
            
            <returns>Returns a  CancelCertificateTransferResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreateCertificateFromCsr(System.String)">
            <summary>
            Creates an X.509 certificate using the specified certificate signing request.
            
             
            <para>
            <b>Note</b> Reusing the same certificate signing request (CSR) results in a distinct
            certificate.
            </para>
             
            <para>
            You can create multiple certificates in a batch by creating a directory, copying multiple
            .csr files into that directory, and then specifying that directory on the command
            line. The following commands show how to create a batch of certificates given a batch
            of CSRs. 
            </para>
             
            <para>
            Assuming a set of CSRs are located inside of the directory my-csr-directory:
            </para>
            &gt; 
            <para>
            On Linux and OS X, the command is:
            </para>
             
            <para>
            $ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{}
            </para>
             
            <para>
             This command lists all of the CSRs in my-csr-directory and pipes each CSR file name
            to the aws iot create-certificate-from-csr AWS CLI command to create a certificate
            for the corresponding CSR. 
            </para>
             
            <para>
             The aws iot create-certificate-from-csr part of the command can also be run in parallel
            to speed up the certificate creation process: 
            </para>
             
            <para>
             $ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{} 
            </para>
             
            <para>
             On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/$_} 
            </para>
             
            <para>
             On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr
            --certificate-signing-request file://@path"
            </para>
            </summary>
            <param name="certificateSigningRequest">The certificate signing request (CSR).</param>
            
            <returns>The response from the CreateCertificateFromCsr service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreateCertificateFromCsr(System.String,System.Boolean)">
            <summary>
            Creates an X.509 certificate using the specified certificate signing request.
            
             
            <para>
            <b>Note</b> Reusing the same certificate signing request (CSR) results in a distinct
            certificate.
            </para>
             
            <para>
            You can create multiple certificates in a batch by creating a directory, copying multiple
            .csr files into that directory, and then specifying that directory on the command
            line. The following commands show how to create a batch of certificates given a batch
            of CSRs. 
            </para>
             
            <para>
            Assuming a set of CSRs are located inside of the directory my-csr-directory:
            </para>
            &gt; 
            <para>
            On Linux and OS X, the command is:
            </para>
             
            <para>
            $ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{}
            </para>
             
            <para>
             This command lists all of the CSRs in my-csr-directory and pipes each CSR file name
            to the aws iot create-certificate-from-csr AWS CLI command to create a certificate
            for the corresponding CSR. 
            </para>
             
            <para>
             The aws iot create-certificate-from-csr part of the command can also be run in parallel
            to speed up the certificate creation process: 
            </para>
             
            <para>
             $ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{} 
            </para>
             
            <para>
             On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/$_} 
            </para>
             
            <para>
             On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr
            --certificate-signing-request file://@path"
            </para>
            </summary>
            <param name="certificateSigningRequest">The certificate signing request (CSR).</param>
            <param name="setAsActive">Specifies whether the certificate is active.</param>
            
            <returns>The response from the CreateCertificateFromCsr service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreateCertificateFromCsr(Amazon.IoT.Model.CreateCertificateFromCsrRequest)">
            <summary>
            Creates an X.509 certificate using the specified certificate signing request.
            
             
            <para>
            <b>Note</b> Reusing the same certificate signing request (CSR) results in a distinct
            certificate.
            </para>
             
            <para>
            You can create multiple certificates in a batch by creating a directory, copying multiple
            .csr files into that directory, and then specifying that directory on the command
            line. The following commands show how to create a batch of certificates given a batch
            of CSRs. 
            </para>
             
            <para>
            Assuming a set of CSRs are located inside of the directory my-csr-directory:
            </para>
            &gt; 
            <para>
            On Linux and OS X, the command is:
            </para>
             
            <para>
            $ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{}
            </para>
             
            <para>
             This command lists all of the CSRs in my-csr-directory and pipes each CSR file name
            to the aws iot create-certificate-from-csr AWS CLI command to create a certificate
            for the corresponding CSR. 
            </para>
             
            <para>
             The aws iot create-certificate-from-csr part of the command can also be run in parallel
            to speed up the certificate creation process: 
            </para>
             
            <para>
             $ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{} 
            </para>
             
            <para>
             On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/$_} 
            </para>
             
            <para>
             On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr
            --certificate-signing-request file://@path"
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCertificateFromCsr service method.</param>
            
            <returns>The response from the CreateCertificateFromCsr service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginCreateCertificateFromCsr(Amazon.IoT.Model.CreateCertificateFromCsrRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateCertificateFromCsr operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateCertificateFromCsr operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateCertificateFromCsr
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndCreateCertificateFromCsr(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateCertificateFromCsr operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateCertificateFromCsr.</param>
            
            <returns>Returns a  CreateCertificateFromCsrResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreateKeysAndCertificate">
            <summary>
            Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public
            key.
            
             
            <para>
            <b>Note</b> This is the only time AWS IoT issues the private key for this certificate,
            so it is important to keep it in a secure location.
            </para>
            </summary>
            
            <returns>The response from the CreateKeysAndCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreateKeysAndCertificate(System.Boolean)">
            <summary>
            Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public
            key.
            
             
            <para>
            <b>Note</b> This is the only time AWS IoT issues the private key for this certificate,
            so it is important to keep it in a secure location.
            </para>
            </summary>
            <param name="setAsActive">Specifies whether the certificate is active.</param>
            
            <returns>The response from the CreateKeysAndCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreateKeysAndCertificate(Amazon.IoT.Model.CreateKeysAndCertificateRequest)">
            <summary>
            Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public
            key.
            
             
            <para>
            <b>Note</b> This is the only time AWS IoT issues the private key for this certificate,
            so it is important to keep it in a secure location.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateKeysAndCertificate service method.</param>
            
            <returns>The response from the CreateKeysAndCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginCreateKeysAndCertificate(Amazon.IoT.Model.CreateKeysAndCertificateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateKeysAndCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateKeysAndCertificate operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateKeysAndCertificate
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndCreateKeysAndCertificate(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateKeysAndCertificate operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateKeysAndCertificate.</param>
            
            <returns>Returns a  CreateKeysAndCertificateResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreatePolicy(System.String,System.String)">
            <summary>
            Creates an AWS IoT policy.
            
             
            <para>
            The created policy is the default version for the policy. This operation creates a
            policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's
            default version.
            </para>
            </summary>
            <param name="policyName">The policy name.</param>
            <param name="policyDocument">The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</param>
            
            <returns>The response from the CreatePolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.MalformedPolicyException">
            The policy documentation is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceAlreadyExistsException">
            The resource already exists.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreatePolicy(Amazon.IoT.Model.CreatePolicyRequest)">
            <summary>
            Creates an AWS IoT policy.
            
             
            <para>
            The created policy is the default version for the policy. This operation creates a
            policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's
            default version.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePolicy service method.</param>
            
            <returns>The response from the CreatePolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.MalformedPolicyException">
            The policy documentation is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceAlreadyExistsException">
            The resource already exists.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginCreatePolicy(Amazon.IoT.Model.CreatePolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreatePolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreatePolicy operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreatePolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndCreatePolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreatePolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreatePolicy.</param>
            
            <returns>Returns a  CreatePolicyResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreatePolicyVersion(System.String,System.String)">
            <summary>
            Creates a new version of the specified AWS IoT policy. To update a policy, create
            a new policy version. A managed policy can have up to five versions. If the policy
            has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version
            before you create a new one.
            
             
            <para>
            Optionally, you can set the new version as the policy's default version. The default
            version is the operative version (that is, the version that is in effect for the certificates
            to which the policy is attached).
            </para>
            </summary>
            <param name="policyName">The policy name.</param>
            <param name="policyDocument">The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</param>
            
            <returns>The response from the CreatePolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.MalformedPolicyException">
            The policy documentation is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.IoT.Model.VersionsLimitExceededException">
            The number of policy versions exceeds the limit.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreatePolicyVersion(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new version of the specified AWS IoT policy. To update a policy, create
            a new policy version. A managed policy can have up to five versions. If the policy
            has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version
            before you create a new one.
            
             
            <para>
            Optionally, you can set the new version as the policy's default version. The default
            version is the operative version (that is, the version that is in effect for the certificates
            to which the policy is attached).
            </para>
            </summary>
            <param name="policyName">The policy name.</param>
            <param name="policyDocument">The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</param>
            <param name="setAsDefault">Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</param>
            
            <returns>The response from the CreatePolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.MalformedPolicyException">
            The policy documentation is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.IoT.Model.VersionsLimitExceededException">
            The number of policy versions exceeds the limit.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreatePolicyVersion(Amazon.IoT.Model.CreatePolicyVersionRequest)">
            <summary>
            Creates a new version of the specified AWS IoT policy. To update a policy, create
            a new policy version. A managed policy can have up to five versions. If the policy
            has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version
            before you create a new one.
            
             
            <para>
            Optionally, you can set the new version as the policy's default version. The default
            version is the operative version (that is, the version that is in effect for the certificates
            to which the policy is attached).
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePolicyVersion service method.</param>
            
            <returns>The response from the CreatePolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.MalformedPolicyException">
            The policy documentation is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.IoT.Model.VersionsLimitExceededException">
            The number of policy versions exceeds the limit.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginCreatePolicyVersion(Amazon.IoT.Model.CreatePolicyVersionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreatePolicyVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreatePolicyVersion operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreatePolicyVersion
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndCreatePolicyVersion(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreatePolicyVersion operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreatePolicyVersion.</param>
            
            <returns>Returns a  CreatePolicyVersionResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreateThing(Amazon.IoT.Model.CreateThingRequest)">
            <summary>
            Creates a thing in the Thing Registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateThing service method.</param>
            
            <returns>The response from the CreateThing service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceAlreadyExistsException">
            The resource already exists.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginCreateThing(Amazon.IoT.Model.CreateThingRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateThing operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateThing operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateThing
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndCreateThing(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateThing operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateThing.</param>
            
            <returns>Returns a  CreateThingResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.CreateTopicRule(Amazon.IoT.Model.CreateTopicRuleRequest)">
            <summary>
            Creates a rule. Creating rules is an administrator-level action. Any user who has
            permission to create rules will be able to access data processed by the rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTopicRule service method.</param>
            
            <returns>The response from the CreateTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceAlreadyExistsException">
            The resource already exists.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.SqlParseException">
            The Rule-SQL expression can't be parsed correctly.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginCreateTopicRule(Amazon.IoT.Model.CreateTopicRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateTopicRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTopicRule operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateTopicRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndCreateTopicRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateTopicRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateTopicRule.</param>
            
            <returns>Returns a  CreateTopicRuleResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DeleteCertificate(System.String)">
            <summary>
            Deletes the specified certificate.
            
             
            <para>
            A certificate cannot be deleted if it has a policy attached to it or if its status
            is set to ACTIVE. To delete a certificate, first use the <a>DetachPrincipalPolicy</a>
            API to detach all policies. Next, use the <a>UpdateCertificate</a> API to set the
            certificate to the INACTIVE status.
            </para>
            </summary>
            <param name="certificateId">The ID of the certificate.</param>
            
            <returns>The response from the DeleteCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.CertificateStateException">
            The certificate operation is not allowed.
            </exception>
            <exception cref="T:Amazon.IoT.Model.DeleteConflictException">
            You can't delete the resource because it is attached to one or more resources.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DeleteCertificate(Amazon.IoT.Model.DeleteCertificateRequest)">
            <summary>
            Deletes the specified certificate.
            
             
            <para>
            A certificate cannot be deleted if it has a policy attached to it or if its status
            is set to ACTIVE. To delete a certificate, first use the <a>DetachPrincipalPolicy</a>
            API to detach all policies. Next, use the <a>UpdateCertificate</a> API to set the
            certificate to the INACTIVE status.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate service method.</param>
            
            <returns>The response from the DeleteCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.CertificateStateException">
            The certificate operation is not allowed.
            </exception>
            <exception cref="T:Amazon.IoT.Model.DeleteConflictException">
            You can't delete the resource because it is attached to one or more resources.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginDeleteCertificate(Amazon.IoT.Model.DeleteCertificateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteCertificate
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndDeleteCertificate(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteCertificate operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteCertificate.</param>
            
            <returns>Returns a  DeleteCertificateResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DeletePolicy(System.String)">
            <summary>
            Deletes the specified policy.
            
             
            <para>
            A policy cannot be deleted if it has non-default versions or it is attached to any
            certificate.
            </para>
             
            <para>
            To delete a policy, use the DeletePolicyVersion API to delete all non-default versions
            of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate;
            and then use the DeletePolicy API to delete the policy.
            </para>
             
            <para>
            When a policy is deleted using DeletePolicy, its default version is deleted with it.
            </para>
            </summary>
            <param name="policyName">The name of the policy to delete.</param>
            
            <returns>The response from the DeletePolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.DeleteConflictException">
            You can't delete the resource because it is attached to one or more resources.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DeletePolicy(Amazon.IoT.Model.DeletePolicyRequest)">
            <summary>
            Deletes the specified policy.
            
             
            <para>
            A policy cannot be deleted if it has non-default versions or it is attached to any
            certificate.
            </para>
             
            <para>
            To delete a policy, use the DeletePolicyVersion API to delete all non-default versions
            of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate;
            and then use the DeletePolicy API to delete the policy.
            </para>
             
            <para>
            When a policy is deleted using DeletePolicy, its default version is deleted with it.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePolicy service method.</param>
            
            <returns>The response from the DeletePolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.DeleteConflictException">
            You can't delete the resource because it is attached to one or more resources.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginDeletePolicy(Amazon.IoT.Model.DeletePolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeletePolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeletePolicy operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeletePolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndDeletePolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeletePolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeletePolicy.</param>
            
            <returns>Returns a  DeletePolicyResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DeletePolicyVersion(System.String,System.String)">
            <summary>
            Deletes the specified version of the specified policy. You cannot delete the default
            version of a policy using this API. To delete the default version of a policy, use
            <a>DeletePolicy</a>. To find out which version of a policy is marked as the default
            version, use ListPolicyVersions.
            </summary>
            <param name="policyName">The name of the policy.</param>
            <param name="policyVersionId">The policy version ID.</param>
            
            <returns>The response from the DeletePolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.DeleteConflictException">
            You can't delete the resource because it is attached to one or more resources.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DeletePolicyVersion(Amazon.IoT.Model.DeletePolicyVersionRequest)">
            <summary>
            Deletes the specified version of the specified policy. You cannot delete the default
            version of a policy using this API. To delete the default version of a policy, use
            <a>DeletePolicy</a>. To find out which version of a policy is marked as the default
            version, use ListPolicyVersions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePolicyVersion service method.</param>
            
            <returns>The response from the DeletePolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.DeleteConflictException">
            You can't delete the resource because it is attached to one or more resources.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginDeletePolicyVersion(Amazon.IoT.Model.DeletePolicyVersionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeletePolicyVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeletePolicyVersion operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeletePolicyVersion
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndDeletePolicyVersion(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeletePolicyVersion operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeletePolicyVersion.</param>
            
            <returns>Returns a  DeletePolicyVersionResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DeleteThing(System.String)">
            <summary>
            Deletes the specified thing from the Thing Registry.
            </summary>
            <param name="thingName">The thing name.</param>
            
            <returns>The response from the DeleteThing service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DeleteThing(Amazon.IoT.Model.DeleteThingRequest)">
            <summary>
            Deletes the specified thing from the Thing Registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteThing service method.</param>
            
            <returns>The response from the DeleteThing service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginDeleteThing(Amazon.IoT.Model.DeleteThingRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteThing operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteThing operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteThing
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndDeleteThing(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteThing operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteThing.</param>
            
            <returns>Returns a  DeleteThingResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DeleteTopicRule(System.String)">
            <summary>
            Deletes the specified rule.
            </summary>
            <param name="ruleName">The name of the rule.</param>
            
            <returns>The response from the DeleteTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DeleteTopicRule(Amazon.IoT.Model.DeleteTopicRuleRequest)">
            <summary>
            Deletes the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTopicRule service method.</param>
            
            <returns>The response from the DeleteTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginDeleteTopicRule(Amazon.IoT.Model.DeleteTopicRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteTopicRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTopicRule operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteTopicRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndDeleteTopicRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteTopicRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteTopicRule.</param>
            
            <returns>Returns a  DeleteTopicRuleResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DescribeCertificate(System.String)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name="certificateId">The ID of the certificate.</param>
            
            <returns>The response from the DescribeCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DescribeCertificate(Amazon.IoT.Model.DescribeCertificateRequest)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate service method.</param>
            
            <returns>The response from the DescribeCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginDescribeCertificate(Amazon.IoT.Model.DescribeCertificateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeCertificate
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndDescribeCertificate(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeCertificate operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeCertificate.</param>
            
            <returns>Returns a  DescribeCertificateResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DescribeEndpoint">
            <summary>
            Returns a unique endpoint specific to the AWS account making the call. You specify
            the following URI when updating state information for your thing: https://<i>endpoint</i>/things/<i>thingName</i>/shadow.
            </summary>
            
            <returns>The response from the DescribeEndpoint service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DescribeEndpoint(Amazon.IoT.Model.DescribeEndpointRequest)">
            <summary>
            Returns a unique endpoint specific to the AWS account making the call. You specify
            the following URI when updating state information for your thing: https://<i>endpoint</i>/things/<i>thingName</i>/shadow.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEndpoint service method.</param>
            
            <returns>The response from the DescribeEndpoint service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginDescribeEndpoint(Amazon.IoT.Model.DescribeEndpointRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeEndpoint operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeEndpoint operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeEndpoint
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndDescribeEndpoint(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeEndpoint operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeEndpoint.</param>
            
            <returns>Returns a  DescribeEndpointResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DescribeThing(System.String)">
            <summary>
            Gets information about the specified thing.
            </summary>
            <param name="thingName">The name of the thing.</param>
            
            <returns>The response from the DescribeThing service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DescribeThing(Amazon.IoT.Model.DescribeThingRequest)">
            <summary>
            Gets information about the specified thing.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeThing service method.</param>
            
            <returns>The response from the DescribeThing service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginDescribeThing(Amazon.IoT.Model.DescribeThingRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeThing operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeThing operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeThing
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndDescribeThing(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeThing operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeThing.</param>
            
            <returns>Returns a  DescribeThingResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DetachPrincipalPolicy(System.String,System.String)">
            <summary>
            Removes the specified policy from the specified certificate.
            </summary>
            <param name="policyName">The name of the policy to detach.</param>
            <param name="principal">The principal. If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</param>
            
            <returns>The response from the DetachPrincipalPolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DetachPrincipalPolicy(Amazon.IoT.Model.DetachPrincipalPolicyRequest)">
            <summary>
            Removes the specified policy from the specified certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachPrincipalPolicy service method.</param>
            
            <returns>The response from the DetachPrincipalPolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginDetachPrincipalPolicy(Amazon.IoT.Model.DetachPrincipalPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DetachPrincipalPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachPrincipalPolicy operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDetachPrincipalPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndDetachPrincipalPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DetachPrincipalPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDetachPrincipalPolicy.</param>
            
            <returns>Returns a  DetachPrincipalPolicyResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DetachThingPrincipal(System.String,System.String)">
            <summary>
            Detaches the specified principal from the specified thing.
            </summary>
            <param name="thingName">The name of the thing.</param>
            <param name="principal">The principal.</param>
            
            <returns>The response from the DetachThingPrincipal service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DetachThingPrincipal(Amazon.IoT.Model.DetachThingPrincipalRequest)">
            <summary>
            Detaches the specified principal from the specified thing.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachThingPrincipal service method.</param>
            
            <returns>The response from the DetachThingPrincipal service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginDetachThingPrincipal(Amazon.IoT.Model.DetachThingPrincipalRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DetachThingPrincipal operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachThingPrincipal operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDetachThingPrincipal
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndDetachThingPrincipal(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DetachThingPrincipal operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDetachThingPrincipal.</param>
            
            <returns>Returns a  DetachThingPrincipalResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.DisableTopicRule(Amazon.IoT.Model.DisableTopicRuleRequest)">
            <summary>
            Disables the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableTopicRule service method.</param>
            
            <returns>The response from the DisableTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginDisableTopicRule(Amazon.IoT.Model.DisableTopicRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DisableTopicRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableTopicRule operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDisableTopicRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndDisableTopicRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DisableTopicRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDisableTopicRule.</param>
            
            <returns>Returns a  DisableTopicRuleResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EnableTopicRule(Amazon.IoT.Model.EnableTopicRuleRequest)">
            <summary>
            Enables the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableTopicRule service method.</param>
            
            <returns>The response from the EnableTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginEnableTopicRule(Amazon.IoT.Model.EnableTopicRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the EnableTopicRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableTopicRule operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndEnableTopicRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndEnableTopicRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  EnableTopicRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginEnableTopicRule.</param>
            
            <returns>Returns a  EnableTopicRuleResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.GetLoggingOptions(Amazon.IoT.Model.GetLoggingOptionsRequest)">
            <summary>
            Gets the logging options.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLoggingOptions service method.</param>
            
            <returns>The response from the GetLoggingOptions service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginGetLoggingOptions(Amazon.IoT.Model.GetLoggingOptionsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetLoggingOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLoggingOptions operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetLoggingOptions
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndGetLoggingOptions(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetLoggingOptions operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetLoggingOptions.</param>
            
            <returns>Returns a  GetLoggingOptionsResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.GetPolicy(System.String)">
            <summary>
            Gets information about the specified policy with the policy document of the default
            version.
            </summary>
            <param name="policyName">The name of the policy.</param>
            
            <returns>The response from the GetPolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.GetPolicy(Amazon.IoT.Model.GetPolicyRequest)">
            <summary>
            Gets information about the specified policy with the policy document of the default
            version.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPolicy service method.</param>
            
            <returns>The response from the GetPolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginGetPolicy(Amazon.IoT.Model.GetPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetPolicy operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndGetPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetPolicy.</param>
            
            <returns>Returns a  GetPolicyResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.GetPolicyVersion(System.String,System.String)">
            <summary>
            Gets information about the specified policy version.
            </summary>
            <param name="policyName">The name of the policy.</param>
            <param name="policyVersionId">The policy version ID.</param>
            
            <returns>The response from the GetPolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.GetPolicyVersion(Amazon.IoT.Model.GetPolicyVersionRequest)">
            <summary>
            Gets information about the specified policy version.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPolicyVersion service method.</param>
            
            <returns>The response from the GetPolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginGetPolicyVersion(Amazon.IoT.Model.GetPolicyVersionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetPolicyVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetPolicyVersion operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetPolicyVersion
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndGetPolicyVersion(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetPolicyVersion operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetPolicyVersion.</param>
            
            <returns>Returns a  GetPolicyVersionResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.GetTopicRule(System.String)">
            <summary>
            Gets information about the specified rule.
            </summary>
            <param name="ruleName">The name of the rule.</param>
            
            <returns>The response from the GetTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.GetTopicRule(Amazon.IoT.Model.GetTopicRuleRequest)">
            <summary>
            Gets information about the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTopicRule service method.</param>
            
            <returns>The response from the GetTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginGetTopicRule(Amazon.IoT.Model.GetTopicRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetTopicRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetTopicRule operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetTopicRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndGetTopicRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetTopicRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetTopicRule.</param>
            
            <returns>Returns a  GetTopicRuleResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListCertificates">
            <summary>
            Lists your certificates.
            
             
            <para>
            The results are paginated with a default page size of 25. You can use the returned
            marker to retrieve additional results.
            </para>
            </summary>
            
            <returns>The response from the ListCertificates service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListCertificates(Amazon.IoT.Model.ListCertificatesRequest)">
            <summary>
            Lists your certificates.
            
             
            <para>
            The results are paginated with a default page size of 25. You can use the returned
            marker to retrieve additional results.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCertificates service method.</param>
            
            <returns>The response from the ListCertificates service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginListCertificates(Amazon.IoT.Model.ListCertificatesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListCertificates operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListCertificates operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListCertificates
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndListCertificates(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListCertificates operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListCertificates.</param>
            
            <returns>Returns a  ListCertificatesResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListPolicies">
            <summary>
            Lists your policies.
            </summary>
            
            <returns>The response from the ListPolicies service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListPolicies(Amazon.IoT.Model.ListPoliciesRequest)">
            <summary>
            Lists your policies.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPolicies service method.</param>
            
            <returns>The response from the ListPolicies service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginListPolicies(Amazon.IoT.Model.ListPoliciesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListPolicies operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListPolicies operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListPolicies
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndListPolicies(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListPolicies operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListPolicies.</param>
            
            <returns>Returns a  ListPoliciesResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListPolicyVersions(System.String)">
            <summary>
            Lists the versions of the specified policy, and identifies the default version.
            </summary>
            <param name="policyName">The policy name.</param>
            
            <returns>The response from the ListPolicyVersions service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListPolicyVersions(Amazon.IoT.Model.ListPolicyVersionsRequest)">
            <summary>
            Lists the versions of the specified policy, and identifies the default version.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPolicyVersions service method.</param>
            
            <returns>The response from the ListPolicyVersions service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginListPolicyVersions(Amazon.IoT.Model.ListPolicyVersionsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListPolicyVersions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListPolicyVersions operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListPolicyVersions
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndListPolicyVersions(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListPolicyVersions operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListPolicyVersions.</param>
            
            <returns>Returns a  ListPolicyVersionsResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListPrincipalPolicies(System.String)">
            <summary>
            Lists the policies attached to the specified principal. If you use an Cognito identity,
            the ID must be in <a href="http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax">AmazonCognito
            Identity format</a>.
            </summary>
            <param name="principal">The principal.</param>
            
            <returns>The response from the ListPrincipalPolicies service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListPrincipalPolicies(Amazon.IoT.Model.ListPrincipalPoliciesRequest)">
            <summary>
            Lists the policies attached to the specified principal. If you use an Cognito identity,
            the ID must be in <a href="http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax">AmazonCognito
            Identity format</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPrincipalPolicies service method.</param>
            
            <returns>The response from the ListPrincipalPolicies service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginListPrincipalPolicies(Amazon.IoT.Model.ListPrincipalPoliciesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListPrincipalPolicies operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListPrincipalPolicies operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListPrincipalPolicies
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndListPrincipalPolicies(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListPrincipalPolicies operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListPrincipalPolicies.</param>
            
            <returns>Returns a  ListPrincipalPoliciesResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListPrincipalThings(System.String)">
            <summary>
            Lists the things associated with the specified principal.
            </summary>
            <param name="principal">The principal.</param>
            
            <returns>The response from the ListPrincipalThings service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListPrincipalThings(Amazon.IoT.Model.ListPrincipalThingsRequest)">
            <summary>
            Lists the things associated with the specified principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPrincipalThings service method.</param>
            
            <returns>The response from the ListPrincipalThings service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginListPrincipalThings(Amazon.IoT.Model.ListPrincipalThingsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListPrincipalThings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListPrincipalThings operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListPrincipalThings
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndListPrincipalThings(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListPrincipalThings operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListPrincipalThings.</param>
            
            <returns>Returns a  ListPrincipalThingsResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListThingPrincipals(System.String)">
            <summary>
            Lists the principals associated with the specified thing.
            </summary>
            <param name="thingName">The name of the thing.</param>
            
            <returns>The response from the ListThingPrincipals service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListThingPrincipals(Amazon.IoT.Model.ListThingPrincipalsRequest)">
            <summary>
            Lists the principals associated with the specified thing.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListThingPrincipals service method.</param>
            
            <returns>The response from the ListThingPrincipals service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginListThingPrincipals(Amazon.IoT.Model.ListThingPrincipalsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListThingPrincipals operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListThingPrincipals operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListThingPrincipals
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndListThingPrincipals(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListThingPrincipals operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListThingPrincipals.</param>
            
            <returns>Returns a  ListThingPrincipalsResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListThings">
            <summary>
            Lists your things. You can pass an AttributeName or AttributeValue to filter your
            things (for example, "ListThings where AttributeName=Color and AttributeValue=Red").
            </summary>
            
            <returns>The response from the ListThings service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListThings(Amazon.IoT.Model.ListThingsRequest)">
            <summary>
            Lists your things. You can pass an AttributeName or AttributeValue to filter your
            things (for example, "ListThings where AttributeName=Color and AttributeValue=Red").
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListThings service method.</param>
            
            <returns>The response from the ListThings service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginListThings(Amazon.IoT.Model.ListThingsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListThings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListThings operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListThings
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndListThings(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListThings operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListThings.</param>
            
            <returns>Returns a  ListThingsResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListTopicRules(System.String)">
            <summary>
            Lists the rules for the specific topic.
            </summary>
            <param name="topic">The topic.</param>
            
            <returns>The response from the ListTopicRules service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ListTopicRules(Amazon.IoT.Model.ListTopicRulesRequest)">
            <summary>
            Lists the rules for the specific topic.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTopicRules service method.</param>
            
            <returns>The response from the ListTopicRules service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginListTopicRules(Amazon.IoT.Model.ListTopicRulesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListTopicRules operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTopicRules operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListTopicRules
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndListTopicRules(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListTopicRules operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListTopicRules.</param>
            
            <returns>Returns a  ListTopicRulesResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.RejectCertificateTransfer(System.String)">
            <summary>
            Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer,
            the certificate status changes from <b>PENDING_TRANFER</b> to <b>INACTIVE</b>.
            
             
            <para>
            To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate
            your certificates.
            </para>
             
            <para>
            This operation can only be called by the transfer destination. After it is called,
            the certificate will be returned to the source's account in the INACTIVE state.
            </para>
            </summary>
            <param name="certificateId">The ID of the certificate.</param>
            
            <returns>The response from the RejectCertificateTransfer service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferAlreadyCompletedException">
            You can't revert the certificate transfer because the transfer is already complete.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.RejectCertificateTransfer(Amazon.IoT.Model.RejectCertificateTransferRequest)">
            <summary>
            Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer,
            the certificate status changes from <b>PENDING_TRANFER</b> to <b>INACTIVE</b>.
            
             
            <para>
            To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate
            your certificates.
            </para>
             
            <para>
            This operation can only be called by the transfer destination. After it is called,
            the certificate will be returned to the source's account in the INACTIVE state.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RejectCertificateTransfer service method.</param>
            
            <returns>The response from the RejectCertificateTransfer service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferAlreadyCompletedException">
            You can't revert the certificate transfer because the transfer is already complete.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginRejectCertificateTransfer(Amazon.IoT.Model.RejectCertificateTransferRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the RejectCertificateTransfer operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RejectCertificateTransfer operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndRejectCertificateTransfer
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndRejectCertificateTransfer(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  RejectCertificateTransfer operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginRejectCertificateTransfer.</param>
            
            <returns>Returns a  RejectCertificateTransferResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.ReplaceTopicRule(Amazon.IoT.Model.ReplaceTopicRuleRequest)">
            <summary>
            Replaces the specified rule. You must specify all parameters for the new rule. Creating
            rules is an administrator-level action. Any user who has permission to create rules
            will be able to access data processed by the rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplaceTopicRule service method.</param>
            
            <returns>The response from the ReplaceTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.SqlParseException">
            The Rule-SQL expression can't be parsed correctly.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginReplaceTopicRule(Amazon.IoT.Model.ReplaceTopicRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ReplaceTopicRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceTopicRule operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndReplaceTopicRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndReplaceTopicRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ReplaceTopicRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginReplaceTopicRule.</param>
            
            <returns>Returns a  ReplaceTopicRuleResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.SetDefaultPolicyVersion(System.String,System.String)">
            <summary>
            Sets the specified version of the specified policy as the policy's default (operative)
            version. This action affects all certificates to which the policy is attached. To
            list the principals the policy is attached to, use the ListPrincipalPolicy API.
            </summary>
            <param name="policyName">The policy name.</param>
            <param name="policyVersionId">The policy version ID.</param>
            
            <returns>The response from the SetDefaultPolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.SetDefaultPolicyVersion(Amazon.IoT.Model.SetDefaultPolicyVersionRequest)">
            <summary>
            Sets the specified version of the specified policy as the policy's default (operative)
            version. This action affects all certificates to which the policy is attached. To
            list the principals the policy is attached to, use the ListPrincipalPolicy API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetDefaultPolicyVersion service method.</param>
            
            <returns>The response from the SetDefaultPolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginSetDefaultPolicyVersion(Amazon.IoT.Model.SetDefaultPolicyVersionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetDefaultPolicyVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetDefaultPolicyVersion operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetDefaultPolicyVersion
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndSetDefaultPolicyVersion(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetDefaultPolicyVersion operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetDefaultPolicyVersion.</param>
            
            <returns>Returns a  SetDefaultPolicyVersionResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.SetLoggingOptions(Amazon.IoT.Model.SetLoggingOptionsRequest)">
            <summary>
            Sets the logging options.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetLoggingOptions service method.</param>
            
            <returns>The response from the SetLoggingOptions service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginSetLoggingOptions(Amazon.IoT.Model.SetLoggingOptionsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetLoggingOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetLoggingOptions operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetLoggingOptions
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndSetLoggingOptions(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetLoggingOptions operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetLoggingOptions.</param>
            
            <returns>Returns a  SetLoggingOptionsResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.TransferCertificate(System.String,System.String)">
            <summary>
            Transfers the specified certificate to the specified AWS account.
            
             
            <para>
            You can cancel the transfer until it is acknowledged by the recipient.
            </para>
             
            <para>
            No notification is sent to the transfer destination's account. It is up to the caller
            to notify the transfer target.
            </para>
             
            <para>
            The certificate being transferred must not be in the ACTIVE state. You can use the
            UpdateCertificate API to deactivate it.
            </para>
             
            <para>
            The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy
            API to detach them.
            </para>
            </summary>
            <param name="certificateId">The ID of the certificate.</param>
            <param name="targetAwsAccount">The AWS account.</param>
            
            <returns>The response from the TransferCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.CertificateStateException">
            The certificate operation is not allowed.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferConflictException">
            You can't transfer the certificate because authorization policies are still attached.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.TransferCertificate(Amazon.IoT.Model.TransferCertificateRequest)">
            <summary>
            Transfers the specified certificate to the specified AWS account.
            
             
            <para>
            You can cancel the transfer until it is acknowledged by the recipient.
            </para>
             
            <para>
            No notification is sent to the transfer destination's account. It is up to the caller
            to notify the transfer target.
            </para>
             
            <para>
            The certificate being transferred must not be in the ACTIVE state. You can use the
            UpdateCertificate API to deactivate it.
            </para>
             
            <para>
            The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy
            API to detach them.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TransferCertificate service method.</param>
            
            <returns>The response from the TransferCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.CertificateStateException">
            The certificate operation is not allowed.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferConflictException">
            You can't transfer the certificate because authorization policies are still attached.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginTransferCertificate(Amazon.IoT.Model.TransferCertificateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the TransferCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TransferCertificate operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndTransferCertificate
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndTransferCertificate(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  TransferCertificate operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginTransferCertificate.</param>
            
            <returns>Returns a  TransferCertificateResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.UpdateCertificate(System.String,Amazon.IoT.CertificateStatus)">
            <summary>
            Updates the status of the specified certificate. This operation is idempotent.
            
             
            <para>
            Moving a certificate from the ACTIVE state (including REVOKED) will not disconnect
            currently connected devices, but these devices will be unable to reconnect.
            </para>
             
            <para>
            The ACTIVE state is required to authenticate devices connecting to AWS IoT using a
            certificate.
            </para>
            </summary>
            <param name="certificateId">The ID of the certificate.</param>
            <param name="newStatus">The new status. <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</param>
            
            <returns>The response from the UpdateCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.CertificateStateException">
            The certificate operation is not allowed.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.UpdateCertificate(Amazon.IoT.Model.UpdateCertificateRequest)">
            <summary>
            Updates the status of the specified certificate. This operation is idempotent.
            
             
            <para>
            Moving a certificate from the ACTIVE state (including REVOKED) will not disconnect
            currently connected devices, but these devices will be unable to reconnect.
            </para>
             
            <para>
            The ACTIVE state is required to authenticate devices connecting to AWS IoT using a
            certificate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCertificate service method.</param>
            
            <returns>The response from the UpdateCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.CertificateStateException">
            The certificate operation is not allowed.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginUpdateCertificate(Amazon.IoT.Model.UpdateCertificateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateCertificate operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateCertificate
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndUpdateCertificate(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateCertificate operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateCertificate.</param>
            
            <returns>Returns a  UpdateCertificateResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.UpdateThing(Amazon.IoT.Model.UpdateThingRequest)">
            <summary>
            Updates the data for a thing.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateThing service method.</param>
            
            <returns>The response from the UpdateThing service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.BeginUpdateThing(Amazon.IoT.Model.UpdateThingRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateThing operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateThing operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateThing
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.AmazonIoTClient.EndUpdateThing(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateThing operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateThing.</param>
            
            <returns>Returns a  UpdateThingResult from IoT.</returns>
        </member>
        <member name="T:Amazon.IoT.IAmazonIoT">
             <summary>
             Interface for accessing IoT
            
             AWS IoT 
             <para>
             AWS IoT provides secure, bi-directional communication between Internet-connected things
             (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud.
             You can discover your custom IoT-Data endpoint to communicate with, configure rules
             for data processing and integration with other services, organize resources associated
             with each thing (Thing Registry), configure logging, and create and manage policies
             and credentials to authenticate things.
             </para>
              
             <para>
             For more information about how AWS IoT works, see the <a href="http://docs.aws.amazon.com/iot/latest/developerguide/aws-iot-how-it-works.html">Developer
             Guide</a>.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.AcceptCertificateTransfer(Amazon.IoT.Model.AcceptCertificateTransferRequest)">
            <summary>
            Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.
            
             
            <para>
            To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate
            your certificates.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AcceptCertificateTransfer service method.</param>
            
            <returns>The response from the AcceptCertificateTransfer service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferAlreadyCompletedException">
            You can't revert the certificate transfer because the transfer is already complete.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginAcceptCertificateTransfer(Amazon.IoT.Model.AcceptCertificateTransferRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AcceptCertificateTransfer operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AcceptCertificateTransfer operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAcceptCertificateTransfer
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndAcceptCertificateTransfer(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AcceptCertificateTransfer operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAcceptCertificateTransfer.</param>
            
            <returns>Returns a  AcceptCertificateTransferResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.AttachPrincipalPolicy(System.String,System.String)">
            <summary>
            Attaches the specified policy to the specified principal (certificate or other credential).
            </summary>
            <param name="policyName">The policy name.</param>
            <param name="principal">The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</param>
            
            <returns>The response from the AttachPrincipalPolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.LimitExceededException">
            The number of attached entities exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.AttachPrincipalPolicy(Amazon.IoT.Model.AttachPrincipalPolicyRequest)">
            <summary>
            Attaches the specified policy to the specified principal (certificate or other credential).
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachPrincipalPolicy service method.</param>
            
            <returns>The response from the AttachPrincipalPolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.LimitExceededException">
            The number of attached entities exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginAttachPrincipalPolicy(Amazon.IoT.Model.AttachPrincipalPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AttachPrincipalPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachPrincipalPolicy operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAttachPrincipalPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndAttachPrincipalPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AttachPrincipalPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAttachPrincipalPolicy.</param>
            
            <returns>Returns a  AttachPrincipalPolicyResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.AttachThingPrincipal(System.String,System.String)">
            <summary>
            Attaches the specified principal to the specified thing.
            </summary>
            <param name="thingName">The name of the thing.</param>
            <param name="principal">The principal (certificate or other credential).</param>
            
            <returns>The response from the AttachThingPrincipal service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.AttachThingPrincipal(Amazon.IoT.Model.AttachThingPrincipalRequest)">
            <summary>
            Attaches the specified principal to the specified thing.
            </summary>
            <param name="request">Container for the necessary parameters to execute the AttachThingPrincipal service method.</param>
            
            <returns>The response from the AttachThingPrincipal service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginAttachThingPrincipal(Amazon.IoT.Model.AttachThingPrincipalRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the AttachThingPrincipal operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AttachThingPrincipal operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndAttachThingPrincipal
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndAttachThingPrincipal(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  AttachThingPrincipal operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginAttachThingPrincipal.</param>
            
            <returns>Returns a  AttachThingPrincipalResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CancelCertificateTransfer(System.String)">
            <summary>
            Cancels a pending transfer for the specified certificate.
            
             
            <para>
            <b>Note</b> Only the transfer source account can use this operation to cancel a transfer.
            (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer,
            AWS IoT returns the certificate to the source account in the INACTIVE state. After
            the destination account has accepted the transfer, the transfer cannot be cancelled.
            </para>
             
            <para>
            After a certificate transfer is cancelled, the status of the certificate changes from
            PENDING_TRANSFER to INACTIVE.
            </para>
            </summary>
            <param name="certificateId">The ID of the certificate.</param>
            
            <returns>The response from the CancelCertificateTransfer service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferAlreadyCompletedException">
            You can't revert the certificate transfer because the transfer is already complete.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CancelCertificateTransfer(Amazon.IoT.Model.CancelCertificateTransferRequest)">
            <summary>
            Cancels a pending transfer for the specified certificate.
            
             
            <para>
            <b>Note</b> Only the transfer source account can use this operation to cancel a transfer.
            (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer,
            AWS IoT returns the certificate to the source account in the INACTIVE state. After
            the destination account has accepted the transfer, the transfer cannot be cancelled.
            </para>
             
            <para>
            After a certificate transfer is cancelled, the status of the certificate changes from
            PENDING_TRANSFER to INACTIVE.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelCertificateTransfer service method.</param>
            
            <returns>The response from the CancelCertificateTransfer service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferAlreadyCompletedException">
            You can't revert the certificate transfer because the transfer is already complete.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginCancelCertificateTransfer(Amazon.IoT.Model.CancelCertificateTransferRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CancelCertificateTransfer operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelCertificateTransfer operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCancelCertificateTransfer
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndCancelCertificateTransfer(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CancelCertificateTransfer operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCancelCertificateTransfer.</param>
            
            <returns>Returns a  CancelCertificateTransferResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreateCertificateFromCsr(System.String)">
            <summary>
            Creates an X.509 certificate using the specified certificate signing request.
            
             
            <para>
            <b>Note</b> Reusing the same certificate signing request (CSR) results in a distinct
            certificate.
            </para>
             
            <para>
            You can create multiple certificates in a batch by creating a directory, copying multiple
            .csr files into that directory, and then specifying that directory on the command
            line. The following commands show how to create a batch of certificates given a batch
            of CSRs. 
            </para>
             
            <para>
            Assuming a set of CSRs are located inside of the directory my-csr-directory:
            </para>
            &gt; 
            <para>
            On Linux and OS X, the command is:
            </para>
             
            <para>
            $ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{}
            </para>
             
            <para>
             This command lists all of the CSRs in my-csr-directory and pipes each CSR file name
            to the aws iot create-certificate-from-csr AWS CLI command to create a certificate
            for the corresponding CSR. 
            </para>
             
            <para>
             The aws iot create-certificate-from-csr part of the command can also be run in parallel
            to speed up the certificate creation process: 
            </para>
             
            <para>
             $ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{} 
            </para>
             
            <para>
             On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/$_} 
            </para>
             
            <para>
             On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr
            --certificate-signing-request file://@path"
            </para>
            </summary>
            <param name="certificateSigningRequest">The certificate signing request (CSR).</param>
            
            <returns>The response from the CreateCertificateFromCsr service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreateCertificateFromCsr(System.String,System.Boolean)">
            <summary>
            Creates an X.509 certificate using the specified certificate signing request.
            
             
            <para>
            <b>Note</b> Reusing the same certificate signing request (CSR) results in a distinct
            certificate.
            </para>
             
            <para>
            You can create multiple certificates in a batch by creating a directory, copying multiple
            .csr files into that directory, and then specifying that directory on the command
            line. The following commands show how to create a batch of certificates given a batch
            of CSRs. 
            </para>
             
            <para>
            Assuming a set of CSRs are located inside of the directory my-csr-directory:
            </para>
            &gt; 
            <para>
            On Linux and OS X, the command is:
            </para>
             
            <para>
            $ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{}
            </para>
             
            <para>
             This command lists all of the CSRs in my-csr-directory and pipes each CSR file name
            to the aws iot create-certificate-from-csr AWS CLI command to create a certificate
            for the corresponding CSR. 
            </para>
             
            <para>
             The aws iot create-certificate-from-csr part of the command can also be run in parallel
            to speed up the certificate creation process: 
            </para>
             
            <para>
             $ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{} 
            </para>
             
            <para>
             On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/$_} 
            </para>
             
            <para>
             On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr
            --certificate-signing-request file://@path"
            </para>
            </summary>
            <param name="certificateSigningRequest">The certificate signing request (CSR).</param>
            <param name="setAsActive">Specifies whether the certificate is active.</param>
            
            <returns>The response from the CreateCertificateFromCsr service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreateCertificateFromCsr(Amazon.IoT.Model.CreateCertificateFromCsrRequest)">
            <summary>
            Creates an X.509 certificate using the specified certificate signing request.
            
             
            <para>
            <b>Note</b> Reusing the same certificate signing request (CSR) results in a distinct
            certificate.
            </para>
             
            <para>
            You can create multiple certificates in a batch by creating a directory, copying multiple
            .csr files into that directory, and then specifying that directory on the command
            line. The following commands show how to create a batch of certificates given a batch
            of CSRs. 
            </para>
             
            <para>
            Assuming a set of CSRs are located inside of the directory my-csr-directory:
            </para>
            &gt; 
            <para>
            On Linux and OS X, the command is:
            </para>
             
            <para>
            $ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{}
            </para>
             
            <para>
             This command lists all of the CSRs in my-csr-directory and pipes each CSR file name
            to the aws iot create-certificate-from-csr AWS CLI command to create a certificate
            for the corresponding CSR. 
            </para>
             
            <para>
             The aws iot create-certificate-from-csr part of the command can also be run in parallel
            to speed up the certificate creation process: 
            </para>
             
            <para>
             $ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/{} 
            </para>
             
            <para>
             On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request
            file://my-csr-directory/$_} 
            </para>
             
            <para>
             On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory
            is: 
            </para>
             
            <para>
             &gt; forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr
            --certificate-signing-request file://@path"
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateCertificateFromCsr service method.</param>
            
            <returns>The response from the CreateCertificateFromCsr service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginCreateCertificateFromCsr(Amazon.IoT.Model.CreateCertificateFromCsrRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateCertificateFromCsr operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateCertificateFromCsr operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateCertificateFromCsr
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndCreateCertificateFromCsr(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateCertificateFromCsr operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateCertificateFromCsr.</param>
            
            <returns>Returns a  CreateCertificateFromCsrResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreateKeysAndCertificate">
            <summary>
            Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public
            key.
            
             
            <para>
            <b>Note</b> This is the only time AWS IoT issues the private key for this certificate,
            so it is important to keep it in a secure location.
            </para>
            </summary>
            
            <returns>The response from the CreateKeysAndCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreateKeysAndCertificate(System.Boolean)">
            <summary>
            Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public
            key.
            
             
            <para>
            <b>Note</b> This is the only time AWS IoT issues the private key for this certificate,
            so it is important to keep it in a secure location.
            </para>
            </summary>
            <param name="setAsActive">Specifies whether the certificate is active.</param>
            
            <returns>The response from the CreateKeysAndCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreateKeysAndCertificate(Amazon.IoT.Model.CreateKeysAndCertificateRequest)">
            <summary>
            Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public
            key.
            
             
            <para>
            <b>Note</b> This is the only time AWS IoT issues the private key for this certificate,
            so it is important to keep it in a secure location.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateKeysAndCertificate service method.</param>
            
            <returns>The response from the CreateKeysAndCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginCreateKeysAndCertificate(Amazon.IoT.Model.CreateKeysAndCertificateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateKeysAndCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateKeysAndCertificate operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateKeysAndCertificate
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndCreateKeysAndCertificate(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateKeysAndCertificate operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateKeysAndCertificate.</param>
            
            <returns>Returns a  CreateKeysAndCertificateResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreatePolicy(System.String,System.String)">
            <summary>
            Creates an AWS IoT policy.
            
             
            <para>
            The created policy is the default version for the policy. This operation creates a
            policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's
            default version.
            </para>
            </summary>
            <param name="policyName">The policy name.</param>
            <param name="policyDocument">The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</param>
            
            <returns>The response from the CreatePolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.MalformedPolicyException">
            The policy documentation is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceAlreadyExistsException">
            The resource already exists.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreatePolicy(Amazon.IoT.Model.CreatePolicyRequest)">
            <summary>
            Creates an AWS IoT policy.
            
             
            <para>
            The created policy is the default version for the policy. This operation creates a
            policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's
            default version.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePolicy service method.</param>
            
            <returns>The response from the CreatePolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.MalformedPolicyException">
            The policy documentation is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceAlreadyExistsException">
            The resource already exists.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginCreatePolicy(Amazon.IoT.Model.CreatePolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreatePolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreatePolicy operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreatePolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndCreatePolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreatePolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreatePolicy.</param>
            
            <returns>Returns a  CreatePolicyResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreatePolicyVersion(System.String,System.String)">
            <summary>
            Creates a new version of the specified AWS IoT policy. To update a policy, create
            a new policy version. A managed policy can have up to five versions. If the policy
            has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version
            before you create a new one.
            
             
            <para>
            Optionally, you can set the new version as the policy's default version. The default
            version is the operative version (that is, the version that is in effect for the certificates
            to which the policy is attached).
            </para>
            </summary>
            <param name="policyName">The policy name.</param>
            <param name="policyDocument">The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</param>
            
            <returns>The response from the CreatePolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.MalformedPolicyException">
            The policy documentation is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.IoT.Model.VersionsLimitExceededException">
            The number of policy versions exceeds the limit.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreatePolicyVersion(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new version of the specified AWS IoT policy. To update a policy, create
            a new policy version. A managed policy can have up to five versions. If the policy
            has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version
            before you create a new one.
            
             
            <para>
            Optionally, you can set the new version as the policy's default version. The default
            version is the operative version (that is, the version that is in effect for the certificates
            to which the policy is attached).
            </para>
            </summary>
            <param name="policyName">The policy name.</param>
            <param name="policyDocument">The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespaces</param>
            <param name="setAsDefault">Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</param>
            
            <returns>The response from the CreatePolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.MalformedPolicyException">
            The policy documentation is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.IoT.Model.VersionsLimitExceededException">
            The number of policy versions exceeds the limit.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreatePolicyVersion(Amazon.IoT.Model.CreatePolicyVersionRequest)">
            <summary>
            Creates a new version of the specified AWS IoT policy. To update a policy, create
            a new policy version. A managed policy can have up to five versions. If the policy
            has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version
            before you create a new one.
            
             
            <para>
            Optionally, you can set the new version as the policy's default version. The default
            version is the operative version (that is, the version that is in effect for the certificates
            to which the policy is attached).
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreatePolicyVersion service method.</param>
            
            <returns>The response from the CreatePolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.MalformedPolicyException">
            The policy documentation is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
            <exception cref="T:Amazon.IoT.Model.VersionsLimitExceededException">
            The number of policy versions exceeds the limit.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginCreatePolicyVersion(Amazon.IoT.Model.CreatePolicyVersionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreatePolicyVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreatePolicyVersion operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreatePolicyVersion
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndCreatePolicyVersion(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreatePolicyVersion operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreatePolicyVersion.</param>
            
            <returns>Returns a  CreatePolicyVersionResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreateThing(Amazon.IoT.Model.CreateThingRequest)">
            <summary>
            Creates a thing in the Thing Registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateThing service method.</param>
            
            <returns>The response from the CreateThing service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceAlreadyExistsException">
            The resource already exists.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginCreateThing(Amazon.IoT.Model.CreateThingRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateThing operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateThing operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateThing
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndCreateThing(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateThing operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateThing.</param>
            
            <returns>Returns a  CreateThingResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.CreateTopicRule(Amazon.IoT.Model.CreateTopicRuleRequest)">
            <summary>
            Creates a rule. Creating rules is an administrator-level action. Any user who has
            permission to create rules will be able to access data processed by the rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTopicRule service method.</param>
            
            <returns>The response from the CreateTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceAlreadyExistsException">
            The resource already exists.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.SqlParseException">
            The Rule-SQL expression can't be parsed correctly.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginCreateTopicRule(Amazon.IoT.Model.CreateTopicRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateTopicRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTopicRule operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateTopicRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndCreateTopicRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateTopicRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateTopicRule.</param>
            
            <returns>Returns a  CreateTopicRuleResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DeleteCertificate(System.String)">
            <summary>
            Deletes the specified certificate.
            
             
            <para>
            A certificate cannot be deleted if it has a policy attached to it or if its status
            is set to ACTIVE. To delete a certificate, first use the <a>DetachPrincipalPolicy</a>
            API to detach all policies. Next, use the <a>UpdateCertificate</a> API to set the
            certificate to the INACTIVE status.
            </para>
            </summary>
            <param name="certificateId">The ID of the certificate.</param>
            
            <returns>The response from the DeleteCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.CertificateStateException">
            The certificate operation is not allowed.
            </exception>
            <exception cref="T:Amazon.IoT.Model.DeleteConflictException">
            You can't delete the resource because it is attached to one or more resources.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DeleteCertificate(Amazon.IoT.Model.DeleteCertificateRequest)">
            <summary>
            Deletes the specified certificate.
            
             
            <para>
            A certificate cannot be deleted if it has a policy attached to it or if its status
            is set to ACTIVE. To delete a certificate, first use the <a>DetachPrincipalPolicy</a>
            API to detach all policies. Next, use the <a>UpdateCertificate</a> API to set the
            certificate to the INACTIVE status.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate service method.</param>
            
            <returns>The response from the DeleteCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.CertificateStateException">
            The certificate operation is not allowed.
            </exception>
            <exception cref="T:Amazon.IoT.Model.DeleteConflictException">
            You can't delete the resource because it is attached to one or more resources.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginDeleteCertificate(Amazon.IoT.Model.DeleteCertificateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteCertificate operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteCertificate
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndDeleteCertificate(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteCertificate operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteCertificate.</param>
            
            <returns>Returns a  DeleteCertificateResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DeletePolicy(System.String)">
            <summary>
            Deletes the specified policy.
            
             
            <para>
            A policy cannot be deleted if it has non-default versions or it is attached to any
            certificate.
            </para>
             
            <para>
            To delete a policy, use the DeletePolicyVersion API to delete all non-default versions
            of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate;
            and then use the DeletePolicy API to delete the policy.
            </para>
             
            <para>
            When a policy is deleted using DeletePolicy, its default version is deleted with it.
            </para>
            </summary>
            <param name="policyName">The name of the policy to delete.</param>
            
            <returns>The response from the DeletePolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.DeleteConflictException">
            You can't delete the resource because it is attached to one or more resources.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DeletePolicy(Amazon.IoT.Model.DeletePolicyRequest)">
            <summary>
            Deletes the specified policy.
            
             
            <para>
            A policy cannot be deleted if it has non-default versions or it is attached to any
            certificate.
            </para>
             
            <para>
            To delete a policy, use the DeletePolicyVersion API to delete all non-default versions
            of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate;
            and then use the DeletePolicy API to delete the policy.
            </para>
             
            <para>
            When a policy is deleted using DeletePolicy, its default version is deleted with it.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePolicy service method.</param>
            
            <returns>The response from the DeletePolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.DeleteConflictException">
            You can't delete the resource because it is attached to one or more resources.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginDeletePolicy(Amazon.IoT.Model.DeletePolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeletePolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeletePolicy operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeletePolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndDeletePolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeletePolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeletePolicy.</param>
            
            <returns>Returns a  DeletePolicyResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DeletePolicyVersion(System.String,System.String)">
            <summary>
            Deletes the specified version of the specified policy. You cannot delete the default
            version of a policy using this API. To delete the default version of a policy, use
            <a>DeletePolicy</a>. To find out which version of a policy is marked as the default
            version, use ListPolicyVersions.
            </summary>
            <param name="policyName">The name of the policy.</param>
            <param name="policyVersionId">The policy version ID.</param>
            
            <returns>The response from the DeletePolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.DeleteConflictException">
            You can't delete the resource because it is attached to one or more resources.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DeletePolicyVersion(Amazon.IoT.Model.DeletePolicyVersionRequest)">
            <summary>
            Deletes the specified version of the specified policy. You cannot delete the default
            version of a policy using this API. To delete the default version of a policy, use
            <a>DeletePolicy</a>. To find out which version of a policy is marked as the default
            version, use ListPolicyVersions.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeletePolicyVersion service method.</param>
            
            <returns>The response from the DeletePolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.DeleteConflictException">
            You can't delete the resource because it is attached to one or more resources.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginDeletePolicyVersion(Amazon.IoT.Model.DeletePolicyVersionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeletePolicyVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeletePolicyVersion operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeletePolicyVersion
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndDeletePolicyVersion(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeletePolicyVersion operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeletePolicyVersion.</param>
            
            <returns>Returns a  DeletePolicyVersionResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DeleteThing(System.String)">
            <summary>
            Deletes the specified thing from the Thing Registry.
            </summary>
            <param name="thingName">The thing name.</param>
            
            <returns>The response from the DeleteThing service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DeleteThing(Amazon.IoT.Model.DeleteThingRequest)">
            <summary>
            Deletes the specified thing from the Thing Registry.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteThing service method.</param>
            
            <returns>The response from the DeleteThing service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginDeleteThing(Amazon.IoT.Model.DeleteThingRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteThing operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteThing operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteThing
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndDeleteThing(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteThing operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteThing.</param>
            
            <returns>Returns a  DeleteThingResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DeleteTopicRule(System.String)">
            <summary>
            Deletes the specified rule.
            </summary>
            <param name="ruleName">The name of the rule.</param>
            
            <returns>The response from the DeleteTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DeleteTopicRule(Amazon.IoT.Model.DeleteTopicRuleRequest)">
            <summary>
            Deletes the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTopicRule service method.</param>
            
            <returns>The response from the DeleteTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginDeleteTopicRule(Amazon.IoT.Model.DeleteTopicRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteTopicRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTopicRule operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteTopicRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndDeleteTopicRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteTopicRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteTopicRule.</param>
            
            <returns>Returns a  DeleteTopicRuleResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DescribeCertificate(System.String)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name="certificateId">The ID of the certificate.</param>
            
            <returns>The response from the DescribeCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DescribeCertificate(Amazon.IoT.Model.DescribeCertificateRequest)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate service method.</param>
            
            <returns>The response from the DescribeCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginDescribeCertificate(Amazon.IoT.Model.DescribeCertificateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeCertificate operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeCertificate
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndDescribeCertificate(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeCertificate operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeCertificate.</param>
            
            <returns>Returns a  DescribeCertificateResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DescribeEndpoint">
            <summary>
            Returns a unique endpoint specific to the AWS account making the call. You specify
            the following URI when updating state information for your thing: https://<i>endpoint</i>/things/<i>thingName</i>/shadow.
            </summary>
            
            <returns>The response from the DescribeEndpoint service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DescribeEndpoint(Amazon.IoT.Model.DescribeEndpointRequest)">
            <summary>
            Returns a unique endpoint specific to the AWS account making the call. You specify
            the following URI when updating state information for your thing: https://<i>endpoint</i>/things/<i>thingName</i>/shadow.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEndpoint service method.</param>
            
            <returns>The response from the DescribeEndpoint service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginDescribeEndpoint(Amazon.IoT.Model.DescribeEndpointRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeEndpoint operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeEndpoint operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeEndpoint
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndDescribeEndpoint(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeEndpoint operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeEndpoint.</param>
            
            <returns>Returns a  DescribeEndpointResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DescribeThing(System.String)">
            <summary>
            Gets information about the specified thing.
            </summary>
            <param name="thingName">The name of the thing.</param>
            
            <returns>The response from the DescribeThing service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DescribeThing(Amazon.IoT.Model.DescribeThingRequest)">
            <summary>
            Gets information about the specified thing.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeThing service method.</param>
            
            <returns>The response from the DescribeThing service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginDescribeThing(Amazon.IoT.Model.DescribeThingRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeThing operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeThing operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeThing
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndDescribeThing(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeThing operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeThing.</param>
            
            <returns>Returns a  DescribeThingResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DetachPrincipalPolicy(System.String,System.String)">
            <summary>
            Removes the specified policy from the specified certificate.
            </summary>
            <param name="policyName">The name of the policy to detach.</param>
            <param name="principal">The principal. If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</param>
            
            <returns>The response from the DetachPrincipalPolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DetachPrincipalPolicy(Amazon.IoT.Model.DetachPrincipalPolicyRequest)">
            <summary>
            Removes the specified policy from the specified certificate.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachPrincipalPolicy service method.</param>
            
            <returns>The response from the DetachPrincipalPolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginDetachPrincipalPolicy(Amazon.IoT.Model.DetachPrincipalPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DetachPrincipalPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachPrincipalPolicy operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDetachPrincipalPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndDetachPrincipalPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DetachPrincipalPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDetachPrincipalPolicy.</param>
            
            <returns>Returns a  DetachPrincipalPolicyResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DetachThingPrincipal(System.String,System.String)">
            <summary>
            Detaches the specified principal from the specified thing.
            </summary>
            <param name="thingName">The name of the thing.</param>
            <param name="principal">The principal.</param>
            
            <returns>The response from the DetachThingPrincipal service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DetachThingPrincipal(Amazon.IoT.Model.DetachThingPrincipalRequest)">
            <summary>
            Detaches the specified principal from the specified thing.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DetachThingPrincipal service method.</param>
            
            <returns>The response from the DetachThingPrincipal service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginDetachThingPrincipal(Amazon.IoT.Model.DetachThingPrincipalRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DetachThingPrincipal operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DetachThingPrincipal operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDetachThingPrincipal
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndDetachThingPrincipal(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DetachThingPrincipal operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDetachThingPrincipal.</param>
            
            <returns>Returns a  DetachThingPrincipalResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.DisableTopicRule(Amazon.IoT.Model.DisableTopicRuleRequest)">
            <summary>
            Disables the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableTopicRule service method.</param>
            
            <returns>The response from the DisableTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginDisableTopicRule(Amazon.IoT.Model.DisableTopicRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DisableTopicRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableTopicRule operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDisableTopicRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndDisableTopicRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DisableTopicRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDisableTopicRule.</param>
            
            <returns>Returns a  DisableTopicRuleResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EnableTopicRule(Amazon.IoT.Model.EnableTopicRuleRequest)">
            <summary>
            Enables the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableTopicRule service method.</param>
            
            <returns>The response from the EnableTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginEnableTopicRule(Amazon.IoT.Model.EnableTopicRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the EnableTopicRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableTopicRule operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndEnableTopicRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndEnableTopicRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  EnableTopicRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginEnableTopicRule.</param>
            
            <returns>Returns a  EnableTopicRuleResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.GetLoggingOptions(Amazon.IoT.Model.GetLoggingOptionsRequest)">
            <summary>
            Gets the logging options.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLoggingOptions service method.</param>
            
            <returns>The response from the GetLoggingOptions service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginGetLoggingOptions(Amazon.IoT.Model.GetLoggingOptionsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetLoggingOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLoggingOptions operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetLoggingOptions
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndGetLoggingOptions(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetLoggingOptions operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetLoggingOptions.</param>
            
            <returns>Returns a  GetLoggingOptionsResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.GetPolicy(System.String)">
            <summary>
            Gets information about the specified policy with the policy document of the default
            version.
            </summary>
            <param name="policyName">The name of the policy.</param>
            
            <returns>The response from the GetPolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.GetPolicy(Amazon.IoT.Model.GetPolicyRequest)">
            <summary>
            Gets information about the specified policy with the policy document of the default
            version.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPolicy service method.</param>
            
            <returns>The response from the GetPolicy service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginGetPolicy(Amazon.IoT.Model.GetPolicyRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetPolicy operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetPolicy
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndGetPolicy(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetPolicy operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetPolicy.</param>
            
            <returns>Returns a  GetPolicyResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.GetPolicyVersion(System.String,System.String)">
            <summary>
            Gets information about the specified policy version.
            </summary>
            <param name="policyName">The name of the policy.</param>
            <param name="policyVersionId">The policy version ID.</param>
            
            <returns>The response from the GetPolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.GetPolicyVersion(Amazon.IoT.Model.GetPolicyVersionRequest)">
            <summary>
            Gets information about the specified policy version.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetPolicyVersion service method.</param>
            
            <returns>The response from the GetPolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginGetPolicyVersion(Amazon.IoT.Model.GetPolicyVersionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetPolicyVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetPolicyVersion operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetPolicyVersion
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndGetPolicyVersion(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetPolicyVersion operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetPolicyVersion.</param>
            
            <returns>Returns a  GetPolicyVersionResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.GetTopicRule(System.String)">
            <summary>
            Gets information about the specified rule.
            </summary>
            <param name="ruleName">The name of the rule.</param>
            
            <returns>The response from the GetTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.GetTopicRule(Amazon.IoT.Model.GetTopicRuleRequest)">
            <summary>
            Gets information about the specified rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTopicRule service method.</param>
            
            <returns>The response from the GetTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginGetTopicRule(Amazon.IoT.Model.GetTopicRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetTopicRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetTopicRule operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetTopicRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndGetTopicRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetTopicRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetTopicRule.</param>
            
            <returns>Returns a  GetTopicRuleResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListCertificates">
            <summary>
            Lists your certificates.
            
             
            <para>
            The results are paginated with a default page size of 25. You can use the returned
            marker to retrieve additional results.
            </para>
            </summary>
            
            <returns>The response from the ListCertificates service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListCertificates(Amazon.IoT.Model.ListCertificatesRequest)">
            <summary>
            Lists your certificates.
            
             
            <para>
            The results are paginated with a default page size of 25. You can use the returned
            marker to retrieve additional results.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListCertificates service method.</param>
            
            <returns>The response from the ListCertificates service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginListCertificates(Amazon.IoT.Model.ListCertificatesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListCertificates operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListCertificates operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListCertificates
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndListCertificates(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListCertificates operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListCertificates.</param>
            
            <returns>Returns a  ListCertificatesResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListPolicies">
            <summary>
            Lists your policies.
            </summary>
            
            <returns>The response from the ListPolicies service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListPolicies(Amazon.IoT.Model.ListPoliciesRequest)">
            <summary>
            Lists your policies.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPolicies service method.</param>
            
            <returns>The response from the ListPolicies service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginListPolicies(Amazon.IoT.Model.ListPoliciesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListPolicies operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListPolicies operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListPolicies
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndListPolicies(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListPolicies operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListPolicies.</param>
            
            <returns>Returns a  ListPoliciesResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListPolicyVersions(System.String)">
            <summary>
            Lists the versions of the specified policy, and identifies the default version.
            </summary>
            <param name="policyName">The policy name.</param>
            
            <returns>The response from the ListPolicyVersions service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListPolicyVersions(Amazon.IoT.Model.ListPolicyVersionsRequest)">
            <summary>
            Lists the versions of the specified policy, and identifies the default version.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPolicyVersions service method.</param>
            
            <returns>The response from the ListPolicyVersions service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginListPolicyVersions(Amazon.IoT.Model.ListPolicyVersionsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListPolicyVersions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListPolicyVersions operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListPolicyVersions
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndListPolicyVersions(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListPolicyVersions operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListPolicyVersions.</param>
            
            <returns>Returns a  ListPolicyVersionsResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListPrincipalPolicies(System.String)">
            <summary>
            Lists the policies attached to the specified principal. If you use an Cognito identity,
            the ID must be in <a href="http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax">AmazonCognito
            Identity format</a>.
            </summary>
            <param name="principal">The principal.</param>
            
            <returns>The response from the ListPrincipalPolicies service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListPrincipalPolicies(Amazon.IoT.Model.ListPrincipalPoliciesRequest)">
            <summary>
            Lists the policies attached to the specified principal. If you use an Cognito identity,
            the ID must be in <a href="http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax">AmazonCognito
            Identity format</a>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPrincipalPolicies service method.</param>
            
            <returns>The response from the ListPrincipalPolicies service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginListPrincipalPolicies(Amazon.IoT.Model.ListPrincipalPoliciesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListPrincipalPolicies operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListPrincipalPolicies operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListPrincipalPolicies
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndListPrincipalPolicies(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListPrincipalPolicies operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListPrincipalPolicies.</param>
            
            <returns>Returns a  ListPrincipalPoliciesResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListPrincipalThings(System.String)">
            <summary>
            Lists the things associated with the specified principal.
            </summary>
            <param name="principal">The principal.</param>
            
            <returns>The response from the ListPrincipalThings service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListPrincipalThings(Amazon.IoT.Model.ListPrincipalThingsRequest)">
            <summary>
            Lists the things associated with the specified principal.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListPrincipalThings service method.</param>
            
            <returns>The response from the ListPrincipalThings service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginListPrincipalThings(Amazon.IoT.Model.ListPrincipalThingsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListPrincipalThings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListPrincipalThings operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListPrincipalThings
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndListPrincipalThings(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListPrincipalThings operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListPrincipalThings.</param>
            
            <returns>Returns a  ListPrincipalThingsResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListThingPrincipals(System.String)">
            <summary>
            Lists the principals associated with the specified thing.
            </summary>
            <param name="thingName">The name of the thing.</param>
            
            <returns>The response from the ListThingPrincipals service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListThingPrincipals(Amazon.IoT.Model.ListThingPrincipalsRequest)">
            <summary>
            Lists the principals associated with the specified thing.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListThingPrincipals service method.</param>
            
            <returns>The response from the ListThingPrincipals service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginListThingPrincipals(Amazon.IoT.Model.ListThingPrincipalsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListThingPrincipals operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListThingPrincipals operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListThingPrincipals
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndListThingPrincipals(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListThingPrincipals operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListThingPrincipals.</param>
            
            <returns>Returns a  ListThingPrincipalsResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListThings">
            <summary>
            Lists your things. You can pass an AttributeName or AttributeValue to filter your
            things (for example, "ListThings where AttributeName=Color and AttributeValue=Red").
            </summary>
            
            <returns>The response from the ListThings service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListThings(Amazon.IoT.Model.ListThingsRequest)">
            <summary>
            Lists your things. You can pass an AttributeName or AttributeValue to filter your
            things (for example, "ListThings where AttributeName=Color and AttributeValue=Red").
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListThings service method.</param>
            
            <returns>The response from the ListThings service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginListThings(Amazon.IoT.Model.ListThingsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListThings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListThings operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListThings
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndListThings(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListThings operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListThings.</param>
            
            <returns>Returns a  ListThingsResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListTopicRules(System.String)">
            <summary>
            Lists the rules for the specific topic.
            </summary>
            <param name="topic">The topic.</param>
            
            <returns>The response from the ListTopicRules service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ListTopicRules(Amazon.IoT.Model.ListTopicRulesRequest)">
            <summary>
            Lists the rules for the specific topic.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTopicRules service method.</param>
            
            <returns>The response from the ListTopicRules service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginListTopicRules(Amazon.IoT.Model.ListTopicRulesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListTopicRules operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTopicRules operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListTopicRules
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndListTopicRules(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListTopicRules operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListTopicRules.</param>
            
            <returns>Returns a  ListTopicRulesResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.RejectCertificateTransfer(System.String)">
            <summary>
            Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer,
            the certificate status changes from <b>PENDING_TRANFER</b> to <b>INACTIVE</b>.
            
             
            <para>
            To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate
            your certificates.
            </para>
             
            <para>
            This operation can only be called by the transfer destination. After it is called,
            the certificate will be returned to the source's account in the INACTIVE state.
            </para>
            </summary>
            <param name="certificateId">The ID of the certificate.</param>
            
            <returns>The response from the RejectCertificateTransfer service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferAlreadyCompletedException">
            You can't revert the certificate transfer because the transfer is already complete.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.RejectCertificateTransfer(Amazon.IoT.Model.RejectCertificateTransferRequest)">
            <summary>
            Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer,
            the certificate status changes from <b>PENDING_TRANFER</b> to <b>INACTIVE</b>.
            
             
            <para>
            To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate
            your certificates.
            </para>
             
            <para>
            This operation can only be called by the transfer destination. After it is called,
            the certificate will be returned to the source's account in the INACTIVE state.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RejectCertificateTransfer service method.</param>
            
            <returns>The response from the RejectCertificateTransfer service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferAlreadyCompletedException">
            You can't revert the certificate transfer because the transfer is already complete.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginRejectCertificateTransfer(Amazon.IoT.Model.RejectCertificateTransferRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the RejectCertificateTransfer operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RejectCertificateTransfer operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndRejectCertificateTransfer
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndRejectCertificateTransfer(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  RejectCertificateTransfer operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginRejectCertificateTransfer.</param>
            
            <returns>Returns a  RejectCertificateTransferResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.ReplaceTopicRule(Amazon.IoT.Model.ReplaceTopicRuleRequest)">
            <summary>
            Replaces the specified rule. You must specify all parameters for the new rule. Creating
            rules is an administrator-level action. Any user who has permission to create rules
            will be able to access data processed by the rule.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ReplaceTopicRule service method.</param>
            
            <returns>The response from the ReplaceTopicRule service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.SqlParseException">
            The Rule-SQL expression can't be parsed correctly.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginReplaceTopicRule(Amazon.IoT.Model.ReplaceTopicRuleRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ReplaceTopicRule operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ReplaceTopicRule operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndReplaceTopicRule
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndReplaceTopicRule(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ReplaceTopicRule operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginReplaceTopicRule.</param>
            
            <returns>Returns a  ReplaceTopicRuleResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.SetDefaultPolicyVersion(System.String,System.String)">
            <summary>
            Sets the specified version of the specified policy as the policy's default (operative)
            version. This action affects all certificates to which the policy is attached. To
            list the principals the policy is attached to, use the ListPrincipalPolicy API.
            </summary>
            <param name="policyName">The policy name.</param>
            <param name="policyVersionId">The policy version ID.</param>
            
            <returns>The response from the SetDefaultPolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.SetDefaultPolicyVersion(Amazon.IoT.Model.SetDefaultPolicyVersionRequest)">
            <summary>
            Sets the specified version of the specified policy as the policy's default (operative)
            version. This action affects all certificates to which the policy is attached. To
            list the principals the policy is attached to, use the ListPrincipalPolicy API.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetDefaultPolicyVersion service method.</param>
            
            <returns>The response from the SetDefaultPolicyVersion service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginSetDefaultPolicyVersion(Amazon.IoT.Model.SetDefaultPolicyVersionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetDefaultPolicyVersion operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetDefaultPolicyVersion operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetDefaultPolicyVersion
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndSetDefaultPolicyVersion(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetDefaultPolicyVersion operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetDefaultPolicyVersion.</param>
            
            <returns>Returns a  SetDefaultPolicyVersionResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.SetLoggingOptions(Amazon.IoT.Model.SetLoggingOptionsRequest)">
            <summary>
            Sets the logging options.
            </summary>
            <param name="request">Container for the necessary parameters to execute the SetLoggingOptions service method.</param>
            
            <returns>The response from the SetLoggingOptions service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginSetLoggingOptions(Amazon.IoT.Model.SetLoggingOptionsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the SetLoggingOptions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the SetLoggingOptions operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndSetLoggingOptions
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndSetLoggingOptions(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  SetLoggingOptions operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginSetLoggingOptions.</param>
            
            <returns>Returns a  SetLoggingOptionsResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.TransferCertificate(System.String,System.String)">
            <summary>
            Transfers the specified certificate to the specified AWS account.
            
             
            <para>
            You can cancel the transfer until it is acknowledged by the recipient.
            </para>
             
            <para>
            No notification is sent to the transfer destination's account. It is up to the caller
            to notify the transfer target.
            </para>
             
            <para>
            The certificate being transferred must not be in the ACTIVE state. You can use the
            UpdateCertificate API to deactivate it.
            </para>
             
            <para>
            The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy
            API to detach them.
            </para>
            </summary>
            <param name="certificateId">The ID of the certificate.</param>
            <param name="targetAwsAccount">The AWS account.</param>
            
            <returns>The response from the TransferCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.CertificateStateException">
            The certificate operation is not allowed.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferConflictException">
            You can't transfer the certificate because authorization policies are still attached.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.TransferCertificate(Amazon.IoT.Model.TransferCertificateRequest)">
            <summary>
            Transfers the specified certificate to the specified AWS account.
            
             
            <para>
            You can cancel the transfer until it is acknowledged by the recipient.
            </para>
             
            <para>
            No notification is sent to the transfer destination's account. It is up to the caller
            to notify the transfer target.
            </para>
             
            <para>
            The certificate being transferred must not be in the ACTIVE state. You can use the
            UpdateCertificate API to deactivate it.
            </para>
             
            <para>
            The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy
            API to detach them.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TransferCertificate service method.</param>
            
            <returns>The response from the TransferCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.CertificateStateException">
            The certificate operation is not allowed.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.TransferConflictException">
            You can't transfer the certificate because authorization policies are still attached.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginTransferCertificate(Amazon.IoT.Model.TransferCertificateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the TransferCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TransferCertificate operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndTransferCertificate
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndTransferCertificate(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  TransferCertificate operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginTransferCertificate.</param>
            
            <returns>Returns a  TransferCertificateResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.UpdateCertificate(System.String,Amazon.IoT.CertificateStatus)">
            <summary>
            Updates the status of the specified certificate. This operation is idempotent.
            
             
            <para>
            Moving a certificate from the ACTIVE state (including REVOKED) will not disconnect
            currently connected devices, but these devices will be unable to reconnect.
            </para>
             
            <para>
            The ACTIVE state is required to authenticate devices connecting to AWS IoT using a
            certificate.
            </para>
            </summary>
            <param name="certificateId">The ID of the certificate.</param>
            <param name="newStatus">The new status. <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</param>
            
            <returns>The response from the UpdateCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.CertificateStateException">
            The certificate operation is not allowed.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.UpdateCertificate(Amazon.IoT.Model.UpdateCertificateRequest)">
            <summary>
            Updates the status of the specified certificate. This operation is idempotent.
            
             
            <para>
            Moving a certificate from the ACTIVE state (including REVOKED) will not disconnect
            currently connected devices, but these devices will be unable to reconnect.
            </para>
             
            <para>
            The ACTIVE state is required to authenticate devices connecting to AWS IoT using a
            certificate.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateCertificate service method.</param>
            
            <returns>The response from the UpdateCertificate service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.CertificateStateException">
            The certificate operation is not allowed.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginUpdateCertificate(Amazon.IoT.Model.UpdateCertificateRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateCertificate operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateCertificate operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateCertificate
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndUpdateCertificate(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateCertificate operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateCertificate.</param>
            
            <returns>Returns a  UpdateCertificateResult from IoT.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.UpdateThing(Amazon.IoT.Model.UpdateThingRequest)">
            <summary>
            Updates the data for a thing.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateThing service method.</param>
            
            <returns>The response from the UpdateThing service method, as returned by IoT.</returns>
            <exception cref="T:Amazon.IoT.Model.InternalFailureException">
            An unexpected error has occurred.
            </exception>
            <exception cref="T:Amazon.IoT.Model.InvalidRequestException">
            The request is not valid.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ServiceUnavailableException">
            The service is temporarily unavailable.
            </exception>
            <exception cref="T:Amazon.IoT.Model.ThrottlingException">
            The rate exceeds the limit.
            </exception>
            <exception cref="T:Amazon.IoT.Model.UnauthorizedException">
            You are not authorized to perform this operation.
            </exception>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.BeginUpdateThing(Amazon.IoT.Model.UpdateThingRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateThing operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateThing operation on AmazonIoTClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateThing
                    operation.</returns>
        </member>
        <member name="M:Amazon.IoT.IAmazonIoT.EndUpdateThing(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateThing operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateThing.</param>
            
            <returns>Returns a  UpdateThingResult from IoT.</returns>
        </member>
    </members>
</doc>
