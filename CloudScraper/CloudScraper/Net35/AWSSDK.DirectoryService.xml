<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.DirectoryService</name>
    </assembly>
    <members>
        <member name="T:Amazon.DirectoryService.AmazonDirectoryServiceConfig">
            <summary>
            Configuration for accessing Amazon DirectoryService service
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.AmazonDirectoryServiceConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.AmazonDirectoryServiceConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.AmazonDirectoryServiceConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.AmazonDirectoryServiceException">
            <summary>
             Common exception for the DirectoryService service.
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonDirectoryServiceException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonDirectoryServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonDirectoryServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonDirectoryServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonDirectoryServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.DirectorySize">
            <summary>
            Constants used for properties of type DirectorySize.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectorySize.Large">
            <summary>
            Constant Large for DirectorySize
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectorySize.Small">
            <summary>
            Constant Small for DirectorySize
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.DirectorySize.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.DirectorySize.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.DirectorySize.op_Implicit(System.String)~Amazon.DirectoryService.DirectorySize">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.DirectoryStage">
            <summary>
            Constants used for properties of type DirectoryStage.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Active">
            <summary>
            Constant Active for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Created">
            <summary>
            Constant Created for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Creating">
            <summary>
            Constant Creating for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Deleted">
            <summary>
            Constant Deleted for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Deleting">
            <summary>
            Constant Deleting for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Failed">
            <summary>
            Constant Failed for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Impaired">
            <summary>
            Constant Impaired for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Inoperable">
            <summary>
            Constant Inoperable for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Requested">
            <summary>
            Constant Requested for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.RestoreFailed">
            <summary>
            Constant RestoreFailed for DirectoryStage
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryStage.Restoring">
            <summary>
            Constant Restoring for DirectoryStage
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.DirectoryStage.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.DirectoryStage.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.DirectoryStage.op_Implicit(System.String)~Amazon.DirectoryService.DirectoryStage">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.DirectoryType">
            <summary>
            Constants used for properties of type DirectoryType.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryType.ADConnector">
            <summary>
            Constant ADConnector for DirectoryType
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryType.MicrosoftAD">
            <summary>
            Constant MicrosoftAD for DirectoryType
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.DirectoryType.SimpleAD">
            <summary>
            Constant SimpleAD for DirectoryType
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.DirectoryType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.DirectoryType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.DirectoryType.op_Implicit(System.String)~Amazon.DirectoryService.DirectoryType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.RadiusAuthenticationProtocol">
            <summary>
            Constants used for properties of type RadiusAuthenticationProtocol.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusAuthenticationProtocol.CHAP">
            <summary>
            Constant CHAP for RadiusAuthenticationProtocol
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusAuthenticationProtocol.MSCHAPv1">
            <summary>
            Constant MSCHAPv1 for RadiusAuthenticationProtocol
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusAuthenticationProtocol.MSCHAPv2">
            <summary>
            Constant MSCHAPv2 for RadiusAuthenticationProtocol
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusAuthenticationProtocol.PAP">
            <summary>
            Constant PAP for RadiusAuthenticationProtocol
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.RadiusAuthenticationProtocol.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.RadiusAuthenticationProtocol.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.RadiusAuthenticationProtocol.op_Implicit(System.String)~Amazon.DirectoryService.RadiusAuthenticationProtocol">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.RadiusStatus">
            <summary>
            Constants used for properties of type RadiusStatus.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusStatus.Completed">
            <summary>
            Constant Completed for RadiusStatus
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusStatus.Creating">
            <summary>
            Constant Creating for RadiusStatus
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.RadiusStatus.Failed">
            <summary>
            Constant Failed for RadiusStatus
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.RadiusStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.RadiusStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.RadiusStatus.op_Implicit(System.String)~Amazon.DirectoryService.RadiusStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.SnapshotStatus">
            <summary>
            Constants used for properties of type SnapshotStatus.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.SnapshotStatus.Completed">
            <summary>
            Constant Completed for SnapshotStatus
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.SnapshotStatus.Creating">
            <summary>
            Constant Creating for SnapshotStatus
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.SnapshotStatus.Failed">
            <summary>
            Constant Failed for SnapshotStatus
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.SnapshotStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.SnapshotStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.SnapshotStatus.op_Implicit(System.String)~Amazon.DirectoryService.SnapshotStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.SnapshotType">
            <summary>
            Constants used for properties of type SnapshotType.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.SnapshotType.Auto">
            <summary>
            Constant Auto for SnapshotType
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.SnapshotType.Manual">
            <summary>
            Constant Manual for SnapshotType
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.SnapshotType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.SnapshotType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.SnapshotType.op_Implicit(System.String)~Amazon.DirectoryService.SnapshotType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.TopicStatus">
            <summary>
            Constants used for properties of type TopicStatus.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TopicStatus.Deleted">
            <summary>
            Constant Deleted for TopicStatus
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TopicStatus.Failed">
            <summary>
            Constant Failed for TopicStatus
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TopicStatus.Registered">
            <summary>
            Constant Registered for TopicStatus
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TopicStatus.TopicNotFound">
            <summary>
            Constant TopicNotFound for TopicStatus
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.TopicStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.TopicStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.TopicStatus.op_Implicit(System.String)~Amazon.DirectoryService.TopicStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.TrustDirection">
            <summary>
            Constants used for properties of type TrustDirection.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TrustDirection.OneWayIncoming">
            <summary>
            Constant OneWayIncoming for TrustDirection
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TrustDirection.OneWayOutgoing">
            <summary>
            Constant OneWayOutgoing for TrustDirection
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TrustDirection.TwoWay">
            <summary>
            Constant TwoWay for TrustDirection
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.TrustDirection.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.TrustDirection.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.TrustDirection.op_Implicit(System.String)~Amazon.DirectoryService.TrustDirection">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.TrustState">
            <summary>
            Constants used for properties of type TrustState.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TrustState.Created">
            <summary>
            Constant Created for TrustState
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TrustState.Creating">
            <summary>
            Constant Creating for TrustState
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TrustState.Deleted">
            <summary>
            Constant Deleted for TrustState
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TrustState.Deleting">
            <summary>
            Constant Deleting for TrustState
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TrustState.Failed">
            <summary>
            Constant Failed for TrustState
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TrustState.Verified">
            <summary>
            Constant Verified for TrustState
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TrustState.VerifyFailed">
            <summary>
            Constant VerifyFailed for TrustState
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TrustState.Verifying">
            <summary>
            Constant Verifying for TrustState
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.TrustState.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.TrustState.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.TrustState.op_Implicit(System.String)~Amazon.DirectoryService.TrustState">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.TrustType">
            <summary>
            Constants used for properties of type TrustType.
            </summary>
        </member>
        <member name="F:Amazon.DirectoryService.TrustType.Forest">
            <summary>
            Constant Forest for TrustType
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.TrustType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.TrustType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DirectoryService.TrustType.op_Implicit(System.String)~Amazon.DirectoryService.TrustType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.AmazonDirectoryServiceRequest">
            <summary>
            Base class for DirectoryService operation requests.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Attribute">
            <summary>
            Represents a named directory attribute.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Attribute.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name of the attribute.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Attribute.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The value of the attribute.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.AuthenticationFailedException.#ctor(System.String)">
            <summary>
            Constructs a new AuthenticationFailedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.AuthenticationFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AuthenticationFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.AuthenticationFailedException.#ctor(System.Exception)">
            <summary>
            Construct instance of AuthenticationFailedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.AuthenticationFailedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthenticationFailedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.AuthenticationFailedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AuthenticationFailedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.ClientException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ClientException.#ctor(System.String)">
            <summary>
            Constructs a new ClientException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ClientException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ClientException.#ctor(System.Exception)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ClientException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ClientException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ClientException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Computer">
            <summary>
            Contains information about a computer account in a directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Computer.ComputerAttributes">
            <summary>
            Gets and sets the property ComputerAttributes. 
            <para>
            An array of <a>Attribute</a> objects containing the LDAP attributes that belong to
            the computer account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Computer.ComputerId">
            <summary>
            Gets and sets the property ComputerId. 
            <para>
            The identifier of the computer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Computer.ComputerName">
            <summary>
            Gets and sets the property ComputerName. 
            <para>
            The computer name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.ConnectDirectoryRequest">
            <summary>
            Container for the parameters to the ConnectDirectory operation.
            Creates an AD Connector to connect to an on-premises directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryRequest.ConnectSettings">
            <summary>
            Gets and sets the property ConnectSettings. 
            <para>
            A <a>DirectoryConnectSettings</a> object that contains additional information for
            the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A textual description for the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The fully-qualified name of the on-premises directory, such as <code>corp.example.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password for the on-premises user account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryRequest.ShortName">
            <summary>
            Gets and sets the property ShortName. 
            <para>
            The NetBIOS name of the on-premises directory, such as <code>CORP</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryRequest.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.ConnectDirectoryResponse">
            <summary>
            Contains the results of the <a>ConnectDirectory</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.ConnectDirectoryResponse.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the new directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateAliasRequest">
            <summary>
            Container for the parameters to the CreateAlias operation.
            Creates an alias for a directory and assigns the alias to the directory. The alias
            is used to construct the access URL for the directory, such as <code>http://<![CDATA[&#x3C;]]>alias<![CDATA[&#x3E;]]>.awsapps.com</code>.
            
             <important> 
            <para>
            After an alias has been created, it cannot be deleted or reused, so this operation
            should only be used when absolutely necessary.
            </para>
             </important>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateAliasRequest.Alias">
            <summary>
            Gets and sets the property Alias. 
            <para>
            The requested alias.
            </para>
             
            <para>
            The alias must be unique amongst all aliases in AWS. This operation throws an <code>EntityAlreadyExistsException</code>
            error if the alias already exists.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateAliasRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory for which to create the alias.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateAliasResponse">
            <summary>
            Contains the results of the <a>CreateAlias</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateAliasResponse.Alias">
            <summary>
            Gets and sets the property Alias. 
            <para>
            The alias for the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateAliasResponse.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateComputerRequest">
            <summary>
            Container for the parameters to the CreateComputer operation.
            Creates a computer account in the specified directory, and joins the computer to the
            directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateComputerRequest.ComputerAttributes">
            <summary>
            Gets and sets the property ComputerAttributes. 
            <para>
            An array of <a>Attribute</a> objects that contain any LDAP attributes to apply to
            the computer account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateComputerRequest.ComputerName">
            <summary>
            Gets and sets the property ComputerName. 
            <para>
            The name of the computer account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateComputerRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory in which to create the computer account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateComputerRequest.OrganizationalUnitDistinguishedName">
            <summary>
            Gets and sets the property OrganizationalUnitDistinguishedName. 
            <para>
            The fully-qualified distinguished name of the organizational unit to place the computer
            account in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateComputerRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            A one-time password that is used to join the computer to the directory. You should
            generate a random, strong password to use for this parameter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateComputerResponse">
            <summary>
            Contains the results for the <a>CreateComputer</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateComputerResponse.Computer">
            <summary>
            Gets and sets the property Computer. 
            <para>
            A <a>Computer</a> object that represents the computer account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateDirectoryRequest">
            <summary>
            Container for the parameters to the CreateDirectory operation.
            Creates a Simple AD directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A textual description for the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The fully qualified name for the directory, such as <code>corp.example.com</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password for the directory administrator. The directory creation process creates
            a directory administrator account with the username <code>Administrator</code> and
            this password.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryRequest.ShortName">
            <summary>
            Gets and sets the property ShortName. 
            <para>
            The short name of the directory, such as <code>CORP</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryRequest.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The size of the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryRequest.VpcSettings">
            <summary>
            Gets and sets the property VpcSettings. 
            <para>
            A <a>DirectoryVpcSettings</a> object that contains additional information for the
            operation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateDirectoryResponse">
            <summary>
            Contains the results of the <a>CreateDirectory</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateDirectoryResponse.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory that was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateMicrosoftADRequest">
            <summary>
            Container for the parameters to the CreateMicrosoftAD operation.
            Creates a Microsoft AD in the AWS cloud.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateMicrosoftADRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A textual description for the directory. This label will appear on the AWS console
            <code>Directory Details</code> page after the directory is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateMicrosoftADRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The fully qualified domain name for the directory, such as <code>corp.example.com</code>.
            This name will resolve inside your VPC only. It does not need to be publicly resolvable.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateMicrosoftADRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password for the default administrative user named <code>Admin</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateMicrosoftADRequest.ShortName">
            <summary>
            Gets and sets the property ShortName. 
            <para>
            The NetBIOS name for your domain. A short identifier for your domain, such as <code>CORP</code>.
            If you don't specify a NetBIOS name, it will default to the first part of your directory
            DNS. For example, <code>CORP</code> for the directory DNS <code>corp.example.com</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateMicrosoftADRequest.VpcSettings">
            <summary>
            Gets and sets the property VpcSettings.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateMicrosoftADResponse">
            <summary>
            This is the response object from the CreateMicrosoftAD operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateMicrosoftADResponse.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. The identifier of the directory that was created.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateSnapshotRequest">
            <summary>
            Container for the parameters to the CreateSnapshot operation.
            Creates a snapshot of a Simple AD or Microsoft AD directory in the AWS cloud.
            
             <note> 
            <para>
            You cannot take snapshots of AD Connector directories.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateSnapshotRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory of which to take a snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateSnapshotRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The descriptive name to apply to the snapshot.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateSnapshotResponse">
            <summary>
            Contains the results of the <a>CreateSnapshot</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateSnapshotResponse.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The identifier of the snapshot that was created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateTrustRequest">
            <summary>
            Container for the parameters to the CreateTrust operation.
            AWS Directory Service for Microsoft Active Directory allows you to configure trust
            relationships. For example, you can establish a trust between your Microsoft AD in
            the AWS cloud, and your existing on-premises Microsoft Active Directory. This would
            allow you to provide users and groups access to resources in either domain, with a
            single set of credentials.
            
            
            <para>
            This action initiates the creation of the AWS side of a trust relationship between
            a Microsoft AD in the AWS cloud and an external domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateTrustRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. The Directory ID of the Microsoft AD in the
            AWS cloud for which to establish the trust relationship.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateTrustRequest.RemoteDomainName">
            <summary>
            Gets and sets the property RemoteDomainName. The Fully Qualified Domain Name (FQDN)
            of the external domain for which to create the trust relationship.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateTrustRequest.TrustDirection">
            <summary>
            Gets and sets the property TrustDirection. The direction of the trust relationship.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateTrustRequest.TrustPassword">
            <summary>
            Gets and sets the property TrustPassword. The trust password. The must be the same
            password that was used when creating the trust relationship on the external domain.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateTrustRequest.TrustType">
            <summary>
            Gets and sets the property TrustType. The trust relationship type.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.CreateTrustResponse">
            <summary>
            This is the response object from the CreateTrust operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.CreateTrustResponse.TrustId">
            <summary>
            Gets and sets the property TrustId. A unique identifier for the trust relationship
            that was created.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DeleteDirectoryRequest">
            <summary>
            Container for the parameters to the DeleteDirectory operation.
            Deletes an AWS Directory Service directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DeleteDirectoryRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DeleteDirectoryResponse">
            <summary>
            Contains the results of the <a>DeleteDirectory</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DeleteDirectoryResponse.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The directory identifier.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DeleteSnapshotRequest">
            <summary>
            Container for the parameters to the DeleteSnapshot operation.
            Deletes a directory snapshot.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DeleteSnapshotRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The identifier of the directory snapshot to be deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DeleteSnapshotResponse">
            <summary>
            Contains the results of the <a>DeleteSnapshot</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DeleteSnapshotResponse.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The identifier of the directory snapshot that was deleted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DeleteTrustRequest">
            <summary>
            Container for the parameters to the DeleteTrust operation.
            Deletes an existing trust relationship between your Microsoft AD in the AWS cloud
            and an external domain.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DeleteTrustRequest.TrustId">
            <summary>
            Gets and sets the property TrustId. The Trust ID of the trust relationship to be deleted.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DeleteTrustResponse">
            <summary>
            This is the response object from the DeleteTrust operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DeleteTrustResponse.TrustId">
            <summary>
            Gets and sets the property TrustId. The Trust ID of the trust relationship that was
            deleted.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DeregisterEventTopicRequest">
            <summary>
            Container for the parameters to the DeregisterEventTopic operation.
            Removes the specified directory as a publisher to the specified SNS topic.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DeregisterEventTopicRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The Directory ID to remove as a publisher. This directory will no longer send messages
            to the specified SNS topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DeregisterEventTopicRequest.TopicName">
            <summary>
            Gets and sets the property TopicName. 
            <para>
            The name of the SNS topic from which to remove the directory as a publisher.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DeregisterEventTopicResponse">
            <summary>
            This is the response object from the DeregisterEventTopic operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DescribeDirectoriesRequest">
            <summary>
            Container for the parameters to the DescribeDirectories operation.
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the
            current account are returned.
            </para>
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeDirectoriesRequest.DirectoryIds">
            <summary>
            Gets and sets the property DirectoryIds. 
            <para>
            A list of identifiers of the directories for which to obtain the information. If this
            member is null, all directories that belong to the current account are returned.
            </para>
             
            <para>
            An empty list results in an <code>InvalidParameterException</code> being thrown.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeDirectoriesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items to return. If this value is zero, the maximum number of
            items is specified by the limitations of the operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeDirectoriesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <i>DescribeDirectoriesResult.NextToken</i> value from a previous call to <a>DescribeDirectories</a>.
            Pass null if this is the first call.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DescribeDirectoriesResponse">
            <summary>
            Contains the results of the <a>DescribeDirectories</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeDirectoriesResponse.DirectoryDescriptions">
            <summary>
            Gets and sets the property DirectoryDescriptions. 
            <para>
            The list of <a>DirectoryDescription</a> objects that were retrieved.
            </para>
             
            <para>
            It is possible that this list contains less than the number of items specified in
            the <i>Limit</i> member of the request. This occurs if there are less than the requested
            number of items left to retrieve, or if the limitations of the operation have been
            exceeded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeDirectoriesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If not null, more results are available. Pass this value for the <i>NextToken</i>
            parameter in a subsequent call to <a>DescribeDirectories</a> to retrieve the next
            set of items.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DescribeEventTopicsRequest">
            <summary>
            Container for the parameters to the DescribeEventTopics operation.
            Obtains information about which SNS topics receive status messages from the specified
            directory.
            
             
            <para>
            If no input parameters are provided, such as DirectoryId or TopicName, this request
            describes all of the associations in the account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeEventTopicsRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The Directory ID for which to get the list of associated SNS topics. If this member
            is null, associations for all Directory IDs are returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeEventTopicsRequest.TopicNames">
            <summary>
            Gets and sets the property TopicNames. 
            <para>
            A list of SNS topic names for which to obtain the information. If this member is null,
            all associations for the specified Directory ID are returned.
            </para>
             
            <para>
            An empty list results in an <code>InvalidParameterException</code> being thrown.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DescribeEventTopicsResponse">
            <summary>
            This is the response object from the DescribeEventTopics operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeEventTopicsResponse.EventTopics">
            <summary>
            Gets and sets the property EventTopics. 
            <para>
            A list of SNS topic names that receive status messages from the specified Directory
            ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DescribeSnapshotsRequest">
            <summary>
            Container for the parameters to the DescribeSnapshots operation.
            Obtains information about the directory snapshots that belong to this account.
            
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeSnapshots</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeSnapshotsRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory for which to retrieve snapshot information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeSnapshotsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of objects to return.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeSnapshotsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <i>DescribeSnapshotsResult.NextToken</i> value from a previous call to <a>DescribeSnapshots</a>.
            Pass null if this is the first call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeSnapshotsRequest.SnapshotIds">
            <summary>
            Gets and sets the property SnapshotIds. 
            <para>
            A list of identifiers of the snapshots to obtain the information for. If this member
            is null or empty, all snapshots are returned using the <i>Limit</i> and <i>NextToken</i>
            members.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DescribeSnapshotsResponse">
            <summary>
            Contains the results of the <a>DescribeSnapshots</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeSnapshotsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If not null, more results are available. Pass this value in the <i>NextToken</i> member
            of a subsequent call to <a>DescribeSnapshots</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeSnapshotsResponse.Snapshots">
            <summary>
            Gets and sets the property Snapshots. 
            <para>
            The list of <a>Snapshot</a> objects that were retrieved.
            </para>
             
            <para>
            It is possible that this list contains less than the number of items specified in
            the <i>Limit</i> member of the request. This occurs if there are less than the requested
            number of items left to retrieve, or if the limitations of the operation have been
            exceeded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DescribeTrustsRequest">
            <summary>
            Container for the parameters to the DescribeTrusts operation.
            Obtains information about the trust relationships for this account.
            
             
            <para>
            If no input parameters are provided, such as DirectoryId or TrustIds, this request
            describes all the trust relationships belonging to the account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeTrustsRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. The Directory ID of the AWS directory that
            is a part of the requested trust relationship.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeTrustsRequest.Limit">
            <summary>
            Gets and sets the property Limit. The maximum number of objects to return.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeTrustsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The <i>DescribeTrustsResult.NextToken</i> value from a previous call to <a>DescribeTrusts</a>.
            Pass null if this is the first call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeTrustsRequest.TrustIds">
            <summary>
            Gets and sets the property TrustIds. 
            <para>
            A list of identifiers of the trust relationships for which to obtain the information.
            If this member is null, all trust relationships that belong to the current account
            are returned.
            </para>
             
            <para>
            An empty list results in an <code>InvalidParameterException</code> being thrown.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DescribeTrustsResponse">
            <summary>
            This is the response object from the DescribeTrusts operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeTrustsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If not null, more results are available. Pass this value for the <i>NextToken</i>
            parameter in a subsequent call to <a>DescribeTrusts</a> to retrieve the next set of
            items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DescribeTrustsResponse.Trusts">
            <summary>
            Gets and sets the property Trusts. 
            <para>
            The list of Trust objects that were retrieved.
            </para>
             
            <para>
            It is possible that this list contains less than the number of items specified in
            the <i>Limit</i> member of the request. This occurs if there are less than the requested
            number of items left to retrieve, or if the limitations of the operation have been
            exceeded.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryConnectSettings">
            <summary>
            Contains information for the <a>ConnectDirectory</a> operation when an AD Connector
            directory is being created.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettings.CustomerDnsIps">
            <summary>
            Gets and sets the property CustomerDnsIps. 
            <para>
            A list of one or more IP addresses of DNS servers or domain controllers in the on-premises
            directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettings.CustomerUserName">
            <summary>
            Gets and sets the property CustomerUserName. 
            <para>
            The username of an account in the on-premises directory that is used to connect to
            the directory. This account must have the following privileges:
            </para>
             <ul> <li>Read users and groups</li> <li>Create computer objects</li> <li>Join computers
            to the domain</li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettings.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            A list of subnet identifiers in the VPC in which the AD Connector is created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettings.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The identifier of the VPC in which the AD Connector is created.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription">
            <summary>
            Contains information about an AD Connector directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            A list of the Availability Zones that the directory is in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription.ConnectIps">
            <summary>
            Gets and sets the property ConnectIps. 
            <para>
            The IP addresses of the AD Connector servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription.CustomerUserName">
            <summary>
            Gets and sets the property CustomerUserName. 
            <para>
            The username of the service account in the on-premises directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription.SecurityGroupId">
            <summary>
            Gets and sets the property SecurityGroupId. 
            <para>
            The security group identifier for the AD Connector directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            A list of subnet identifiers in the VPC that the AD connector is in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryConnectSettingsDescription.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The identifier of the VPC that the AD Connector is in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryDescription">
            <summary>
            Contains information about an AWS Directory Service directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.AccessUrl">
            <summary>
            Gets and sets the property AccessUrl. 
            <para>
            The access URL for the directory, such as <code>http://<![CDATA[&#x3C;]]>alias<![CDATA[&#x3E;]]>.awsapps.com</code>.
            If no alias has been created for the directory, <code><![CDATA[&#x3C;]]>alias<![CDATA[&#x3E;]]></code>
            is the directory identifier, such as <code>d-XXXXXXXXXX</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.Alias">
            <summary>
            Gets and sets the property Alias. 
            <para>
            The alias for the directory. If no alias has been created for the directory, the alias
            is the directory identifier, such as <code>d-XXXXXXXXXX</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.ConnectSettings">
            <summary>
            Gets and sets the property ConnectSettings. 
            <para>
            A <a>DirectoryConnectSettingsDescription</a> object that contains additional information
            about an AD Connector directory. This member is only present if the directory is an
            AD Connector directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The textual description for the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The directory identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.DnsIpAddrs">
            <summary>
            Gets and sets the property DnsIpAddrs. 
            <para>
            The IP addresses of the DNS servers for the directory. For a Simple AD or Microsoft
            AD directory, these are the IP addresses of the Simple AD or Microsoft AD directory
            servers. For an AD Connector directory, these are the IP addresses of the DNS servers
            or domain controllers in the on-premises directory to which the AD Connector is connected.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.LaunchTime">
            <summary>
            Gets and sets the property LaunchTime. 
            <para>
            Specifies when the directory was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The fully-qualified name of the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.RadiusSettings">
            <summary>
            Gets and sets the property RadiusSettings. 
            <para>
            A <a>RadiusSettings</a> object that contains information about the RADIUS server configured
            for this directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.RadiusStatus">
            <summary>
            Gets and sets the property RadiusStatus. 
            <para>
            The status of the RADIUS MFA server connection.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.ShortName">
            <summary>
            Gets and sets the property ShortName. 
            <para>
            The short name of the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.Size">
            <summary>
            Gets and sets the property Size. 
            <para>
            The directory size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.SsoEnabled">
            <summary>
            Gets and sets the property SsoEnabled. 
            <para>
            Indicates if single-sign on is enabled for the directory. For more information, see
            <a>EnableSso</a> and <a>DisableSso</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.Stage">
            <summary>
            Gets and sets the property Stage. 
            <para>
            The current stage of the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.StageLastUpdatedDateTime">
            <summary>
            Gets and sets the property StageLastUpdatedDateTime. 
            <para>
            The date and time that the stage was last updated.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.StageReason">
            <summary>
            Gets and sets the property StageReason. 
            <para>
            Additional information about the directory stage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The directory size.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryDescription.VpcSettings">
            <summary>
            Gets and sets the property VpcSettings. 
            <para>
            A <a>DirectoryVpcSettingsDescription</a> object that contains additional information
            about a directory. This member is only present if the directory is a Simple AD or
            Managed AD directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryLimitExceededException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new DirectoryLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DirectoryLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of DirectoryLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DirectoryLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DirectoryLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryLimits">
            <summary>
            Contains directory limit information for a region.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.CloudOnlyDirectoriesCurrentCount">
            <summary>
            Gets and sets the property CloudOnlyDirectoriesCurrentCount. 
            <para>
            The current number of cloud directories in the region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.CloudOnlyDirectoriesLimit">
            <summary>
            Gets and sets the property CloudOnlyDirectoriesLimit. 
            <para>
            The maximum number of cloud directories allowed in the region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.CloudOnlyDirectoriesLimitReached">
            <summary>
            Gets and sets the property CloudOnlyDirectoriesLimitReached. 
            <para>
            Indicates if the cloud directory limit has been reached.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.CloudOnlyMicrosoftADCurrentCount">
            <summary>
            Gets and sets the property CloudOnlyMicrosoftADCurrentCount. The current number of
            Microsoft AD directories in the region.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.CloudOnlyMicrosoftADLimit">
            <summary>
            Gets and sets the property CloudOnlyMicrosoftADLimit. The maximum number of Microsoft
            AD directories allowed in the region.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.CloudOnlyMicrosoftADLimitReached">
            <summary>
            Gets and sets the property CloudOnlyMicrosoftADLimitReached. Indicates if the Microsoft
            AD directory limit has been reached.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.ConnectedDirectoriesCurrentCount">
            <summary>
            Gets and sets the property ConnectedDirectoriesCurrentCount. 
            <para>
            The current number of connected directories in the region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.ConnectedDirectoriesLimit">
            <summary>
            Gets and sets the property ConnectedDirectoriesLimit. 
            <para>
            The maximum number of connected directories allowed in the region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryLimits.ConnectedDirectoriesLimitReached">
            <summary>
            Gets and sets the property ConnectedDirectoriesLimitReached. 
            <para>
            Indicates if the connected directory limit has been reached.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryUnavailableException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new DirectoryUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DirectoryUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of DirectoryUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DirectoryUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.DirectoryUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DirectoryUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryVpcSettings">
            <summary>
            Contains VPC information for the <a>CreateDirectory</a> or <a>CreateMicrosoftAD</a>
            operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryVpcSettings.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The identifiers of the subnets for the directory servers. The two subnets must be
            in different Availability Zones. AWS Directory Service creates a directory server
            and a DNS server in each of these subnets.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryVpcSettings.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The identifier of the VPC in which to create the directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DirectoryVpcSettingsDescription">
            <summary>
            Contains information about the directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryVpcSettingsDescription.AvailabilityZones">
            <summary>
            Gets and sets the property AvailabilityZones. 
            <para>
            The list of Availability Zones that the directory is in.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryVpcSettingsDescription.SecurityGroupId">
            <summary>
            Gets and sets the property SecurityGroupId. 
            <para>
            The security group identifier for the directory. If the directory was created before
            8/1/2014, this is the identifier of the directory members security group that was
            created when the directory was created. If the directory was created after this date,
            this value is null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryVpcSettingsDescription.SubnetIds">
            <summary>
            Gets and sets the property SubnetIds. 
            <para>
            The identifiers of the subnets for the directory servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DirectoryVpcSettingsDescription.VpcId">
            <summary>
            Gets and sets the property VpcId. 
            <para>
            The identifier of the VPC that the directory is in.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DisableRadiusRequest">
            <summary>
            Container for the parameters to the DisableRadius operation.
            Disables multi-factor authentication (MFA) with the Remote Authentication Dial In
            User Service (RADIUS) server for an AD Connector directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DisableRadiusRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory for which to disable MFA.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DisableRadiusResponse">
            <summary>
            Contains the results of the <a>DisableRadius</a> operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DisableSsoRequest">
            <summary>
            Container for the parameters to the DisableSso operation.
            Disables single-sign on for a directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DisableSsoRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory for which to disable single-sign on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DisableSsoRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password of an alternate account to use to disable single-sign on. This is only
            used for AD Connector directories. For more information, see the <i>UserName</i> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.DisableSsoRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            The username of an alternate account to use to disable single-sign on. This is only
            used for AD Connector directories. This account must have privileges to remove a service
            principal name. 
            </para>
             
            <para>
            If the AD Connector service account does not have privileges to remove a service principal
            name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i>
            parameters. These credentials are only used to disable single sign-on and are not
            stored by the service. The AD Connector service account is not changed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.DisableSsoResponse">
            <summary>
            Contains the results of the <a>DisableSso</a> operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EnableRadiusRequest">
            <summary>
            Container for the parameters to the EnableRadius operation.
            Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User
            Service (RADIUS) server for an AD Connector directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EnableRadiusRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory for which to enable MFA.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EnableRadiusRequest.RadiusSettings">
            <summary>
            Gets and sets the property RadiusSettings. 
            <para>
            A <a>RadiusSettings</a> object that contains information about the RADIUS server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EnableRadiusResponse">
            <summary>
            Contains the results of the <a>EnableRadius</a> operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EnableSsoRequest">
            <summary>
            Container for the parameters to the EnableSso operation.
            Enables single-sign on for a directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EnableSsoRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory for which to enable single-sign on.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EnableSsoRequest.Password">
            <summary>
            Gets and sets the property Password. 
            <para>
            The password of an alternate account to use to enable single-sign on. This is only
            used for AD Connector directories. For more information, see the <i>UserName</i> parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EnableSsoRequest.UserName">
            <summary>
            Gets and sets the property UserName. 
            <para>
            The username of an alternate account to use to enable single-sign on. This is only
            used for AD Connector directories. This account must have privileges to add a service
            principal name. 
            </para>
             
            <para>
            If the AD Connector service account does not have privileges to add a service principal
            name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i>
            parameters. These credentials are only used to enable single sign-on and are not stored
            by the service. The AD Connector service account is not changed.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EnableSsoResponse">
            <summary>
            Contains the results of the <a>EnableSso</a> operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new EntityAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EntityAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of EntityAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntityAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntityAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityDoesNotExistException.#ctor(System.String)">
            <summary>
            Constructs a new EntityDoesNotExistException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityDoesNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of EntityDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityDoesNotExistException.#ctor(System.Exception)">
            <summary>
            Construct instance of EntityDoesNotExistException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityDoesNotExistException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntityDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.EntityDoesNotExistException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of EntityDoesNotExistException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.EventTopic">
            <summary>
            Information about SNS topic and AWS Directory Service directory associations.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EventTopic.CreatedDateTime">
            <summary>
            Gets and sets the property CreatedDateTime. 
            <para>
            The date and time of when you associated your directory with the SNS topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EventTopic.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The Directory ID of an AWS Directory Service directory that will publish status messages
            to an SNS topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EventTopic.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The topic registration status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EventTopic.TopicArn">
            <summary>
            Gets and sets the property TopicArn. 
            <para>
            The SNS topic ARN (Amazon Resource Name).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.EventTopic.TopicName">
            <summary>
            Gets and sets the property TopicName. 
            <para>
            The name of an AWS SNS topic the receives status messages from the directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.GetDirectoryLimitsRequest">
            <summary>
            Container for the parameters to the GetDirectoryLimits operation.
            Obtains directory limit information for the current region.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.GetDirectoryLimitsResponse">
            <summary>
            Contains the results of the <a>GetDirectoryLimits</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.GetDirectoryLimitsResponse.DirectoryLimits">
            <summary>
            Gets and sets the property DirectoryLimits. 
            <para>
            A <a>DirectoryLimits</a> object that contains the directory limits for the current
            region.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.GetSnapshotLimitsRequest">
            <summary>
            Container for the parameters to the GetSnapshotLimits operation.
            Obtains the manual snapshot limits for a directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.GetSnapshotLimitsRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            Contains the identifier of the directory to obtain the limits for.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.GetSnapshotLimitsResponse">
            <summary>
            Contains the results of the <a>GetSnapshotLimits</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.GetSnapshotLimitsResponse.SnapshotLimits">
            <summary>
            Gets and sets the property SnapshotLimits. 
            <para>
            A <a>SnapshotLimits</a> object that contains the manual snapshot limits for the specified
            directory.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.InsufficientPermissionsException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InsufficientPermissionsException.#ctor(System.String)">
            <summary>
            Constructs a new InsufficientPermissionsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InsufficientPermissionsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InsufficientPermissionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InsufficientPermissionsException.#ctor(System.Exception)">
            <summary>
            Construct instance of InsufficientPermissionsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InsufficientPermissionsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientPermissionsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InsufficientPermissionsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InsufficientPermissionsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidNextTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidNextTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidNextTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidNextTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidNextTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidNextTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidNextTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.InvalidParameterException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.RadiusSettings">
            <summary>
            Contains information about a Remote Authentication Dial In User Service (RADIUS) server.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.AuthenticationProtocol">
            <summary>
            Gets and sets the property AuthenticationProtocol. 
            <para>
            The protocol specified for your RADIUS endpoints.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.DisplayLabel">
            <summary>
            Gets and sets the property DisplayLabel. 
            <para>
            Not currently used.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.RadiusPort">
            <summary>
            Gets and sets the property RadiusPort. 
            <para>
            The port that your RADIUS server is using for communications. Your on-premises network
            must allow inbound traffic over this port from the AWS Directory Service servers.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.RadiusRetries">
            <summary>
            Gets and sets the property RadiusRetries. 
            <para>
            The maximum number of times that communication with the RADIUS server is attempted.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.RadiusServers">
            <summary>
            Gets and sets the property RadiusServers. 
            <para>
            An array of strings that contains the IP addresses of the RADIUS server endpoints,
            or the IP addresses of your RADIUS server load balancer.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.RadiusTimeout">
            <summary>
            Gets and sets the property RadiusTimeout. 
            <para>
            The amount of time, in seconds, to wait for the RADIUS server to respond.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.SharedSecret">
            <summary>
            Gets and sets the property SharedSecret. 
            <para>
            The shared secret code that was specified when your RADIUS endpoints were created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RadiusSettings.UseSameUsername">
            <summary>
            Gets and sets the property UseSameUsername. 
            <para>
            Not currently used.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.RegisterEventTopicRequest">
            <summary>
            Container for the parameters to the RegisterEventTopic operation.
            Associates a directory with an SNS topic. This establishes the directory as a publisher
            to the specified SNS topic. You can then receive email or text (SMS) messages when
            the status of your directory changes. You get notified if your directory goes from
            an Active status to an Impaired or Inoperable status. You also receive a notification
            when the directory returns to an Active status.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RegisterEventTopicRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The Directory ID that will publish status messages to the SNS topic.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RegisterEventTopicRequest.TopicName">
            <summary>
            Gets and sets the property TopicName. 
            <para>
            The SNS topic name to which the directory will publish status messages. This SNS topic
            must be in the same region as the specified Directory ID.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.RegisterEventTopicResponse">
            <summary>
            This is the response object from the RegisterEventTopic operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.RestoreFromSnapshotRequest">
            <summary>
            Container for the parameters to the RestoreFromSnapshot operation.
            Restores a directory using an existing directory snapshot.
            
             
            <para>
            When you restore a directory from a snapshot, any changes made to the directory after
            the snapshot date are overwritten.
            </para>
             
            <para>
            This action returns as soon as the restore operation is initiated. You can monitor
            the progress of the restore operation by calling the <a>DescribeDirectories</a> operation
            with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes
            to <code>Active</code>, the restore operation is complete.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.RestoreFromSnapshotRequest.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The identifier of the snapshot to restore from.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.RestoreFromSnapshotResponse">
            <summary>
            Contains the results of the <a>RestoreFromSnapshot</a> operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.ServiceException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ServiceException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ServiceException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ServiceException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.ServiceException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Snapshot">
            <summary>
            Describes a directory snapshot.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Snapshot.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The directory identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Snapshot.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The descriptive name of the snapshot.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Snapshot.SnapshotId">
            <summary>
            Gets and sets the property SnapshotId. 
            <para>
            The snapshot identifier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Snapshot.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The date and time that the snapshot was taken.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Snapshot.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The snapshot status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Snapshot.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The snapshot type.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.SnapshotLimitExceededException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.SnapshotLimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new SnapshotLimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.SnapshotLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of SnapshotLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.SnapshotLimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of SnapshotLimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.SnapshotLimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SnapshotLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.SnapshotLimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of SnapshotLimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.SnapshotLimits">
            <summary>
            Contains manual snapshot limit information for a directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.SnapshotLimits.ManualSnapshotsCurrentCount">
            <summary>
            Gets and sets the property ManualSnapshotsCurrentCount. 
            <para>
            The current number of manual snapshots of the directory.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.SnapshotLimits.ManualSnapshotsLimit">
            <summary>
            Gets and sets the property ManualSnapshotsLimit. 
            <para>
            The maximum number of manual snapshots allowed.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.SnapshotLimits.ManualSnapshotsLimitReached">
            <summary>
            Gets and sets the property ManualSnapshotsLimitReached. 
            <para>
            Indicates if the manual snapshot limit has been reached.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Trust">
            <summary>
            Describes a trust relationship between an Microsoft AD in the AWS cloud and an external
            domain.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Trust.CreatedDateTime">
            <summary>
            Gets and sets the property CreatedDateTime. The date and time that the trust relationship
            was created.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Trust.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. The Directory ID of the AWS directory involved
            in the trust relationship.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Trust.LastUpdatedDateTime">
            <summary>
            Gets and sets the property LastUpdatedDateTime. The date and time that the trust relationship
            was last updated.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Trust.RemoteDomainName">
            <summary>
            Gets and sets the property RemoteDomainName. The Fully Qualified Domain Name (FQDN)
            of the external domain involved in the trust relationship.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Trust.StateLastUpdatedDateTime">
            <summary>
            Gets and sets the property StateLastUpdatedDateTime. The date and time that the TrustState
            was last updated.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Trust.TrustDirection">
            <summary>
            Gets and sets the property TrustDirection. The trust relationship direction.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Trust.TrustId">
            <summary>
            Gets and sets the property TrustId. The unique ID of the trust relationship.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Trust.TrustState">
            <summary>
            Gets and sets the property TrustState. The trust relationship state.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Trust.TrustType">
            <summary>
            Gets and sets the property TrustType. The trust relationship type.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            <summary>
             DirectoryService exception
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.Model.UnsupportedOperationException.#ctor(System.String)">
            <summary>
            Constructs a new UnsupportedOperationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.UnsupportedOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.UnsupportedOperationException.#ctor(System.Exception)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.UnsupportedOperationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DirectoryService.Model.UnsupportedOperationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of UnsupportedOperationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DirectoryService.Model.UpdateRadiusRequest">
            <summary>
            Container for the parameters to the UpdateRadius operation.
            Updates the Remote Authentication Dial In User Service (RADIUS) server information
            for an AD Connector directory.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.UpdateRadiusRequest.DirectoryId">
            <summary>
            Gets and sets the property DirectoryId. 
            <para>
            The identifier of the directory for which to update the RADIUS server information.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.UpdateRadiusRequest.RadiusSettings">
            <summary>
            Gets and sets the property RadiusSettings. 
            <para>
            A <a>RadiusSettings</a> object that contains information about the RADIUS server.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.UpdateRadiusResponse">
            <summary>
            Contains the results of the <a>UpdateRadius</a> operation.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.VerifyTrustRequest">
            <summary>
            Container for the parameters to the VerifyTrust operation.
            AWS Directory Service for Microsoft Active Directory allows you to configure and verify
            trust relationships. 
            
            
            <para>
            This action verifies a trust relationship between your Microsoft AD in the AWS cloud
            and an external domain.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.VerifyTrustRequest.TrustId">
            <summary>
            Gets and sets the property TrustId. The unique Trust ID of the trust relationship
            to verify.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.VerifyTrustResponse">
            <summary>
            This is the response object from the VerifyTrust operation.
            </summary>
        </member>
        <member name="P:Amazon.DirectoryService.Model.VerifyTrustResponse.TrustId">
            <summary>
            Gets and sets the property TrustId. The unique Trust ID of the trust relationship
            that was verified.
            </summary>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeMarshaller">
            <summary>
            Attribute Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeMarshaller.Marshall(Amazon.DirectoryService.Model.Attribute,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeUnmarshaller">
            <summary>
            Response Unmarshaller for Attribute Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#Attribute,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.AttributeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ComputerUnmarshaller">
            <summary>
            Response Unmarshaller for Computer Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ComputerUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#Computer,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ComputerUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ComputerUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryRequestMarshaller">
            <summary>
            ConnectDirectory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryRequestMarshaller.Marshall(Amazon.DirectoryService.Model.ConnectDirectoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ConnectDirectory operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.ConnectDirectoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller">
            <summary>
            CreateAlias Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasRequestMarshaller.Marshall(Amazon.DirectoryService.Model.CreateAliasRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateAlias operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateAliasResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerRequestMarshaller">
            <summary>
            CreateComputer Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerRequestMarshaller.Marshall(Amazon.DirectoryService.Model.CreateComputerRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateComputer operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateComputerResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryRequestMarshaller">
            <summary>
            CreateDirectory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryRequestMarshaller.Marshall(Amazon.DirectoryService.Model.CreateDirectoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDirectory operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateDirectoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateMicrosoftADRequestMarshaller">
            <summary>
            CreateMicrosoftAD Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateMicrosoftADRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateMicrosoftADRequestMarshaller.Marshall(Amazon.DirectoryService.Model.CreateMicrosoftADRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateMicrosoftADResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateMicrosoftAD operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateMicrosoftADResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateMicrosoftADResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateMicrosoftADResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller">
            <summary>
            CreateSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotRequestMarshaller.Marshall(Amazon.DirectoryService.Model.CreateSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateTrustRequestMarshaller">
            <summary>
            CreateTrust Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateTrustRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateTrustRequestMarshaller.Marshall(Amazon.DirectoryService.Model.CreateTrustRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateTrustResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateTrust operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateTrustResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateTrustResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.CreateTrustResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryRequestMarshaller">
            <summary>
            DeleteDirectory Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DeleteDirectoryRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDirectory operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteDirectoryResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotRequestMarshaller">
            <summary>
            DeleteSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DeleteSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteTrustRequestMarshaller">
            <summary>
            DeleteTrust Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteTrustRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteTrustRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DeleteTrustRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteTrustResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteTrust operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteTrustResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteTrustResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeleteTrustResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeregisterEventTopicRequestMarshaller">
            <summary>
            DeregisterEventTopic Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeregisterEventTopicRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeregisterEventTopicRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DeregisterEventTopicRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeregisterEventTopicResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeregisterEventTopic operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeregisterEventTopicResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeregisterEventTopicResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DeregisterEventTopicResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesRequestMarshaller">
            <summary>
            DescribeDirectories Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DescribeDirectoriesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDirectories operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeDirectoriesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeEventTopicsRequestMarshaller">
            <summary>
            DescribeEventTopics Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeEventTopicsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeEventTopicsRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DescribeEventTopicsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeEventTopicsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEventTopics operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeEventTopicsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeEventTopicsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeEventTopicsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsRequestMarshaller">
            <summary>
            DescribeSnapshots Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DescribeSnapshotsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSnapshots operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeSnapshotsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeTrustsRequestMarshaller">
            <summary>
            DescribeTrusts Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeTrustsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeTrustsRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DescribeTrustsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeTrustsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeTrusts operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeTrustsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeTrustsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DescribeTrustsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DirectoryConnectSettingsDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#DirectoryConnectSettingsDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsMarshaller">
            <summary>
            DirectoryConnectSettings Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsMarshaller.Marshall(Amazon.DirectoryService.Model.DirectoryConnectSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryConnectSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DirectoryDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#DirectoryDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryLimitsUnmarshaller">
            <summary>
            Response Unmarshaller for DirectoryLimits Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryLimitsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#DirectoryLimits,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryLimitsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryLimitsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsDescriptionUnmarshaller">
            <summary>
            Response Unmarshaller for DirectoryVpcSettingsDescription Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsDescriptionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#DirectoryVpcSettingsDescription,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsDescriptionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsDescriptionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsMarshaller">
            <summary>
            DirectoryVpcSettings Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsMarshaller.Marshall(Amazon.DirectoryService.Model.DirectoryVpcSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DirectoryVpcSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusRequestMarshaller">
            <summary>
            DisableRadius Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DisableRadiusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableRadius operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableRadiusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoRequestMarshaller">
            <summary>
            DisableSso Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoRequestMarshaller.Marshall(Amazon.DirectoryService.Model.DisableSsoRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisableSso operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.DisableSsoResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusRequestMarshaller">
            <summary>
            EnableRadius Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusRequestMarshaller.Marshall(Amazon.DirectoryService.Model.EnableRadiusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableRadius operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableRadiusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoRequestMarshaller">
            <summary>
            EnableSso Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoRequestMarshaller.Marshall(Amazon.DirectoryService.Model.EnableSsoRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoResponseUnmarshaller">
            <summary>
            Response Unmarshaller for EnableSso operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EnableSsoResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EventTopicUnmarshaller">
            <summary>
            Response Unmarshaller for EventTopic Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EventTopicUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#EventTopic,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EventTopicUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.EventTopicUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsRequestMarshaller">
            <summary>
            GetDirectoryLimits Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsRequestMarshaller.Marshall(Amazon.DirectoryService.Model.GetDirectoryLimitsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDirectoryLimits operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetDirectoryLimitsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsRequestMarshaller">
            <summary>
            GetSnapshotLimits Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsRequestMarshaller.Marshall(Amazon.DirectoryService.Model.GetSnapshotLimitsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSnapshotLimits operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.GetSnapshotLimitsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsMarshaller">
            <summary>
            RadiusSettings Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsMarshaller.Marshall(Amazon.DirectoryService.Model.RadiusSettings,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for RadiusSettings Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#RadiusSettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RadiusSettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RegisterEventTopicRequestMarshaller">
            <summary>
            RegisterEventTopic Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RegisterEventTopicRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RegisterEventTopicRequestMarshaller.Marshall(Amazon.DirectoryService.Model.RegisterEventTopicRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RegisterEventTopicResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RegisterEventTopic operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RegisterEventTopicResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RegisterEventTopicResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RegisterEventTopicResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotRequestMarshaller">
            <summary>
            RestoreFromSnapshot Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotRequestMarshaller.Marshall(Amazon.DirectoryService.Model.RestoreFromSnapshotRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RestoreFromSnapshot operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.RestoreFromSnapshotResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotLimitsUnmarshaller">
            <summary>
            Response Unmarshaller for SnapshotLimits Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotLimitsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#SnapshotLimits,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotLimitsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotLimitsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotUnmarshaller">
            <summary>
            Response Unmarshaller for Snapshot Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#Snapshot,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.SnapshotUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.TrustUnmarshaller">
            <summary>
            Response Unmarshaller for Trust Object
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.TrustUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DirectoryService#Model#Trust,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.TrustUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.TrustUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusRequestMarshaller">
            <summary>
            UpdateRadius Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusRequestMarshaller.Marshall(Amazon.DirectoryService.Model.UpdateRadiusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateRadius operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.UpdateRadiusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.VerifyTrustRequestMarshaller">
            <summary>
            VerifyTrust Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.VerifyTrustRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.VerifyTrustRequestMarshaller.Marshall(Amazon.DirectoryService.Model.VerifyTrustRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DirectoryService.Model.Internal.MarshallTransformations.VerifyTrustResponseUnmarshaller">
            <summary>
            Response Unmarshaller for VerifyTrust operation
            </summary>  
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.VerifyTrustResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DirectoryService.Model.Internal.MarshallTransformations.VerifyTrustResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DirectoryService.Model.Internal.MarshallTransformations.VerifyTrustResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DirectoryService.AmazonDirectoryServiceClient">
             <summary>
             Implementation for accessing DirectoryService
            
             AWS Directory Service 
             <para>
             This is the <i>AWS Directory Service API Reference</i>. This guide provides detailed
             information about AWS Directory Service operations, data types, parameters, and errors.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor">
             <summary>
             Constructs AmazonDirectoryServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonDirectoryServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(Amazon.DirectoryService.AmazonDirectoryServiceConfig)">
             <summary>
             Constructs AmazonDirectoryServiceClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonDirectoryServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.DirectoryService.AmazonDirectoryServiceConfig)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Credentials and an
            AmazonDirectoryServiceClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonDirectoryServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(System.String,System.String,Amazon.DirectoryService.AmazonDirectoryServiceConfig)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDirectoryServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonDirectoryServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.#ctor(System.String,System.String,System.String,Amazon.DirectoryService.AmazonDirectoryServiceConfig)">
            <summary>
            Constructs AmazonDirectoryServiceClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDirectoryServiceClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonDirectoryServiceClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.ConnectDirectory(Amazon.DirectoryService.Model.ConnectDirectoryRequest)">
            <summary>
            Creates an AD Connector to connect to an on-premises directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConnectDirectory service method.</param>
            
            <returns>The response from the ConnectDirectory service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryLimitExceededException">
            The maximum number of directories in the region has been reached. You can use the
            <a>GetDirectoryLimits</a> operation to determine your directory limits in the region.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginConnectDirectory(Amazon.DirectoryService.Model.ConnectDirectoryRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ConnectDirectory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConnectDirectory operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndConnectDirectory
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndConnectDirectory(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ConnectDirectory operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginConnectDirectory.</param>
            
            <returns>Returns a  ConnectDirectoryResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateAlias(Amazon.DirectoryService.Model.CreateAliasRequest)">
            <summary>
            Creates an alias for a directory and assigns the alias to the directory. The alias
            is used to construct the access URL for the directory, such as <code>http://<![CDATA[&#x3C;]]>alias<![CDATA[&#x3E;]]>.awsapps.com</code>.
            
             <important> 
            <para>
            After an alias has been created, it cannot be deleted or reused, so this operation
            should only be used when absolutely necessary.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAlias service method.</param>
            
            <returns>The response from the CreateAlias service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            The specified entity already exists.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginCreateAlias(Amazon.DirectoryService.Model.CreateAliasRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateAlias operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAlias operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateAlias
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndCreateAlias(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateAlias operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateAlias.</param>
            
            <returns>Returns a  CreateAliasResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateComputer(Amazon.DirectoryService.Model.CreateComputerRequest)">
            <summary>
            Creates a computer account in the specified directory, and joins the computer to the
            directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateComputer service method.</param>
            
            <returns>The response from the CreateComputer service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            An authentication error occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryUnavailableException">
            The specified directory is unavailable or could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            The specified entity already exists.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            The operation is not supported.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginCreateComputer(Amazon.DirectoryService.Model.CreateComputerRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateComputer operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateComputer operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateComputer
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndCreateComputer(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateComputer operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateComputer.</param>
            
            <returns>Returns a  CreateComputerResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateDirectory(Amazon.DirectoryService.Model.CreateDirectoryRequest)">
            <summary>
            Creates a Simple AD directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDirectory service method.</param>
            
            <returns>The response from the CreateDirectory service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryLimitExceededException">
            The maximum number of directories in the region has been reached. You can use the
            <a>GetDirectoryLimits</a> operation to determine your directory limits in the region.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginCreateDirectory(Amazon.DirectoryService.Model.CreateDirectoryRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateDirectory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDirectory operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateDirectory
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndCreateDirectory(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateDirectory operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateDirectory.</param>
            
            <returns>Returns a  CreateDirectoryResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateMicrosoftAD(Amazon.DirectoryService.Model.CreateMicrosoftADRequest)">
            <summary>
            Creates a Microsoft AD in the AWS cloud.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMicrosoftAD service method.</param>
            
            <returns>The response from the CreateMicrosoftAD service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryLimitExceededException">
            The maximum number of directories in the region has been reached. You can use the
            <a>GetDirectoryLimits</a> operation to determine your directory limits in the region.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            The operation is not supported.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginCreateMicrosoftAD(Amazon.DirectoryService.Model.CreateMicrosoftADRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateMicrosoftAD operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateMicrosoftAD operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateMicrosoftAD
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndCreateMicrosoftAD(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateMicrosoftAD operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateMicrosoftAD.</param>
            
            <returns>Returns a  CreateMicrosoftADResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateSnapshot(Amazon.DirectoryService.Model.CreateSnapshotRequest)">
            <summary>
            Creates a snapshot of a Simple AD or Microsoft AD directory in the AWS cloud.
            
             <note> 
            <para>
            You cannot take snapshots of AD Connector directories.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot service method.</param>
            
            <returns>The response from the CreateSnapshot service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.SnapshotLimitExceededException">
            The maximum number of manual snapshots for the directory has been reached. You can
            use the <a>GetSnapshotLimits</a> operation to determine the snapshot limits for a
            directory.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginCreateSnapshot(Amazon.DirectoryService.Model.CreateSnapshotRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateSnapshot
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndCreateSnapshot(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateSnapshot operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateSnapshot.</param>
            
            <returns>Returns a  CreateSnapshotResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.CreateTrust(Amazon.DirectoryService.Model.CreateTrustRequest)">
            <summary>
            AWS Directory Service for Microsoft Active Directory allows you to configure trust
            relationships. For example, you can establish a trust between your Microsoft AD in
            the AWS cloud, and your existing on-premises Microsoft Active Directory. This would
            allow you to provide users and groups access to resources in either domain, with a
            single set of credentials.
            
            
            <para>
            This action initiates the creation of the AWS side of a trust relationship between
            a Microsoft AD in the AWS cloud and an external domain.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTrust service method.</param>
            
            <returns>The response from the CreateTrust service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            The specified entity already exists.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            The operation is not supported.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginCreateTrust(Amazon.DirectoryService.Model.CreateTrustRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateTrust operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTrust operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateTrust
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndCreateTrust(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateTrust operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateTrust.</param>
            
            <returns>Returns a  CreateTrustResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DeleteDirectory(Amazon.DirectoryService.Model.DeleteDirectoryRequest)">
            <summary>
            Deletes an AWS Directory Service directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDirectory service method.</param>
            
            <returns>The response from the DeleteDirectory service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginDeleteDirectory(Amazon.DirectoryService.Model.DeleteDirectoryRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteDirectory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDirectory operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteDirectory
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndDeleteDirectory(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteDirectory operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteDirectory.</param>
            
            <returns>Returns a  DeleteDirectoryResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DeleteSnapshot(Amazon.DirectoryService.Model.DeleteSnapshotRequest)">
            <summary>
            Deletes a directory snapshot.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot service method.</param>
            
            <returns>The response from the DeleteSnapshot service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginDeleteSnapshot(Amazon.DirectoryService.Model.DeleteSnapshotRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteSnapshot
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndDeleteSnapshot(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteSnapshot operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteSnapshot.</param>
            
            <returns>Returns a  DeleteSnapshotResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DeleteTrust(Amazon.DirectoryService.Model.DeleteTrustRequest)">
            <summary>
            Deletes an existing trust relationship between your Microsoft AD in the AWS cloud
            and an external domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTrust service method.</param>
            
            <returns>The response from the DeleteTrust service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            The operation is not supported.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginDeleteTrust(Amazon.DirectoryService.Model.DeleteTrustRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteTrust operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTrust operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteTrust
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndDeleteTrust(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteTrust operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteTrust.</param>
            
            <returns>Returns a  DeleteTrustResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DeregisterEventTopic(Amazon.DirectoryService.Model.DeregisterEventTopicRequest)">
            <summary>
            Removes the specified directory as a publisher to the specified SNS topic.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterEventTopic service method.</param>
            
            <returns>The response from the DeregisterEventTopic service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginDeregisterEventTopic(Amazon.DirectoryService.Model.DeregisterEventTopicRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeregisterEventTopic operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeregisterEventTopic operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeregisterEventTopic
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndDeregisterEventTopic(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeregisterEventTopic operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeregisterEventTopic.</param>
            
            <returns>Returns a  DeregisterEventTopicResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DescribeDirectories">
            <summary>
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the
            current account are returned.
            </para>
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            
            <returns>The response from the DescribeDirectories service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            The <i>NextToken</i> value is not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DescribeDirectories(Amazon.DirectoryService.Model.DescribeDirectoriesRequest)">
            <summary>
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the
            current account are returned.
            </para>
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDirectories service method.</param>
            
            <returns>The response from the DescribeDirectories service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            The <i>NextToken</i> value is not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginDescribeDirectories(Amazon.DirectoryService.Model.DescribeDirectoriesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeDirectories operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDirectories operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeDirectories
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndDescribeDirectories(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeDirectories operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeDirectories.</param>
            
            <returns>Returns a  DescribeDirectoriesResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DescribeEventTopics(Amazon.DirectoryService.Model.DescribeEventTopicsRequest)">
            <summary>
            Obtains information about which SNS topics receive status messages from the specified
            directory.
            
             
            <para>
            If no input parameters are provided, such as DirectoryId or TopicName, this request
            describes all of the associations in the account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventTopics service method.</param>
            
            <returns>The response from the DescribeEventTopics service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginDescribeEventTopics(Amazon.DirectoryService.Model.DescribeEventTopicsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeEventTopics operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeEventTopics operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeEventTopics
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndDescribeEventTopics(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeEventTopics operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeEventTopics.</param>
            
            <returns>Returns a  DescribeEventTopicsResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DescribeSnapshots(Amazon.DirectoryService.Model.DescribeSnapshotsRequest)">
            <summary>
            Obtains information about the directory snapshots that belong to this account.
            
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeSnapshots</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots service method.</param>
            
            <returns>The response from the DescribeSnapshots service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            The <i>NextToken</i> value is not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginDescribeSnapshots(Amazon.DirectoryService.Model.DescribeSnapshotsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeSnapshots operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeSnapshots
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndDescribeSnapshots(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeSnapshots operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeSnapshots.</param>
            
            <returns>Returns a  DescribeSnapshotsResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DescribeTrusts(Amazon.DirectoryService.Model.DescribeTrustsRequest)">
            <summary>
            Obtains information about the trust relationships for this account.
            
             
            <para>
            If no input parameters are provided, such as DirectoryId or TrustIds, this request
            describes all the trust relationships belonging to the account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTrusts service method.</param>
            
            <returns>The response from the DescribeTrusts service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            The <i>NextToken</i> value is not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            The operation is not supported.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginDescribeTrusts(Amazon.DirectoryService.Model.DescribeTrustsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeTrusts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTrusts operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeTrusts
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndDescribeTrusts(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeTrusts operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeTrusts.</param>
            
            <returns>Returns a  DescribeTrustsResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DisableRadius(Amazon.DirectoryService.Model.DisableRadiusRequest)">
            <summary>
            Disables multi-factor authentication (MFA) with the Remote Authentication Dial In
            User Service (RADIUS) server for an AD Connector directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableRadius service method.</param>
            
            <returns>The response from the DisableRadius service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginDisableRadius(Amazon.DirectoryService.Model.DisableRadiusRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DisableRadius operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableRadius operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDisableRadius
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndDisableRadius(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DisableRadius operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDisableRadius.</param>
            
            <returns>Returns a  DisableRadiusResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.DisableSso(Amazon.DirectoryService.Model.DisableSsoRequest)">
            <summary>
            Disables single-sign on for a directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableSso service method.</param>
            
            <returns>The response from the DisableSso service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            An authentication error occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InsufficientPermissionsException">
            The account does not have sufficient permission to perform the operation.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginDisableSso(Amazon.DirectoryService.Model.DisableSsoRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DisableSso operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableSso operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDisableSso
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndDisableSso(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DisableSso operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDisableSso.</param>
            
            <returns>Returns a  DisableSsoResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EnableRadius(Amazon.DirectoryService.Model.EnableRadiusRequest)">
            <summary>
            Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User
            Service (RADIUS) server for an AD Connector directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableRadius service method.</param>
            
            <returns>The response from the EnableRadius service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            The specified entity already exists.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginEnableRadius(Amazon.DirectoryService.Model.EnableRadiusRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the EnableRadius operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableRadius operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndEnableRadius
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndEnableRadius(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  EnableRadius operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginEnableRadius.</param>
            
            <returns>Returns a  EnableRadiusResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EnableSso(Amazon.DirectoryService.Model.EnableSsoRequest)">
            <summary>
            Enables single-sign on for a directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableSso service method.</param>
            
            <returns>The response from the EnableSso service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            An authentication error occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InsufficientPermissionsException">
            The account does not have sufficient permission to perform the operation.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginEnableSso(Amazon.DirectoryService.Model.EnableSsoRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the EnableSso operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableSso operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndEnableSso
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndEnableSso(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  EnableSso operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginEnableSso.</param>
            
            <returns>Returns a  EnableSsoResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.GetDirectoryLimits">
            <summary>
            Obtains directory limit information for the current region.
            </summary>
            
            <returns>The response from the GetDirectoryLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.GetDirectoryLimits(Amazon.DirectoryService.Model.GetDirectoryLimitsRequest)">
            <summary>
            Obtains directory limit information for the current region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDirectoryLimits service method.</param>
            
            <returns>The response from the GetDirectoryLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginGetDirectoryLimits(Amazon.DirectoryService.Model.GetDirectoryLimitsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetDirectoryLimits operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDirectoryLimits operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetDirectoryLimits
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndGetDirectoryLimits(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetDirectoryLimits operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetDirectoryLimits.</param>
            
            <returns>Returns a  GetDirectoryLimitsResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.GetSnapshotLimits(Amazon.DirectoryService.Model.GetSnapshotLimitsRequest)">
            <summary>
            Obtains the manual snapshot limits for a directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSnapshotLimits service method.</param>
            
            <returns>The response from the GetSnapshotLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginGetSnapshotLimits(Amazon.DirectoryService.Model.GetSnapshotLimitsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetSnapshotLimits operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSnapshotLimits operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetSnapshotLimits
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndGetSnapshotLimits(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetSnapshotLimits operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetSnapshotLimits.</param>
            
            <returns>Returns a  GetSnapshotLimitsResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.RegisterEventTopic(Amazon.DirectoryService.Model.RegisterEventTopicRequest)">
            <summary>
            Associates a directory with an SNS topic. This establishes the directory as a publisher
            to the specified SNS topic. You can then receive email or text (SMS) messages when
            the status of your directory changes. You get notified if your directory goes from
            an Active status to an Impaired or Inoperable status. You also receive a notification
            when the directory returns to an Active status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterEventTopic service method.</param>
            
            <returns>The response from the RegisterEventTopic service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginRegisterEventTopic(Amazon.DirectoryService.Model.RegisterEventTopicRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the RegisterEventTopic operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RegisterEventTopic operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndRegisterEventTopic
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndRegisterEventTopic(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  RegisterEventTopic operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginRegisterEventTopic.</param>
            
            <returns>Returns a  RegisterEventTopicResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.RestoreFromSnapshot(Amazon.DirectoryService.Model.RestoreFromSnapshotRequest)">
            <summary>
            Restores a directory using an existing directory snapshot.
            
             
            <para>
            When you restore a directory from a snapshot, any changes made to the directory after
            the snapshot date are overwritten.
            </para>
             
            <para>
            This action returns as soon as the restore operation is initiated. You can monitor
            the progress of the restore operation by calling the <a>DescribeDirectories</a> operation
            with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes
            to <code>Active</code>, the restore operation is complete.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreFromSnapshot service method.</param>
            
            <returns>The response from the RestoreFromSnapshot service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginRestoreFromSnapshot(Amazon.DirectoryService.Model.RestoreFromSnapshotRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the RestoreFromSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RestoreFromSnapshot operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndRestoreFromSnapshot
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndRestoreFromSnapshot(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  RestoreFromSnapshot operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginRestoreFromSnapshot.</param>
            
            <returns>Returns a  RestoreFromSnapshotResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.UpdateRadius(Amazon.DirectoryService.Model.UpdateRadiusRequest)">
            <summary>
            Updates the Remote Authentication Dial In User Service (RADIUS) server information
            for an AD Connector directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRadius service method.</param>
            
            <returns>The response from the UpdateRadius service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginUpdateRadius(Amazon.DirectoryService.Model.UpdateRadiusRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateRadius operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateRadius operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateRadius
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndUpdateRadius(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateRadius operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateRadius.</param>
            
            <returns>Returns a  UpdateRadiusResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.VerifyTrust(Amazon.DirectoryService.Model.VerifyTrustRequest)">
            <summary>
            AWS Directory Service for Microsoft Active Directory allows you to configure and verify
            trust relationships. 
            
            
            <para>
            This action verifies a trust relationship between your Microsoft AD in the AWS cloud
            and an external domain.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyTrust service method.</param>
            
            <returns>The response from the VerifyTrust service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            The operation is not supported.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.BeginVerifyTrust(Amazon.DirectoryService.Model.VerifyTrustRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the VerifyTrust operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyTrust operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndVerifyTrust
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.AmazonDirectoryServiceClient.EndVerifyTrust(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  VerifyTrust operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginVerifyTrust.</param>
            
            <returns>Returns a  VerifyTrustResult from DirectoryService.</returns>
        </member>
        <member name="T:Amazon.DirectoryService.IAmazonDirectoryService">
             <summary>
             Interface for accessing DirectoryService
            
             AWS Directory Service 
             <para>
             This is the <i>AWS Directory Service API Reference</i>. This guide provides detailed
             information about AWS Directory Service operations, data types, parameters, and errors.
             </para>
             </summary>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.ConnectDirectory(Amazon.DirectoryService.Model.ConnectDirectoryRequest)">
            <summary>
            Creates an AD Connector to connect to an on-premises directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ConnectDirectory service method.</param>
            
            <returns>The response from the ConnectDirectory service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryLimitExceededException">
            The maximum number of directories in the region has been reached. You can use the
            <a>GetDirectoryLimits</a> operation to determine your directory limits in the region.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginConnectDirectory(Amazon.DirectoryService.Model.ConnectDirectoryRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ConnectDirectory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ConnectDirectory operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndConnectDirectory
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndConnectDirectory(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ConnectDirectory operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginConnectDirectory.</param>
            
            <returns>Returns a  ConnectDirectoryResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateAlias(Amazon.DirectoryService.Model.CreateAliasRequest)">
            <summary>
            Creates an alias for a directory and assigns the alias to the directory. The alias
            is used to construct the access URL for the directory, such as <code>http://<![CDATA[&#x3C;]]>alias<![CDATA[&#x3E;]]>.awsapps.com</code>.
            
             <important> 
            <para>
            After an alias has been created, it cannot be deleted or reused, so this operation
            should only be used when absolutely necessary.
            </para>
             </important>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateAlias service method.</param>
            
            <returns>The response from the CreateAlias service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            The specified entity already exists.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginCreateAlias(Amazon.DirectoryService.Model.CreateAliasRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateAlias operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateAlias operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateAlias
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndCreateAlias(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateAlias operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateAlias.</param>
            
            <returns>Returns a  CreateAliasResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateComputer(Amazon.DirectoryService.Model.CreateComputerRequest)">
            <summary>
            Creates a computer account in the specified directory, and joins the computer to the
            directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateComputer service method.</param>
            
            <returns>The response from the CreateComputer service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            An authentication error occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryUnavailableException">
            The specified directory is unavailable or could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            The specified entity already exists.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            The operation is not supported.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginCreateComputer(Amazon.DirectoryService.Model.CreateComputerRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateComputer operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateComputer operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateComputer
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndCreateComputer(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateComputer operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateComputer.</param>
            
            <returns>Returns a  CreateComputerResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateDirectory(Amazon.DirectoryService.Model.CreateDirectoryRequest)">
            <summary>
            Creates a Simple AD directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDirectory service method.</param>
            
            <returns>The response from the CreateDirectory service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryLimitExceededException">
            The maximum number of directories in the region has been reached. You can use the
            <a>GetDirectoryLimits</a> operation to determine your directory limits in the region.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginCreateDirectory(Amazon.DirectoryService.Model.CreateDirectoryRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateDirectory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDirectory operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateDirectory
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndCreateDirectory(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateDirectory operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateDirectory.</param>
            
            <returns>Returns a  CreateDirectoryResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateMicrosoftAD(Amazon.DirectoryService.Model.CreateMicrosoftADRequest)">
            <summary>
            Creates a Microsoft AD in the AWS cloud.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMicrosoftAD service method.</param>
            
            <returns>The response from the CreateMicrosoftAD service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.DirectoryLimitExceededException">
            The maximum number of directories in the region has been reached. You can use the
            <a>GetDirectoryLimits</a> operation to determine your directory limits in the region.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            The operation is not supported.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginCreateMicrosoftAD(Amazon.DirectoryService.Model.CreateMicrosoftADRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateMicrosoftAD operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateMicrosoftAD operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateMicrosoftAD
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndCreateMicrosoftAD(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateMicrosoftAD operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateMicrosoftAD.</param>
            
            <returns>Returns a  CreateMicrosoftADResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateSnapshot(Amazon.DirectoryService.Model.CreateSnapshotRequest)">
            <summary>
            Creates a snapshot of a Simple AD or Microsoft AD directory in the AWS cloud.
            
             <note> 
            <para>
            You cannot take snapshots of AD Connector directories.
            </para>
             </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot service method.</param>
            
            <returns>The response from the CreateSnapshot service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.SnapshotLimitExceededException">
            The maximum number of manual snapshots for the directory has been reached. You can
            use the <a>GetSnapshotLimits</a> operation to determine the snapshot limits for a
            directory.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginCreateSnapshot(Amazon.DirectoryService.Model.CreateSnapshotRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateSnapshot operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateSnapshot
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndCreateSnapshot(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateSnapshot operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateSnapshot.</param>
            
            <returns>Returns a  CreateSnapshotResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.CreateTrust(Amazon.DirectoryService.Model.CreateTrustRequest)">
            <summary>
            AWS Directory Service for Microsoft Active Directory allows you to configure trust
            relationships. For example, you can establish a trust between your Microsoft AD in
            the AWS cloud, and your existing on-premises Microsoft Active Directory. This would
            allow you to provide users and groups access to resources in either domain, with a
            single set of credentials.
            
            
            <para>
            This action initiates the creation of the AWS side of a trust relationship between
            a Microsoft AD in the AWS cloud and an external domain.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateTrust service method.</param>
            
            <returns>The response from the CreateTrust service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            The specified entity already exists.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            The operation is not supported.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginCreateTrust(Amazon.DirectoryService.Model.CreateTrustRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateTrust operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateTrust operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateTrust
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndCreateTrust(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateTrust operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateTrust.</param>
            
            <returns>Returns a  CreateTrustResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DeleteDirectory(Amazon.DirectoryService.Model.DeleteDirectoryRequest)">
            <summary>
            Deletes an AWS Directory Service directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDirectory service method.</param>
            
            <returns>The response from the DeleteDirectory service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginDeleteDirectory(Amazon.DirectoryService.Model.DeleteDirectoryRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteDirectory operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDirectory operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteDirectory
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndDeleteDirectory(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteDirectory operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteDirectory.</param>
            
            <returns>Returns a  DeleteDirectoryResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DeleteSnapshot(Amazon.DirectoryService.Model.DeleteSnapshotRequest)">
            <summary>
            Deletes a directory snapshot.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot service method.</param>
            
            <returns>The response from the DeleteSnapshot service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginDeleteSnapshot(Amazon.DirectoryService.Model.DeleteSnapshotRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSnapshot operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteSnapshot
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndDeleteSnapshot(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteSnapshot operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteSnapshot.</param>
            
            <returns>Returns a  DeleteSnapshotResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DeleteTrust(Amazon.DirectoryService.Model.DeleteTrustRequest)">
            <summary>
            Deletes an existing trust relationship between your Microsoft AD in the AWS cloud
            and an external domain.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteTrust service method.</param>
            
            <returns>The response from the DeleteTrust service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            The operation is not supported.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginDeleteTrust(Amazon.DirectoryService.Model.DeleteTrustRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteTrust operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteTrust operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteTrust
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndDeleteTrust(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteTrust operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteTrust.</param>
            
            <returns>Returns a  DeleteTrustResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DeregisterEventTopic(Amazon.DirectoryService.Model.DeregisterEventTopicRequest)">
            <summary>
            Removes the specified directory as a publisher to the specified SNS topic.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeregisterEventTopic service method.</param>
            
            <returns>The response from the DeregisterEventTopic service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginDeregisterEventTopic(Amazon.DirectoryService.Model.DeregisterEventTopicRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeregisterEventTopic operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeregisterEventTopic operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeregisterEventTopic
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndDeregisterEventTopic(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeregisterEventTopic operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeregisterEventTopic.</param>
            
            <returns>Returns a  DeregisterEventTopicResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DescribeDirectories">
            <summary>
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the
            current account are returned.
            </para>
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            
            <returns>The response from the DescribeDirectories service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            The <i>NextToken</i> value is not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DescribeDirectories(Amazon.DirectoryService.Model.DescribeDirectoriesRequest)">
            <summary>
            Obtains information about the directories that belong to this account.
            
             
            <para>
            You can retrieve information about specific directories by passing the directory identifiers
            in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the
            current account are returned.
            </para>
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeDirectories</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDirectories service method.</param>
            
            <returns>The response from the DescribeDirectories service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            The <i>NextToken</i> value is not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginDescribeDirectories(Amazon.DirectoryService.Model.DescribeDirectoriesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeDirectories operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDirectories operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeDirectories
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndDescribeDirectories(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeDirectories operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeDirectories.</param>
            
            <returns>Returns a  DescribeDirectoriesResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DescribeEventTopics(Amazon.DirectoryService.Model.DescribeEventTopicsRequest)">
            <summary>
            Obtains information about which SNS topics receive status messages from the specified
            directory.
            
             
            <para>
            If no input parameters are provided, such as DirectoryId or TopicName, this request
            describes all of the associations in the account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEventTopics service method.</param>
            
            <returns>The response from the DescribeEventTopics service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginDescribeEventTopics(Amazon.DirectoryService.Model.DescribeEventTopicsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeEventTopics operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeEventTopics operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeEventTopics
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndDescribeEventTopics(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeEventTopics operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeEventTopics.</param>
            
            <returns>Returns a  DescribeEventTopicsResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DescribeSnapshots(Amazon.DirectoryService.Model.DescribeSnapshotsRequest)">
            <summary>
            Obtains information about the directory snapshots that belong to this account.
            
             
            <para>
            This operation supports pagination with the use of the <i>NextToken</i> request and
            response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i>
            member contains a token that you pass in the next call to <a>DescribeSnapshots</a>
            to retrieve the next set of items.
            </para>
             
            <para>
            You can also specify a maximum number of return results with the <i>Limit</i> parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots service method.</param>
            
            <returns>The response from the DescribeSnapshots service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            The <i>NextToken</i> value is not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginDescribeSnapshots(Amazon.DirectoryService.Model.DescribeSnapshotsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeSnapshots operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSnapshots operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeSnapshots
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndDescribeSnapshots(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeSnapshots operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeSnapshots.</param>
            
            <returns>Returns a  DescribeSnapshotsResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DescribeTrusts(Amazon.DirectoryService.Model.DescribeTrustsRequest)">
            <summary>
            Obtains information about the trust relationships for this account.
            
             
            <para>
            If no input parameters are provided, such as DirectoryId or TrustIds, this request
            describes all the trust relationships belonging to the account.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeTrusts service method.</param>
            
            <returns>The response from the DescribeTrusts service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidNextTokenException">
            The <i>NextToken</i> value is not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            The operation is not supported.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginDescribeTrusts(Amazon.DirectoryService.Model.DescribeTrustsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeTrusts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeTrusts operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeTrusts
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndDescribeTrusts(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeTrusts operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeTrusts.</param>
            
            <returns>Returns a  DescribeTrustsResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DisableRadius(Amazon.DirectoryService.Model.DisableRadiusRequest)">
            <summary>
            Disables multi-factor authentication (MFA) with the Remote Authentication Dial In
            User Service (RADIUS) server for an AD Connector directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableRadius service method.</param>
            
            <returns>The response from the DisableRadius service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginDisableRadius(Amazon.DirectoryService.Model.DisableRadiusRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DisableRadius operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableRadius operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDisableRadius
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndDisableRadius(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DisableRadius operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDisableRadius.</param>
            
            <returns>Returns a  DisableRadiusResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.DisableSso(Amazon.DirectoryService.Model.DisableSsoRequest)">
            <summary>
            Disables single-sign on for a directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisableSso service method.</param>
            
            <returns>The response from the DisableSso service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            An authentication error occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InsufficientPermissionsException">
            The account does not have sufficient permission to perform the operation.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginDisableSso(Amazon.DirectoryService.Model.DisableSsoRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DisableSso operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisableSso operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDisableSso
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndDisableSso(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DisableSso operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDisableSso.</param>
            
            <returns>Returns a  DisableSsoResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EnableRadius(Amazon.DirectoryService.Model.EnableRadiusRequest)">
            <summary>
            Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User
            Service (RADIUS) server for an AD Connector directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableRadius service method.</param>
            
            <returns>The response from the EnableRadius service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityAlreadyExistsException">
            The specified entity already exists.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginEnableRadius(Amazon.DirectoryService.Model.EnableRadiusRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the EnableRadius operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableRadius operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndEnableRadius
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndEnableRadius(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  EnableRadius operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginEnableRadius.</param>
            
            <returns>Returns a  EnableRadiusResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EnableSso(Amazon.DirectoryService.Model.EnableSsoRequest)">
            <summary>
            Enables single-sign on for a directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the EnableSso service method.</param>
            
            <returns>The response from the EnableSso service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.AuthenticationFailedException">
            An authentication error occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InsufficientPermissionsException">
            The account does not have sufficient permission to perform the operation.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginEnableSso(Amazon.DirectoryService.Model.EnableSsoRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the EnableSso operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the EnableSso operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndEnableSso
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndEnableSso(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  EnableSso operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginEnableSso.</param>
            
            <returns>Returns a  EnableSsoResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.GetDirectoryLimits">
            <summary>
            Obtains directory limit information for the current region.
            </summary>
            
            <returns>The response from the GetDirectoryLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.GetDirectoryLimits(Amazon.DirectoryService.Model.GetDirectoryLimitsRequest)">
            <summary>
            Obtains directory limit information for the current region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDirectoryLimits service method.</param>
            
            <returns>The response from the GetDirectoryLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginGetDirectoryLimits(Amazon.DirectoryService.Model.GetDirectoryLimitsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetDirectoryLimits operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDirectoryLimits operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetDirectoryLimits
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndGetDirectoryLimits(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetDirectoryLimits operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetDirectoryLimits.</param>
            
            <returns>Returns a  GetDirectoryLimitsResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.GetSnapshotLimits(Amazon.DirectoryService.Model.GetSnapshotLimitsRequest)">
            <summary>
            Obtains the manual snapshot limits for a directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSnapshotLimits service method.</param>
            
            <returns>The response from the GetSnapshotLimits service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginGetSnapshotLimits(Amazon.DirectoryService.Model.GetSnapshotLimitsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetSnapshotLimits operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSnapshotLimits operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetSnapshotLimits
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndGetSnapshotLimits(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetSnapshotLimits operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetSnapshotLimits.</param>
            
            <returns>Returns a  GetSnapshotLimitsResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.RegisterEventTopic(Amazon.DirectoryService.Model.RegisterEventTopicRequest)">
            <summary>
            Associates a directory with an SNS topic. This establishes the directory as a publisher
            to the specified SNS topic. You can then receive email or text (SMS) messages when
            the status of your directory changes. You get notified if your directory goes from
            an Active status to an Impaired or Inoperable status. You also receive a notification
            when the directory returns to an Active status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RegisterEventTopic service method.</param>
            
            <returns>The response from the RegisterEventTopic service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginRegisterEventTopic(Amazon.DirectoryService.Model.RegisterEventTopicRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the RegisterEventTopic operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RegisterEventTopic operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndRegisterEventTopic
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndRegisterEventTopic(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  RegisterEventTopic operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginRegisterEventTopic.</param>
            
            <returns>Returns a  RegisterEventTopicResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.RestoreFromSnapshot(Amazon.DirectoryService.Model.RestoreFromSnapshotRequest)">
            <summary>
            Restores a directory using an existing directory snapshot.
            
             
            <para>
            When you restore a directory from a snapshot, any changes made to the directory after
            the snapshot date are overwritten.
            </para>
             
            <para>
            This action returns as soon as the restore operation is initiated. You can monitor
            the progress of the restore operation by calling the <a>DescribeDirectories</a> operation
            with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes
            to <code>Active</code>, the restore operation is complete.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the RestoreFromSnapshot service method.</param>
            
            <returns>The response from the RestoreFromSnapshot service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginRestoreFromSnapshot(Amazon.DirectoryService.Model.RestoreFromSnapshotRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the RestoreFromSnapshot operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RestoreFromSnapshot operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndRestoreFromSnapshot
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndRestoreFromSnapshot(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  RestoreFromSnapshot operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginRestoreFromSnapshot.</param>
            
            <returns>Returns a  RestoreFromSnapshotResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.UpdateRadius(Amazon.DirectoryService.Model.UpdateRadiusRequest)">
            <summary>
            Updates the Remote Authentication Dial In User Service (RADIUS) server information
            for an AD Connector directory.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateRadius service method.</param>
            
            <returns>The response from the UpdateRadius service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginUpdateRadius(Amazon.DirectoryService.Model.UpdateRadiusRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateRadius operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateRadius operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateRadius
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndUpdateRadius(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateRadius operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateRadius.</param>
            
            <returns>Returns a  UpdateRadiusResult from DirectoryService.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.VerifyTrust(Amazon.DirectoryService.Model.VerifyTrustRequest)">
            <summary>
            AWS Directory Service for Microsoft Active Directory allows you to configure and verify
            trust relationships. 
            
            
            <para>
            This action verifies a trust relationship between your Microsoft AD in the AWS cloud
            and an external domain.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the VerifyTrust service method.</param>
            
            <returns>The response from the VerifyTrust service method, as returned by DirectoryService.</returns>
            <exception cref="T:Amazon.DirectoryService.Model.ClientException">
            A client exception has occurred.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.EntityDoesNotExistException">
            The specified entity could not be found.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.InvalidParameterException">
            One or more parameters are not valid.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.ServiceException">
            An exception has occurred in AWS Directory Service.
            </exception>
            <exception cref="T:Amazon.DirectoryService.Model.UnsupportedOperationException">
            The operation is not supported.
            </exception>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.BeginVerifyTrust(Amazon.DirectoryService.Model.VerifyTrustRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the VerifyTrust operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the VerifyTrust operation on AmazonDirectoryServiceClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndVerifyTrust
                    operation.</returns>
        </member>
        <member name="M:Amazon.DirectoryService.IAmazonDirectoryService.EndVerifyTrust(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  VerifyTrust operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginVerifyTrust.</param>
            
            <returns>Returns a  VerifyTrustResult from DirectoryService.</returns>
        </member>
    </members>
</doc>
