<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.MachineLearning</name>
    </assembly>
    <members>
        <member name="T:Amazon.MachineLearning.AmazonMachineLearningClient">
             <summary>
             Implementation for accessing MachineLearning
            
             Definition of the public APIs exposed by Amazon Machine Learning
             </summary>
             <summary>
             Implementation for accessing MachineLearning
            
             Definition of the public APIs exposed by Amazon Machine Learning
             </summary>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.CreateRealtimePredictor(System.String)">
            <summary>
            Creates a simple client that just does realtime predictions.
            </summary>
            <remarks>
            Fetches the realtime prediction endpoint for the specified model using the GetMLModel call.
            </remarks>
            <param name="modelId">The model to create the realtime predictor for.</param>
            <returns>A realtime prediction client.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.LimitExceededException">
            The subscriber exceeded the maximum number of operations. This exception can occur
            when listing objects such as <code>DataSource</code>.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.PredictorNotMountedException">
            The exception is thrown when a predict request is made to an unmounted <code>MLModel</code>.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.#ctor">
             <summary>
             Constructs AmazonMachineLearningClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonMachineLearningClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.#ctor(Amazon.MachineLearning.AmazonMachineLearningConfig)">
             <summary>
             Constructs AmazonMachineLearningClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonMachineLearningClient Configuration Object</param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonMachineLearningClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonMachineLearningClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.MachineLearning.AmazonMachineLearningConfig)">
            <summary>
            Constructs AmazonMachineLearningClient with AWS Credentials and an
            AmazonMachineLearningClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonMachineLearningClient Configuration Object</param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonMachineLearningClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonMachineLearningClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.#ctor(System.String,System.String,Amazon.MachineLearning.AmazonMachineLearningConfig)">
            <summary>
            Constructs AmazonMachineLearningClient with AWS Access Key ID, AWS Secret Key and an
            AmazonMachineLearningClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonMachineLearningClient Configuration Object</param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonMachineLearningClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonMachineLearningClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.#ctor(System.String,System.String,System.String,Amazon.MachineLearning.AmazonMachineLearningConfig)">
            <summary>
            Constructs AmazonMachineLearningClient with AWS Access Key ID, AWS Secret Key and an
            AmazonMachineLearningClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonMachineLearningClient Configuration Object</param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.CustomizeRuntimePipeline(Amazon.Runtime.Internal.RuntimePipeline)">
            <summary>
            Customize the pipeline
            </summary>
            <param name="pipeline"></param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.CreateBatchPrediction(Amazon.MachineLearning.Model.CreateBatchPredictionRequest)">
            <summary>
            Generates predictions for a group of observations. The observations to process exist
            in one or more data files referenced by a <code>DataSource</code>. This operation
            creates a new <code>BatchPrediction</code>, and uses an <code>MLModel</code> and the
            data files referenced by the <code>DataSource</code> as information sources. 
            
             
            <para>
            <code>CreateBatchPrediction</code> is an asynchronous operation. In response to <code>CreateBatchPrediction</code>,
            Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>BatchPrediction</code>
            status to <code>PENDING</code>. After the <code>BatchPrediction</code> completes,
            Amazon ML sets the status to <code>COMPLETED</code>. 
            </para>
             
            <para>
            You can poll for status updates by using the <a>GetBatchPrediction</a> operation and
            checking the <code>Status</code> parameter of the result. After the <code>COMPLETED</code>
            status appears, the results are available in the location specified by the <code>OutputUri</code>
            parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBatchPrediction service method.</param>
            
            <returns>The response from the CreateBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            A second request to use or change an object was not allowed. This can result from
            retrying a request using a parameter that was not present in the original request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginCreateBatchPrediction(Amazon.MachineLearning.Model.CreateBatchPredictionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateBatchPrediction operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateBatchPrediction operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateBatchPrediction
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndCreateBatchPrediction(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateBatchPrediction operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateBatchPrediction.</param>
            
            <returns>Returns a  CreateBatchPredictionResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.CreateDataSourceFromRDS(Amazon.MachineLearning.Model.CreateDataSourceFromRDSRequest)">
            <summary>
            Creates a <code>DataSource</code> object from an <a href="http://aws.amazon.com/rds/">
            Amazon Relational Database Service</a> (Amazon RDS). A <code>DataSource</code> references
            data that can be used to perform <a>CreateMLModel</a>, <a>CreateEvaluation</a>, or
            <a>CreateBatchPrediction</a> operations.
            
             
            <para>
            <code>CreateDataSourceFromRDS</code> is an asynchronous operation. In response to
            <code>CreateDataSourceFromRDS</code>, Amazon Machine Learning (Amazon ML) immediately
            returns and sets the <code>DataSource</code> status to <code>PENDING</code>. After
            the <code>DataSource</code> is created and ready for use, Amazon ML sets the <code>Status</code>
            parameter to <code>COMPLETED</code>. <code>DataSource</code> in <code>COMPLETED</code>
            or <code>PENDING</code> status can only be used to perform <a>CreateMLModel</a>, <a>CreateEvaluation</a>,
            or <a>CreateBatchPrediction</a> operations. 
            </para>
             
            <para>
             If Amazon ML cannot accept the input source, it sets the <code>Status</code> parameter
            to <code>FAILED</code> and includes an error message in the <code>Message</code> attribute
            of the <a>GetDataSource</a> operation response. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataSourceFromRDS service method.</param>
            
            <returns>The response from the CreateDataSourceFromRDS service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            A second request to use or change an object was not allowed. This can result from
            retrying a request using a parameter that was not present in the original request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginCreateDataSourceFromRDS(Amazon.MachineLearning.Model.CreateDataSourceFromRDSRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateDataSourceFromRDS operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDataSourceFromRDS operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateDataSourceFromRDS
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndCreateDataSourceFromRDS(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateDataSourceFromRDS operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateDataSourceFromRDS.</param>
            
            <returns>Returns a  CreateDataSourceFromRDSResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.CreateDataSourceFromRedshift(Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftRequest)">
            <summary>
            Creates a <code>DataSource</code> from <a href="http://aws.amazon.com/redshift/">Amazon
            Redshift</a>. A <code>DataSource</code> references data that can be used to perform
            either <a>CreateMLModel</a>, <a>CreateEvaluation</a> or <a>CreateBatchPrediction</a>
            operations.
            
             
            <para>
            <code>CreateDataSourceFromRedshift</code> is an asynchronous operation. In response
            to <code>CreateDataSourceFromRedshift</code>, Amazon Machine Learning (Amazon ML)
            immediately returns and sets the <code>DataSource</code> status to <code>PENDING</code>.
            After the <code>DataSource</code> is created and ready for use, Amazon ML sets the
            <code>Status</code> parameter to <code>COMPLETED</code>. <code>DataSource</code> in
            <code>COMPLETED</code> or <code>PENDING</code> status can only be used to perform
            <a>CreateMLModel</a>, <a>CreateEvaluation</a>, or <a>CreateBatchPrediction</a> operations.
            
            </para>
             
            <para>
             If Amazon ML cannot accept the input source, it sets the <code>Status</code> parameter
            to <code>FAILED</code> and includes an error message in the <code>Message</code> attribute
            of the <a>GetDataSource</a> operation response. 
            </para>
             
            <para>
            The observations should exist in the database hosted on an Amazon Redshift cluster
            and should be specified by a <code>SelectSqlQuery</code>. Amazon ML executes <a href="http://docs.aws.amazon.com/redshift/latest/dg/t_Unloading_tables.html">
            Unload</a> command in Amazon Redshift to transfer the result set of <code>SelectSqlQuery</code>
            to <code>S3StagingLocation.</code> 
            </para>
             
            <para>
            After the <code>DataSource</code> is created, it's ready for use in evaluations and
            batch predictions. If you plan to use the <code>DataSource</code> to train an <code>MLModel</code>,
            the <code>DataSource</code> requires another item -- a recipe. A recipe describes
            the observation variables that participate in training an <code>MLModel</code>. A
            recipe describes how each input variable will be used in training. Will the variable
            be included or excluded from training? Will the variable be manipulated, for example,
            combined with another variable or split apart into word combinations? The recipe provides
            answers to these questions. For more information, see the Amazon Machine Learning
            Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataSourceFromRedshift service method.</param>
            
            <returns>The response from the CreateDataSourceFromRedshift service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            A second request to use or change an object was not allowed. This can result from
            retrying a request using a parameter that was not present in the original request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginCreateDataSourceFromRedshift(Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateDataSourceFromRedshift operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDataSourceFromRedshift operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateDataSourceFromRedshift
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndCreateDataSourceFromRedshift(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateDataSourceFromRedshift operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateDataSourceFromRedshift.</param>
            
            <returns>Returns a  CreateDataSourceFromRedshiftResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.CreateDataSourceFromS3(Amazon.MachineLearning.Model.CreateDataSourceFromS3Request)">
            <summary>
            Creates a <code>DataSource</code> object. A <code>DataSource</code> references data
            that can be used to perform <a>CreateMLModel</a>, <a>CreateEvaluation</a>, or <a>CreateBatchPrediction</a>
            operations.
            
             
            <para>
            <code>CreateDataSourceFromS3</code> is an asynchronous operation. In response to <code>CreateDataSourceFromS3</code>,
            Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>DataSource</code>
            status to <code>PENDING</code>. After the <code>DataSource</code> is created and ready
            for use, Amazon ML sets the <code>Status</code> parameter to <code>COMPLETED</code>.
            <code>DataSource</code> in <code>COMPLETED</code> or <code>PENDING</code> status can
            only be used to perform <a>CreateMLModel</a>, <a>CreateEvaluation</a> or <a>CreateBatchPrediction</a>
            operations. 
            </para>
             
            <para>
             If Amazon ML cannot accept the input source, it sets the <code>Status</code> parameter
            to <code>FAILED</code> and includes an error message in the <code>Message</code> attribute
            of the <a>GetDataSource</a> operation response. 
            </para>
             
            <para>
            The observation data used in a <code>DataSource</code> should be ready to use; that
            is, it should have a consistent structure, and missing data values should be kept
            to a minimum. The observation data must reside in one or more CSV files in an Amazon
            Simple Storage Service (Amazon S3) bucket, along with a schema that describes the
            data items by name and type. The same schema must be used for all of the data files
            referenced by the <code>DataSource</code>. 
            </para>
             
            <para>
            After the <code>DataSource</code> has been created, it's ready to use in evaluations
            and batch predictions. If you plan to use the <code>DataSource</code> to train an
            <code>MLModel</code>, the <code>DataSource</code> requires another item: a recipe.
            A recipe describes the observation variables that participate in training an <code>MLModel</code>.
            A recipe describes how each input variable will be used in training. Will the variable
            be included or excluded from training? Will the variable be manipulated, for example,
            combined with another variable, or split apart into word combinations? The recipe
            provides answers to these questions. For more information, see the <a href="http://docs.aws.amazon.com/machine-learning/latest/dg">Amazon
            Machine Learning Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataSourceFromS3 service method.</param>
            
            <returns>The response from the CreateDataSourceFromS3 service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            A second request to use or change an object was not allowed. This can result from
            retrying a request using a parameter that was not present in the original request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginCreateDataSourceFromS3(Amazon.MachineLearning.Model.CreateDataSourceFromS3Request,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateDataSourceFromS3 operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDataSourceFromS3 operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateDataSourceFromS3
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndCreateDataSourceFromS3(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateDataSourceFromS3 operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateDataSourceFromS3.</param>
            
            <returns>Returns a  CreateDataSourceFromS3Result from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.CreateEvaluation(Amazon.MachineLearning.Model.CreateEvaluationRequest)">
            <summary>
            Creates a new <code>Evaluation</code> of an <code>MLModel</code>. An <code>MLModel</code>
            is evaluated on a set of observations associated to a <code>DataSource</code>. Like
            a <code>DataSource</code> for an <code>MLModel</code>, the <code>DataSource</code>
            for an <code>Evaluation</code> contains values for the Target Variable. The <code>Evaluation</code>
            compares the predicted result for each observation to the actual outcome and provides
            a summary so that you know how effective the <code>MLModel</code> functions on the
            test data. Evaluation generates a relevant performance metric such as BinaryAUC, RegressionRMSE
            or MulticlassAvgFScore based on the corresponding <code>MLModelType</code>: <code>BINARY</code>,
            <code>REGRESSION</code> or <code>MULTICLASS</code>. 
            
             
            <para>
            <code>CreateEvaluation</code> is an asynchronous operation. In response to <code>CreateEvaluation</code>,
            Amazon Machine Learning (Amazon ML) immediately returns and sets the evaluation status
            to <code>PENDING</code>. After the <code>Evaluation</code> is created and ready for
            use, Amazon ML sets the status to <code>COMPLETED</code>. 
            </para>
             
            <para>
            You can use the <a>GetEvaluation</a> operation to check progress of the evaluation
            during the creation operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEvaluation service method.</param>
            
            <returns>The response from the CreateEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            A second request to use or change an object was not allowed. This can result from
            retrying a request using a parameter that was not present in the original request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginCreateEvaluation(Amazon.MachineLearning.Model.CreateEvaluationRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateEvaluation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateEvaluation operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateEvaluation
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndCreateEvaluation(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateEvaluation operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateEvaluation.</param>
            
            <returns>Returns a  CreateEvaluationResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.CreateMLModel(Amazon.MachineLearning.Model.CreateMLModelRequest)">
            <summary>
            Creates a new <code>MLModel</code> using the data files and the recipe as information
            sources. 
            
             
            <para>
            An <code>MLModel</code> is nearly immutable. Users can only update the <code>MLModelName</code>
            and the <code>ScoreThreshold</code> in an <code>MLModel</code> without creating a
            new <code>MLModel</code>. 
            </para>
             
            <para>
            <code>CreateMLModel</code> is an asynchronous operation. In response to <code>CreateMLModel</code>,
            Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>MLModel</code>
            status to <code>PENDING</code>. After the <code>MLModel</code> is created and ready
            for use, Amazon ML sets the status to <code>COMPLETED</code>. 
            </para>
             
            <para>
            You can use the <a>GetMLModel</a> operation to check progress of the <code>MLModel</code>
            during the creation operation.
            </para>
             
            <para>
             <a>CreateMLModel</a> requires a <code>DataSource</code> with computed statistics,
            which can be created by setting <code>ComputeStatistics</code> to <code>true</code>
            in <a>CreateDataSourceFromRDS</a>, <a>CreateDataSourceFromS3</a>, or <a>CreateDataSourceFromRedshift</a>
            operations. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMLModel service method.</param>
            
            <returns>The response from the CreateMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            A second request to use or change an object was not allowed. This can result from
            retrying a request using a parameter that was not present in the original request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginCreateMLModel(Amazon.MachineLearning.Model.CreateMLModelRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateMLModel operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateMLModel operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateMLModel
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndCreateMLModel(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateMLModel operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateMLModel.</param>
            
            <returns>Returns a  CreateMLModelResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.CreateRealtimeEndpoint(System.String)">
            <summary>
            Creates a real-time endpoint for the <code>MLModel</code>. The endpoint contains the
            URI of the <code>MLModel</code>; that is, the location to send real-time prediction
            requests for the specified <code>MLModel</code>.
            </summary>
            <param name="mlModelId">The ID assigned to the <code>MLModel</code> during creation.</param>
            
            <returns>The response from the CreateRealtimeEndpoint service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.CreateRealtimeEndpoint(Amazon.MachineLearning.Model.CreateRealtimeEndpointRequest)">
            <summary>
            Creates a real-time endpoint for the <code>MLModel</code>. The endpoint contains the
            URI of the <code>MLModel</code>; that is, the location to send real-time prediction
            requests for the specified <code>MLModel</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRealtimeEndpoint service method.</param>
            
            <returns>The response from the CreateRealtimeEndpoint service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginCreateRealtimeEndpoint(Amazon.MachineLearning.Model.CreateRealtimeEndpointRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateRealtimeEndpoint operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRealtimeEndpoint operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateRealtimeEndpoint
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndCreateRealtimeEndpoint(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateRealtimeEndpoint operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateRealtimeEndpoint.</param>
            
            <returns>Returns a  CreateRealtimeEndpointResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DeleteBatchPrediction(System.String)">
            <summary>
            Assigns the DELETED status to a <code>BatchPrediction</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteBatchPrediction</code> operation, you can use the <a>GetBatchPrediction</a>
            operation to verify that the status of the <code>BatchPrediction</code> changed to
            DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The result of the <code>DeleteBatchPrediction</code> operation is
            irreversible.
            </para>
            </summary>
            <param name="batchPredictionId">A user-supplied ID that uniquely identifies the <code>BatchPrediction</code>.</param>
            
            <returns>The response from the DeleteBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DeleteBatchPrediction(Amazon.MachineLearning.Model.DeleteBatchPredictionRequest)">
            <summary>
            Assigns the DELETED status to a <code>BatchPrediction</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteBatchPrediction</code> operation, you can use the <a>GetBatchPrediction</a>
            operation to verify that the status of the <code>BatchPrediction</code> changed to
            DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The result of the <code>DeleteBatchPrediction</code> operation is
            irreversible.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBatchPrediction service method.</param>
            
            <returns>The response from the DeleteBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginDeleteBatchPrediction(Amazon.MachineLearning.Model.DeleteBatchPredictionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteBatchPrediction operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBatchPrediction operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteBatchPrediction
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndDeleteBatchPrediction(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteBatchPrediction operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteBatchPrediction.</param>
            
            <returns>Returns a  DeleteBatchPredictionResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DeleteDataSource(System.String)">
            <summary>
            Assigns the DELETED status to a <code>DataSource</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteDataSource</code> operation, you can use the <a>GetDataSource</a>
            operation to verify that the status of the <code>DataSource</code> changed to DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The results of the <code>DeleteDataSource</code> operation are irreversible.
            </para>
            </summary>
            <param name="dataSourceId">A user-supplied ID that uniquely identifies the <code>DataSource</code>.</param>
            
            <returns>The response from the DeleteDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DeleteDataSource(Amazon.MachineLearning.Model.DeleteDataSourceRequest)">
            <summary>
            Assigns the DELETED status to a <code>DataSource</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteDataSource</code> operation, you can use the <a>GetDataSource</a>
            operation to verify that the status of the <code>DataSource</code> changed to DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The results of the <code>DeleteDataSource</code> operation are irreversible.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataSource service method.</param>
            
            <returns>The response from the DeleteDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginDeleteDataSource(Amazon.MachineLearning.Model.DeleteDataSourceRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteDataSource operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDataSource operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteDataSource
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndDeleteDataSource(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteDataSource operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteDataSource.</param>
            
            <returns>Returns a  DeleteDataSourceResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DeleteEvaluation(System.String)">
            <summary>
            Assigns the <code>DELETED</code> status to an <code>Evaluation</code>, rendering it
            unusable.
            
             
            <para>
            After invoking the <code>DeleteEvaluation</code> operation, you can use the <a>GetEvaluation</a>
            operation to verify that the status of the <code>Evaluation</code> changed to <code>DELETED</code>.
            </para>
             
            <para>
            <b>Caution:</b> The results of the <code>DeleteEvaluation</code> operation are irreversible.
            </para>
            </summary>
            <param name="evaluationId">A user-supplied ID that uniquely identifies the <code>Evaluation</code> to delete.</param>
            
            <returns>The response from the DeleteEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DeleteEvaluation(Amazon.MachineLearning.Model.DeleteEvaluationRequest)">
            <summary>
            Assigns the <code>DELETED</code> status to an <code>Evaluation</code>, rendering it
            unusable.
            
             
            <para>
            After invoking the <code>DeleteEvaluation</code> operation, you can use the <a>GetEvaluation</a>
            operation to verify that the status of the <code>Evaluation</code> changed to <code>DELETED</code>.
            </para>
             
            <para>
            <b>Caution:</b> The results of the <code>DeleteEvaluation</code> operation are irreversible.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEvaluation service method.</param>
            
            <returns>The response from the DeleteEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginDeleteEvaluation(Amazon.MachineLearning.Model.DeleteEvaluationRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteEvaluation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteEvaluation operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteEvaluation
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndDeleteEvaluation(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteEvaluation operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteEvaluation.</param>
            
            <returns>Returns a  DeleteEvaluationResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DeleteMLModel(System.String)">
            <summary>
            Assigns the DELETED status to an <code>MLModel</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteMLModel</code> operation, you can use the <a>GetMLModel</a>
            operation to verify that the status of the <code>MLModel</code> changed to DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The result of the <code>DeleteMLModel</code> operation is irreversible.
            </para>
            </summary>
            <param name="mlModelId">A user-supplied ID that uniquely identifies the <code>MLModel</code>.</param>
            
            <returns>The response from the DeleteMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DeleteMLModel(Amazon.MachineLearning.Model.DeleteMLModelRequest)">
            <summary>
            Assigns the DELETED status to an <code>MLModel</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteMLModel</code> operation, you can use the <a>GetMLModel</a>
            operation to verify that the status of the <code>MLModel</code> changed to DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The result of the <code>DeleteMLModel</code> operation is irreversible.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMLModel service method.</param>
            
            <returns>The response from the DeleteMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginDeleteMLModel(Amazon.MachineLearning.Model.DeleteMLModelRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteMLModel operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMLModel operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteMLModel
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndDeleteMLModel(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteMLModel operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteMLModel.</param>
            
            <returns>Returns a  DeleteMLModelResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DeleteRealtimeEndpoint(System.String)">
            <summary>
            Deletes a real time endpoint of an <code>MLModel</code>.
            </summary>
            <param name="mlModelId">The ID assigned to the <code>MLModel</code> during creation.</param>
            
            <returns>The response from the DeleteRealtimeEndpoint service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DeleteRealtimeEndpoint(Amazon.MachineLearning.Model.DeleteRealtimeEndpointRequest)">
            <summary>
            Deletes a real time endpoint of an <code>MLModel</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRealtimeEndpoint service method.</param>
            
            <returns>The response from the DeleteRealtimeEndpoint service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginDeleteRealtimeEndpoint(Amazon.MachineLearning.Model.DeleteRealtimeEndpointRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteRealtimeEndpoint operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRealtimeEndpoint operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteRealtimeEndpoint
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndDeleteRealtimeEndpoint(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteRealtimeEndpoint operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteRealtimeEndpoint.</param>
            
            <returns>Returns a  DeleteRealtimeEndpointResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DescribeBatchPredictions(Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest)">
            <summary>
            Returns a list of <code>BatchPrediction</code> operations that match the search criteria
            in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeBatchPredictions service method.</param>
            
            <returns>The response from the DescribeBatchPredictions service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginDescribeBatchPredictions(Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeBatchPredictions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeBatchPredictions operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeBatchPredictions
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndDescribeBatchPredictions(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeBatchPredictions operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeBatchPredictions.</param>
            
            <returns>Returns a  DescribeBatchPredictionsResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DescribeDataSources(Amazon.MachineLearning.Model.DescribeDataSourcesRequest)">
            <summary>
            Returns a list of <code>DataSource</code> that match the search criteria in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataSources service method.</param>
            
            <returns>The response from the DescribeDataSources service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginDescribeDataSources(Amazon.MachineLearning.Model.DescribeDataSourcesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeDataSources operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDataSources operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeDataSources
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndDescribeDataSources(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeDataSources operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeDataSources.</param>
            
            <returns>Returns a  DescribeDataSourcesResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DescribeEvaluations(Amazon.MachineLearning.Model.DescribeEvaluationsRequest)">
            <summary>
            Returns a list of <code>DescribeEvaluations</code> that match the search criteria
            in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvaluations service method.</param>
            
            <returns>The response from the DescribeEvaluations service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginDescribeEvaluations(Amazon.MachineLearning.Model.DescribeEvaluationsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeEvaluations operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeEvaluations operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeEvaluations
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndDescribeEvaluations(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeEvaluations operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeEvaluations.</param>
            
            <returns>Returns a  DescribeEvaluationsResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.DescribeMLModels(Amazon.MachineLearning.Model.DescribeMLModelsRequest)">
            <summary>
            Returns a list of <code>MLModel</code> that match the search criteria in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMLModels service method.</param>
            
            <returns>The response from the DescribeMLModels service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginDescribeMLModels(Amazon.MachineLearning.Model.DescribeMLModelsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeMLModels operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeMLModels operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeMLModels
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndDescribeMLModels(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeMLModels operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeMLModels.</param>
            
            <returns>Returns a  DescribeMLModelsResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.GetBatchPrediction(System.String)">
            <summary>
            Returns a <code>BatchPrediction</code> that includes detailed metadata, status, and
            data file information for a <code>Batch Prediction</code> request.
            </summary>
            <param name="batchPredictionId">An ID assigned to the <code>BatchPrediction</code> at creation.</param>
            
            <returns>The response from the GetBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.GetBatchPrediction(Amazon.MachineLearning.Model.GetBatchPredictionRequest)">
            <summary>
            Returns a <code>BatchPrediction</code> that includes detailed metadata, status, and
            data file information for a <code>Batch Prediction</code> request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBatchPrediction service method.</param>
            
            <returns>The response from the GetBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginGetBatchPrediction(Amazon.MachineLearning.Model.GetBatchPredictionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetBatchPrediction operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBatchPrediction operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetBatchPrediction
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndGetBatchPrediction(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetBatchPrediction operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetBatchPrediction.</param>
            
            <returns>Returns a  GetBatchPredictionResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.GetDataSource(System.String)">
            <summary>
            Returns a <code>DataSource</code> that includes metadata and data file information,
            as well as the current status of the <code>DataSource</code>.
            
             
            <para>
            <code>GetDataSource</code> provides results in normal or verbose format. The verbose
            format adds the schema description and the list of files pointed to by the DataSource
            to the normal format.
            </para>
            </summary>
            <param name="dataSourceId">The ID assigned to the <code>DataSource</code> at creation.</param>
            
            <returns>The response from the GetDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.GetDataSource(System.String,System.Boolean)">
            <summary>
            Returns a <code>DataSource</code> that includes metadata and data file information,
            as well as the current status of the <code>DataSource</code>.
            
             
            <para>
            <code>GetDataSource</code> provides results in normal or verbose format. The verbose
            format adds the schema description and the list of files pointed to by the DataSource
            to the normal format.
            </para>
            </summary>
            <param name="dataSourceId">The ID assigned to the <code>DataSource</code> at creation.</param>
            <param name="verbose">Specifies whether the <code>GetDataSource</code> operation should return <code>DataSourceSchema</code>. If true, <code>DataSourceSchema</code> is returned. If false, <code>DataSourceSchema</code> is not returned.</param>
            
            <returns>The response from the GetDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.GetDataSource(Amazon.MachineLearning.Model.GetDataSourceRequest)">
            <summary>
            Returns a <code>DataSource</code> that includes metadata and data file information,
            as well as the current status of the <code>DataSource</code>.
            
             
            <para>
            <code>GetDataSource</code> provides results in normal or verbose format. The verbose
            format adds the schema description and the list of files pointed to by the DataSource
            to the normal format.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataSource service method.</param>
            
            <returns>The response from the GetDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginGetDataSource(Amazon.MachineLearning.Model.GetDataSourceRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetDataSource operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDataSource operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetDataSource
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndGetDataSource(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetDataSource operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetDataSource.</param>
            
            <returns>Returns a  GetDataSourceResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.GetEvaluation(System.String)">
            <summary>
            Returns an <code>Evaluation</code> that includes metadata as well as the current status
            of the <code>Evaluation</code>.
            </summary>
            <param name="evaluationId">The ID of the <code>Evaluation</code> to retrieve. The evaluation of each <code>MLModel</code> is recorded and cataloged. The ID provides the means to access the information. </param>
            
            <returns>The response from the GetEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.GetEvaluation(Amazon.MachineLearning.Model.GetEvaluationRequest)">
            <summary>
            Returns an <code>Evaluation</code> that includes metadata as well as the current status
            of the <code>Evaluation</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetEvaluation service method.</param>
            
            <returns>The response from the GetEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginGetEvaluation(Amazon.MachineLearning.Model.GetEvaluationRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetEvaluation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetEvaluation operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetEvaluation
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndGetEvaluation(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetEvaluation operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetEvaluation.</param>
            
            <returns>Returns a  GetEvaluationResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.GetMLModel(System.String)">
            <summary>
            Returns an <code>MLModel</code> that includes detailed metadata, and data source information
            as well as the current status of the <code>MLModel</code>.
            
             
            <para>
            <code>GetMLModel</code> provides results in normal or verbose format. 
            </para>
            </summary>
            <param name="mlModelId">The ID assigned to the <code>MLModel</code> at creation.</param>
            
            <returns>The response from the GetMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.GetMLModel(System.String,System.Boolean)">
            <summary>
            Returns an <code>MLModel</code> that includes detailed metadata, and data source information
            as well as the current status of the <code>MLModel</code>.
            
             
            <para>
            <code>GetMLModel</code> provides results in normal or verbose format. 
            </para>
            </summary>
            <param name="mlModelId">The ID assigned to the <code>MLModel</code> at creation.</param>
            <param name="verbose">Specifies whether the <code>GetMLModel</code> operation should return <code>Recipe</code>. If true, <code>Recipe</code> is returned. If false, <code>Recipe</code> is not returned.</param>
            
            <returns>The response from the GetMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.GetMLModel(Amazon.MachineLearning.Model.GetMLModelRequest)">
            <summary>
            Returns an <code>MLModel</code> that includes detailed metadata, and data source information
            as well as the current status of the <code>MLModel</code>.
            
             
            <para>
            <code>GetMLModel</code> provides results in normal or verbose format. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMLModel service method.</param>
            
            <returns>The response from the GetMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginGetMLModel(Amazon.MachineLearning.Model.GetMLModelRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetMLModel operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetMLModel operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetMLModel
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndGetMLModel(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetMLModel operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetMLModel.</param>
            
            <returns>Returns a  GetMLModelResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.Predict(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Generates a prediction for the observation using the specified <code>ML Model</code>.
            
             <note><title>Note</title> 
            <para>
            Not all response parameters will be populated. Whether a response parameter is populated
            depends on the type of model requested.
            </para>
            </note>
            </summary>
            <param name="mlModelId">A unique identifier of the <code>MLModel</code>.</param>
            <param name="predictEndpoint">A property of PredictRequest used to execute the Predict service method.</param>
            <param name="record">A property of PredictRequest used to execute the Predict service method.</param>
            
            <returns>The response from the Predict service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.LimitExceededException">
            The subscriber exceeded the maximum number of operations. This exception can occur
            when listing objects such as <code>DataSource</code>.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.PredictorNotMountedException">
            The exception is thrown when a predict request is made to an unmounted <code>MLModel</code>.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.Predict(Amazon.MachineLearning.Model.PredictRequest)">
            <summary>
            Generates a prediction for the observation using the specified <code>ML Model</code>.
            
             <note><title>Note</title> 
            <para>
            Not all response parameters will be populated. Whether a response parameter is populated
            depends on the type of model requested.
            </para>
            </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the Predict service method.</param>
            
            <returns>The response from the Predict service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.LimitExceededException">
            The subscriber exceeded the maximum number of operations. This exception can occur
            when listing objects such as <code>DataSource</code>.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.PredictorNotMountedException">
            The exception is thrown when a predict request is made to an unmounted <code>MLModel</code>.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginPredict(Amazon.MachineLearning.Model.PredictRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the Predict operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Predict operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndPredict
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndPredict(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  Predict operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginPredict.</param>
            
            <returns>Returns a  PredictResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.UpdateBatchPrediction(System.String,System.String)">
            <summary>
            Updates the <code>BatchPredictionName</code> of a <code>BatchPrediction</code>.
            
             
            <para>
            You can use the <a>GetBatchPrediction</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
            <param name="batchPredictionId">The ID assigned to the <code>BatchPrediction</code> during creation.</param>
            <param name="batchPredictionName">A new user-supplied name or description of the <code>BatchPrediction</code>.</param>
            
            <returns>The response from the UpdateBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.UpdateBatchPrediction(Amazon.MachineLearning.Model.UpdateBatchPredictionRequest)">
            <summary>
            Updates the <code>BatchPredictionName</code> of a <code>BatchPrediction</code>.
            
             
            <para>
            You can use the <a>GetBatchPrediction</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateBatchPrediction service method.</param>
            
            <returns>The response from the UpdateBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginUpdateBatchPrediction(Amazon.MachineLearning.Model.UpdateBatchPredictionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateBatchPrediction operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateBatchPrediction operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateBatchPrediction
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndUpdateBatchPrediction(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateBatchPrediction operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateBatchPrediction.</param>
            
            <returns>Returns a  UpdateBatchPredictionResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.UpdateDataSource(System.String,System.String)">
            <summary>
            Updates the <code>DataSourceName</code> of a <code>DataSource</code>.
            
             
            <para>
            You can use the <a>GetDataSource</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
            <param name="dataSourceId">The ID assigned to the <code>DataSource</code> during creation.</param>
            <param name="dataSourceName">A new user-supplied name or description of the <code>DataSource</code> that will replace the current description. </param>
            
            <returns>The response from the UpdateDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.UpdateDataSource(Amazon.MachineLearning.Model.UpdateDataSourceRequest)">
            <summary>
            Updates the <code>DataSourceName</code> of a <code>DataSource</code>.
            
             
            <para>
            You can use the <a>GetDataSource</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDataSource service method.</param>
            
            <returns>The response from the UpdateDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginUpdateDataSource(Amazon.MachineLearning.Model.UpdateDataSourceRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateDataSource operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateDataSource operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateDataSource
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndUpdateDataSource(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateDataSource operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateDataSource.</param>
            
            <returns>Returns a  UpdateDataSourceResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.UpdateEvaluation(System.String,System.String)">
            <summary>
            Updates the <code>EvaluationName</code> of an <code>Evaluation</code>.
            
             
            <para>
            You can use the <a>GetEvaluation</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
            <param name="evaluationId">The ID assigned to the <code>Evaluation</code> during creation.</param>
            <param name="evaluationName">A new user-supplied name or description of the <code>Evaluation</code> that will replace the current content. </param>
            
            <returns>The response from the UpdateEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.UpdateEvaluation(Amazon.MachineLearning.Model.UpdateEvaluationRequest)">
            <summary>
            Updates the <code>EvaluationName</code> of an <code>Evaluation</code>.
            
             
            <para>
            You can use the <a>GetEvaluation</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateEvaluation service method.</param>
            
            <returns>The response from the UpdateEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginUpdateEvaluation(Amazon.MachineLearning.Model.UpdateEvaluationRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateEvaluation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateEvaluation operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateEvaluation
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndUpdateEvaluation(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateEvaluation operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateEvaluation.</param>
            
            <returns>Returns a  UpdateEvaluationResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.UpdateMLModel(System.String,System.String,System.Single)">
            <summary>
            Updates the <code>MLModelName</code> and the <code>ScoreThreshold</code> of an <code>MLModel</code>.
            
             
            <para>
            You can use the <a>GetMLModel</a> operation to view the contents of the updated data
            element.
            </para>
            </summary>
            <param name="mlModelId">The ID assigned to the <code>MLModel</code> during creation.</param>
            <param name="mlModelName">A user-supplied name or description of the <code>MLModel</code>.</param>
            <param name="scoreThreshold">The <code>ScoreThreshold</code> used in binary classification <code>MLModel</code> that marks the boundary between a positive prediction and a negative prediction. Output values greater than or equal to the <code>ScoreThreshold</code> receive a positive result from the <code>MLModel</code>, such as <code>true</code>. Output values less than the <code>ScoreThreshold</code> receive a negative response from the <code>MLModel</code>, such as <code>false</code>.</param>
            
            <returns>The response from the UpdateMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.UpdateMLModel(Amazon.MachineLearning.Model.UpdateMLModelRequest)">
            <summary>
            Updates the <code>MLModelName</code> and the <code>ScoreThreshold</code> of an <code>MLModel</code>.
            
             
            <para>
            You can use the <a>GetMLModel</a> operation to view the contents of the updated data
            element.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateMLModel service method.</param>
            
            <returns>The response from the UpdateMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.BeginUpdateMLModel(Amazon.MachineLearning.Model.UpdateMLModelRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateMLModel operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateMLModel operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateMLModel
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningClient.EndUpdateMLModel(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateMLModel operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateMLModel.</param>
            
            <returns>Returns a  UpdateMLModelResult from MachineLearning.</returns>
        </member>
        <member name="T:Amazon.MachineLearning.Internal.IdempotencyHandler">
            <summary>
            Custom pipeline handler
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Internal.IdempotencyHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.MachineLearning.Internal.IdempotencyHandler.InvokeAsync(Amazon.Runtime.IAsyncExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
            <returns>IAsyncResult which represent an async operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.Internal.IdempotencyHandler.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Custom pipeline handler
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="T:Amazon.MachineLearning.Internal.ProcessRequestHandler">
            <summary>
            Custom pipeline handler
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Internal.ProcessRequestHandler.InvokeSync(Amazon.Runtime.IExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
        </member>
        <member name="M:Amazon.MachineLearning.Internal.ProcessRequestHandler.InvokeAsync(Amazon.Runtime.IAsyncExecutionContext)">
            <summary>
            Calls pre invoke logic before calling the next handler 
            in the pipeline.
            </summary>
            <param name="executionContext">The execution context which contains both the
            requests and response context.</param>
            <returns>IAsyncResult which represent an async operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.Internal.ProcessRequestHandler.PreInvoke(Amazon.Runtime.IExecutionContext)">
            <summary>
            Custom pipeline handler
            </summary>
            <param name="executionContext"></param>
        </member>
        <member name="T:Amazon.MachineLearning.Util.RealtimePredictor">
            <summary>
            A simplified client that just does realtime predictions.
            </summary>
            <summary>
            A simplified client that just does realtime predictions.
            </summary>
            <summary>
            A simplified client that just does realtime predictions.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Util.RealtimePredictor.#ctor(Amazon.MachineLearning.IAmazonMachineLearning,System.String)">
            <summary>
            Constructs a RealtimePredictor which will use the passed in client to make requests.
            </summary>
            <remarks>
            The endpoint URL will be determined my making a service call to retrieve it.
            </remarks>
            <param name="client">The MachineLearning client that will be used to make requests.</param>
            <param name="modelId">The MachineLearning model to predict against.</param>
        </member>
        <member name="M:Amazon.MachineLearning.Util.RealtimePredictor.#ctor(Amazon.MachineLearning.IAmazonMachineLearning,System.String,System.String)">
            <summary>
            Constructs a RealtimePredictor which will use the passed in client to make requests.
            </summary>
            <param name="client">The MachineLearning client that will be used to make requests.</param>
            <param name="modelId">The MachineLearning model to predict against.</param>
            <param name="endpoint">The endpoint to send requests to.</param>
        </member>
        <member name="P:Amazon.MachineLearning.Util.RealtimePredictor.ModelId">
            <summary>
            The Id of the MachineLearning model.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Util.RealtimePredictor.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern
            </summary>
            <param name="disposing">Whether this object is being disposed via a call to Dispose
            or garbage collected.</param>
        </member>
        <member name="M:Amazon.MachineLearning.Util.RealtimePredictor.Dispose">
            <summary>
            Disposes of all managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Util.RealtimePredictor.#ctor(System.String)">
            <summary>
            Constructs a RealtimePredictor which construct a client using configured defaults.
            </summary>
            <remarks>
            The endpoint URL will be determined my making a service call to retrieve it.
            </remarks>        
            <param name="modelId">The MachineLearning model to predict against.</param>
        </member>
        <member name="P:Amazon.MachineLearning.Util.RealtimePredictor.Endpoint">
            <summary>
            The realtime prediction endpoint for the given MLModel.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Util.RealtimePredictor.Predict(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Generates a prediction for an observation.
            </summary>
            <param name="record">Data to generate a prediction for.</param>
            <returns>A prediction for the observation, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.LimitExceededException">
            The subscriber exceeded the maximum number of operations. This exception can occur
            when listing objects such as <code>DataSource</code>.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.PredictorNotMountedException">
            The exception is thrown when a predict request is made to an unmounted <code>MLModel</code>.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.Util.RealtimePredictor.BeginPredict(System.Collections.Generic.Dictionary{System.String,System.String},System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the Predict operation.
            </summary>
            <param name="record">Data to generate a prediction for.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndPredict
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.Util.RealtimePredictor.EndPredict(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  Predict operation.
            </summary>
            <param name="asyncResult">The IAsyncResult returned by the call to BeginPredict.</param>
            <returns>A prediction for the observation, as returned by MachineLearning.</returns>
        </member>
        <member name="T:Amazon.MachineLearning.AmazonMachineLearningConfig">
            <summary>
            Configuration for accessing Amazon MachineLearning service
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.AmazonMachineLearningConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.AmazonMachineLearningConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.AmazonMachineLearningConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.AmazonMachineLearningException">
            <summary>
             Common exception for the MachineLearning service.
             </summary>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonMachineLearningException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonMachineLearningException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonMachineLearningException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonMachineLearningException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MachineLearning.AmazonMachineLearningException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonMachineLearningException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.MachineLearning.Algorithm">
            <summary>
            Constants used for properties of type Algorithm.
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.Algorithm.Sgd">
            <summary>
            Constant Sgd for Algorithm
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Algorithm.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Algorithm.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MachineLearning.Algorithm.op_Implicit(System.String)~Amazon.MachineLearning.Algorithm">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.BatchPredictionFilterVariable">
            <summary>
            Constants used for properties of type BatchPredictionFilterVariable.
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.BatchPredictionFilterVariable.CreatedAt">
            <summary>
            Constant CreatedAt for BatchPredictionFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.BatchPredictionFilterVariable.DataSourceId">
            <summary>
            Constant DataSourceId for BatchPredictionFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.BatchPredictionFilterVariable.DataURI">
            <summary>
            Constant DataURI for BatchPredictionFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.BatchPredictionFilterVariable.IAMUser">
            <summary>
            Constant IAMUser for BatchPredictionFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.BatchPredictionFilterVariable.LastUpdatedAt">
            <summary>
            Constant LastUpdatedAt for BatchPredictionFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.BatchPredictionFilterVariable.MLModelId">
            <summary>
            Constant MLModelId for BatchPredictionFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.BatchPredictionFilterVariable.Name">
            <summary>
            Constant Name for BatchPredictionFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.BatchPredictionFilterVariable.Status">
            <summary>
            Constant Status for BatchPredictionFilterVariable
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.BatchPredictionFilterVariable.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.BatchPredictionFilterVariable.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MachineLearning.BatchPredictionFilterVariable.op_Implicit(System.String)~Amazon.MachineLearning.BatchPredictionFilterVariable">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.DataSourceFilterVariable">
            <summary>
            Constants used for properties of type DataSourceFilterVariable.
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.DataSourceFilterVariable.CreatedAt">
            <summary>
            Constant CreatedAt for DataSourceFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.DataSourceFilterVariable.DataLocationS3">
            <summary>
            Constant DataLocationS3 for DataSourceFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.DataSourceFilterVariable.IAMUser">
            <summary>
            Constant IAMUser for DataSourceFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.DataSourceFilterVariable.LastUpdatedAt">
            <summary>
            Constant LastUpdatedAt for DataSourceFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.DataSourceFilterVariable.Name">
            <summary>
            Constant Name for DataSourceFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.DataSourceFilterVariable.Status">
            <summary>
            Constant Status for DataSourceFilterVariable
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.DataSourceFilterVariable.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.DataSourceFilterVariable.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MachineLearning.DataSourceFilterVariable.op_Implicit(System.String)~Amazon.MachineLearning.DataSourceFilterVariable">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.DetailsAttributes">
            <summary>
            Constants used for properties of type DetailsAttributes.
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.DetailsAttributes.Algorithm">
            <summary>
            Constant Algorithm for DetailsAttributes
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.DetailsAttributes.PredictiveModelType">
            <summary>
            Constant PredictiveModelType for DetailsAttributes
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.DetailsAttributes.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.DetailsAttributes.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MachineLearning.DetailsAttributes.op_Implicit(System.String)~Amazon.MachineLearning.DetailsAttributes">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.EntityStatus">
            <summary>
            Constants used for properties of type EntityStatus.
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EntityStatus.COMPLETED">
            <summary>
            Constant COMPLETED for EntityStatus
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EntityStatus.DELETED">
            <summary>
            Constant DELETED for EntityStatus
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EntityStatus.FAILED">
            <summary>
            Constant FAILED for EntityStatus
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EntityStatus.INPROGRESS">
            <summary>
            Constant INPROGRESS for EntityStatus
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EntityStatus.PENDING">
            <summary>
            Constant PENDING for EntityStatus
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.EntityStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.EntityStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MachineLearning.EntityStatus.op_Implicit(System.String)~Amazon.MachineLearning.EntityStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.EvaluationFilterVariable">
            <summary>
            Constants used for properties of type EvaluationFilterVariable.
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EvaluationFilterVariable.CreatedAt">
            <summary>
            Constant CreatedAt for EvaluationFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EvaluationFilterVariable.DataSourceId">
            <summary>
            Constant DataSourceId for EvaluationFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EvaluationFilterVariable.DataURI">
            <summary>
            Constant DataURI for EvaluationFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EvaluationFilterVariable.IAMUser">
            <summary>
            Constant IAMUser for EvaluationFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EvaluationFilterVariable.LastUpdatedAt">
            <summary>
            Constant LastUpdatedAt for EvaluationFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EvaluationFilterVariable.MLModelId">
            <summary>
            Constant MLModelId for EvaluationFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EvaluationFilterVariable.Name">
            <summary>
            Constant Name for EvaluationFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.EvaluationFilterVariable.Status">
            <summary>
            Constant Status for EvaluationFilterVariable
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.EvaluationFilterVariable.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.EvaluationFilterVariable.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MachineLearning.EvaluationFilterVariable.op_Implicit(System.String)~Amazon.MachineLearning.EvaluationFilterVariable">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.MLModelFilterVariable">
            <summary>
            Constants used for properties of type MLModelFilterVariable.
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelFilterVariable.Algorithm">
            <summary>
            Constant Algorithm for MLModelFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelFilterVariable.CreatedAt">
            <summary>
            Constant CreatedAt for MLModelFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelFilterVariable.IAMUser">
            <summary>
            Constant IAMUser for MLModelFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelFilterVariable.LastUpdatedAt">
            <summary>
            Constant LastUpdatedAt for MLModelFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelFilterVariable.MLModelType">
            <summary>
            Constant MLModelType for MLModelFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelFilterVariable.Name">
            <summary>
            Constant Name for MLModelFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelFilterVariable.RealtimeEndpointStatus">
            <summary>
            Constant RealtimeEndpointStatus for MLModelFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelFilterVariable.Status">
            <summary>
            Constant Status for MLModelFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelFilterVariable.TrainingDataSourceId">
            <summary>
            Constant TrainingDataSourceId for MLModelFilterVariable
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelFilterVariable.TrainingDataURI">
            <summary>
            Constant TrainingDataURI for MLModelFilterVariable
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.MLModelFilterVariable.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.MLModelFilterVariable.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MachineLearning.MLModelFilterVariable.op_Implicit(System.String)~Amazon.MachineLearning.MLModelFilterVariable">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.MLModelType">
            <summary>
            Constants used for properties of type MLModelType.
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelType.BINARY">
            <summary>
            Constant BINARY for MLModelType
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelType.MULTICLASS">
            <summary>
            Constant MULTICLASS for MLModelType
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.MLModelType.REGRESSION">
            <summary>
            Constant REGRESSION for MLModelType
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.MLModelType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.MLModelType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MachineLearning.MLModelType.op_Implicit(System.String)~Amazon.MachineLearning.MLModelType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.RealtimeEndpointStatus">
            <summary>
            Constants used for properties of type RealtimeEndpointStatus.
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.RealtimeEndpointStatus.FAILED">
            <summary>
            Constant FAILED for RealtimeEndpointStatus
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.RealtimeEndpointStatus.NONE">
            <summary>
            Constant NONE for RealtimeEndpointStatus
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.RealtimeEndpointStatus.READY">
            <summary>
            Constant READY for RealtimeEndpointStatus
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.RealtimeEndpointStatus.UPDATING">
            <summary>
            Constant UPDATING for RealtimeEndpointStatus
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.RealtimeEndpointStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.RealtimeEndpointStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MachineLearning.RealtimeEndpointStatus.op_Implicit(System.String)~Amazon.MachineLearning.RealtimeEndpointStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.SortOrder">
            <summary>
            Constants used for properties of type SortOrder.
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.SortOrder.Asc">
            <summary>
            Constant Asc for SortOrder
            </summary>
        </member>
        <member name="F:Amazon.MachineLearning.SortOrder.Dsc">
            <summary>
            Constant Dsc for SortOrder
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.SortOrder.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.MachineLearning.SortOrder.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.MachineLearning.SortOrder.op_Implicit(System.String)~Amazon.MachineLearning.SortOrder">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.AmazonMachineLearningRequest">
            <summary>
            Base class for MachineLearning operation requests.
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.BatchPrediction">
            <summary>
            Represents the output of <a>GetBatchPrediction</a> operation.
            
             
            <para>
             The content consists of the detailed metadata, the status, and the data file information
            of a <i>Batch Prediction</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.BatchPrediction.BatchPredictionDataSourceId">
            <summary>
            Gets and sets the property BatchPredictionDataSourceId. 
            <para>
            The ID of the <code>DataSource</code> that points to the group of observations to
            predict.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.BatchPrediction.BatchPredictionId">
            <summary>
            Gets and sets the property BatchPredictionId. 
            <para>
            The ID assigned to the <code>BatchPrediction</code> at creation. This value should
            be identical to the value of the <code>BatchPredictionID</code> in the request. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.BatchPrediction.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time that the <code>BatchPrediction</code> was created. The time is expressed
            in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.BatchPrediction.CreatedByIamUser">
            <summary>
            Gets and sets the property CreatedByIamUser. 
            <para>
            The AWS user account that invoked the <code>BatchPrediction</code>. The account type
            can be either an AWS root account or an AWS Identity and Access Management (IAM) user
            account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.BatchPrediction.InputDataLocationS3">
            <summary>
            Gets and sets the property InputDataLocationS3. 
            <para>
            The location of the data file or directory in Amazon Simple Storage Service (Amazon
            S3).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.BatchPrediction.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            The time of the most recent edit to the <code>BatchPrediction</code>. The time is
            expressed in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.BatchPrediction.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A description of the most recent details about processing the batch prediction request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.BatchPrediction.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The ID of the <code>MLModel</code> that generated predictions for the <code>BatchPrediction</code>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.BatchPrediction.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A user-supplied name or description of the <code>BatchPrediction</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.BatchPrediction.OutputUri">
            <summary>
            Gets and sets the property OutputUri. 
            <para>
            The location of an Amazon S3 bucket or directory to receive the operation results.
            The following substrings are not allowed in the s3 key portion of the "outputURI"
            field: ':', '//', '/./', '/../'.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.BatchPrediction.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the <code>BatchPrediction</code>. This element can have one of the following
            values:
            </para>
             <ul> <li> <code>PENDING</code> - Amazon Machine Learning (Amazon ML) submitted a
            request to generate predictions for a batch of observations.</li> <li> <code>INPROGRESS</code>
            - The process is underway.</li> <li> <code>FAILED</code> - The request to peform a
            batch prediction did not run to completion. It is not usable.</li> <li> <code>COMPLETED</code>
            - The batch prediction process completed successfully.</li> <li> <code>DELETED</code>
            - The <code>BatchPrediction</code> is marked as deleted. It is not usable.</li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateBatchPredictionRequest">
            <summary>
            Container for the parameters to the CreateBatchPrediction operation.
            Generates predictions for a group of observations. The observations to process exist
            in one or more data files referenced by a <code>DataSource</code>. This operation
            creates a new <code>BatchPrediction</code>, and uses an <code>MLModel</code> and the
            data files referenced by the <code>DataSource</code> as information sources. 
            
             
            <para>
            <code>CreateBatchPrediction</code> is an asynchronous operation. In response to <code>CreateBatchPrediction</code>,
            Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>BatchPrediction</code>
            status to <code>PENDING</code>. After the <code>BatchPrediction</code> completes,
            Amazon ML sets the status to <code>COMPLETED</code>. 
            </para>
             
            <para>
            You can poll for status updates by using the <a>GetBatchPrediction</a> operation and
            checking the <code>Status</code> parameter of the result. After the <code>COMPLETED</code>
            status appears, the results are available in the location specified by the <code>OutputUri</code>
            parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateBatchPredictionRequest.BatchPredictionDataSourceId">
            <summary>
            Gets and sets the property BatchPredictionDataSourceId. 
            <para>
            The ID of the <code>DataSource</code> that points to the group of observations to
            predict.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateBatchPredictionRequest.BatchPredictionId">
            <summary>
            Gets and sets the property BatchPredictionId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>BatchPrediction</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateBatchPredictionRequest.BatchPredictionName">
            <summary>
            Gets and sets the property BatchPredictionName. 
            <para>
            A user-supplied name or description of the <code>BatchPrediction</code>. <code>BatchPredictionName</code>
            can only use the UTF-8 character set.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateBatchPredictionRequest.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The ID of the <code>MLModel</code> that will generate predictions for the group of
            observations. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateBatchPredictionRequest.OutputUri">
            <summary>
            Gets and sets the property OutputUri. 
            <para>
            The location of an Amazon Simple Storage Service (Amazon S3) bucket or directory to
            store the batch prediction results. The following substrings are not allowed in the
            s3 key portion of the "outputURI" field: ':', '//', '/./', '/../'.
            </para>
             
            <para>
            Amazon ML needs permissions to store and retrieve the logs on your behalf. For information
            about how to set permissions, see the <a href="http://docs.aws.amazon.com/machine-learning/latest/dg">Amazon
            Machine Learning Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateBatchPredictionResponse">
            <summary>
            Represents the output of a <a>CreateBatchPrediction</a> operation, and is an acknowledgement
            that Amazon ML received the request.
            
             
            <para>
            The <a>CreateBatchPrediction</a> operation is asynchronous. You can poll for status
            updates by using the <a>GetBatchPrediction</a> operation and checking the <code>Status</code>
            parameter of the result. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateBatchPredictionResponse.BatchPredictionId">
            <summary>
            Gets and sets the property BatchPredictionId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>BatchPrediction</code>. This
            value is identical to the value of the <code>BatchPredictionId</code> in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateDataSourceFromRDSRequest">
            <summary>
            Container for the parameters to the CreateDataSourceFromRDS operation.
            Creates a <code>DataSource</code> object from an <a href="http://aws.amazon.com/rds/">
            Amazon Relational Database Service</a> (Amazon RDS). A <code>DataSource</code> references
            data that can be used to perform <a>CreateMLModel</a>, <a>CreateEvaluation</a>, or
            <a>CreateBatchPrediction</a> operations.
            
             
            <para>
            <code>CreateDataSourceFromRDS</code> is an asynchronous operation. In response to
            <code>CreateDataSourceFromRDS</code>, Amazon Machine Learning (Amazon ML) immediately
            returns and sets the <code>DataSource</code> status to <code>PENDING</code>. After
            the <code>DataSource</code> is created and ready for use, Amazon ML sets the <code>Status</code>
            parameter to <code>COMPLETED</code>. <code>DataSource</code> in <code>COMPLETED</code>
            or <code>PENDING</code> status can only be used to perform <a>CreateMLModel</a>, <a>CreateEvaluation</a>,
            or <a>CreateBatchPrediction</a> operations. 
            </para>
             
            <para>
             If Amazon ML cannot accept the input source, it sets the <code>Status</code> parameter
            to <code>FAILED</code> and includes an error message in the <code>Message</code> attribute
            of the <a>GetDataSource</a> operation response. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromRDSRequest.ComputeStatistics">
            <summary>
            Gets and sets the property ComputeStatistics. 
            <para>
            The compute statistics for a <code>DataSource</code>. The statistics are generated
            from the observation data referenced by a <code>DataSource</code>. Amazon ML uses
            the statistics internally during an <code>MLModel</code> training. This parameter
            must be set to <code>true</code> if the <code></code>DataSource<code></code> needs
            to be used for <code>MLModel</code> training. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromRDSRequest.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>DataSource</code>. Typically,
            an Amazon Resource Number (ARN) becomes the ID for a <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromRDSRequest.DataSourceName">
            <summary>
            Gets and sets the property DataSourceName. 
            <para>
            A user-supplied name or description of the <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromRDSRequest.RDSData">
            <summary>
            Gets and sets the property RDSData. 
            <para>
            The data specification of an Amazon RDS <code>DataSource</code>:
            </para>
             <ul> <li>
            <para>
            DatabaseInformation - <ul> <li> <code>DatabaseName </code> - Name of the Amazon RDS
            database.</li> <li> <code> InstanceIdentifier </code> - Unique identifier for the
            Amazon RDS database instance.</li> </ul> 
            </para>
            </li> <li>
            <para>
            DatabaseCredentials - AWS Identity and Access Management (IAM) credentials that are
            used to connect to the Amazon RDS database.
            </para>
            </li> <li>
            <para>
            ResourceRole - Role (DataPipelineDefaultResourceRole) assumed by an Amazon Elastic
            Compute Cloud (EC2) instance to carry out the copy task from Amazon RDS to Amazon
            S3. For more information, see <a href="http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html">Role
            templates</a> for data pipelines.
            </para>
            </li> <li>
            <para>
            ServiceRole - Role (DataPipelineDefaultRole) assumed by the AWS Data Pipeline service
            to monitor the progress of the copy task from Amazon RDS to Amazon Simple Storage
            Service (S3). For more information, see <a href="http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html">Role
            templates</a> for data pipelines.
            </para>
            </li> <li>
            <para>
            SecurityInfo - Security information to use to access an Amazon RDS instance. You need
            to set up appropriate ingress rules for the security entity IDs provided to allow
            access to the Amazon RDS instance. Specify a [<code>SubnetId</code>, <code>SecurityGroupIds</code>]
            pair for a VPC-based Amazon RDS instance.
            </para>
            </li> <li>
            <para>
            SelectSqlQuery - Query that is used to retrieve the observation data for the <code>Datasource</code>.
            </para>
            </li> <li>
            <para>
            S3StagingLocation - Amazon S3 location for staging RDS data. The data retrieved from
            Amazon RDS using <code>SelectSqlQuery</code> is stored in this location.
            </para>
            </li> <li>
            <para>
            DataSchemaUri - Amazon S3 location of the <code>DataSchema</code>.
            </para>
            </li> <li>
            <para>
            DataSchema - A JSON string representing the schema. This is not required if <code>DataSchemaUri</code>
            is specified. 
            </para>
            </li> <li> 
            <para>
            DataRearrangement - A JSON string representing the splitting requirement of a <code>Datasource</code>.
            
            </para>
              
            <para>
             Sample - <code> "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</code>
            
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromRDSRequest.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            The role that Amazon ML assumes on behalf of the user to create and activate a data
            pipeline in the user’s account and copy data (using the <code>SelectSqlQuery</code>)
            query from Amazon RDS to Amazon S3.
            </para>
             
            <para>
             
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateDataSourceFromRDSResponse">
            <summary>
            Represents the output of a <a>CreateDataSourceFromRDS</a> operation, and is an acknowledgement
            that Amazon ML received the request.
            
             
            <para>
            The <a>CreateDataSourceFromRDS</a> operation is asynchronous. You can poll for updates
            by using the <a>GetBatchPrediction</a> operation and checking the <code>Status</code>
            parameter. You can inspect the <code>Message</code> when <code>Status</code> shows
            up as <code>FAILED</code>. You can also check the progress of the copy operation by
            going to the <code>DataPipeline</code> console and looking up the pipeline using the
            pipelineId from the describe call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromRDSResponse.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            A user-supplied ID that uniquely identifies the datasource. This value should be identical
            to the value of the <code>DataSourceID</code> in the request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftRequest">
            <summary>
            Container for the parameters to the CreateDataSourceFromRedshift operation.
            Creates a <code>DataSource</code> from <a href="http://aws.amazon.com/redshift/">Amazon
            Redshift</a>. A <code>DataSource</code> references data that can be used to perform
            either <a>CreateMLModel</a>, <a>CreateEvaluation</a> or <a>CreateBatchPrediction</a>
            operations.
            
             
            <para>
            <code>CreateDataSourceFromRedshift</code> is an asynchronous operation. In response
            to <code>CreateDataSourceFromRedshift</code>, Amazon Machine Learning (Amazon ML)
            immediately returns and sets the <code>DataSource</code> status to <code>PENDING</code>.
            After the <code>DataSource</code> is created and ready for use, Amazon ML sets the
            <code>Status</code> parameter to <code>COMPLETED</code>. <code>DataSource</code> in
            <code>COMPLETED</code> or <code>PENDING</code> status can only be used to perform
            <a>CreateMLModel</a>, <a>CreateEvaluation</a>, or <a>CreateBatchPrediction</a> operations.
            
            </para>
             
            <para>
             If Amazon ML cannot accept the input source, it sets the <code>Status</code> parameter
            to <code>FAILED</code> and includes an error message in the <code>Message</code> attribute
            of the <a>GetDataSource</a> operation response. 
            </para>
             
            <para>
            The observations should exist in the database hosted on an Amazon Redshift cluster
            and should be specified by a <code>SelectSqlQuery</code>. Amazon ML executes <a href="http://docs.aws.amazon.com/redshift/latest/dg/t_Unloading_tables.html">
            Unload</a> command in Amazon Redshift to transfer the result set of <code>SelectSqlQuery</code>
            to <code>S3StagingLocation.</code> 
            </para>
             
            <para>
            After the <code>DataSource</code> is created, it's ready for use in evaluations and
            batch predictions. If you plan to use the <code>DataSource</code> to train an <code>MLModel</code>,
            the <code>DataSource</code> requires another item -- a recipe. A recipe describes
            the observation variables that participate in training an <code>MLModel</code>. A
            recipe describes how each input variable will be used in training. Will the variable
            be included or excluded from training? Will the variable be manipulated, for example,
            combined with another variable or split apart into word combinations? The recipe provides
            answers to these questions. For more information, see the Amazon Machine Learning
            Developer Guide.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftRequest.ComputeStatistics">
            <summary>
            Gets and sets the property ComputeStatistics. 
            <para>
            The compute statistics for a <code>DataSource</code>. The statistics are generated
            from the observation data referenced by a <code>DataSource</code>. Amazon ML uses
            the statistics internally during <code>MLModel</code> training. This parameter must
            be set to <code>true</code> if the <code></code>DataSource<code></code> needs to be
            used for <code>MLModel</code> training
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftRequest.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftRequest.DataSourceName">
            <summary>
            Gets and sets the property DataSourceName. 
            <para>
            A user-supplied name or description of the <code>DataSource</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftRequest.DataSpec">
            <summary>
            Gets and sets the property DataSpec. 
            <para>
            The data specification of an Amazon Redshift <code>DataSource</code>:
            </para>
             <ul> <li>
            <para>
            DatabaseInformation - <ul> <li> <code>DatabaseName </code> - Name of the Amazon Redshift
            database. </li> <li> <code> ClusterIdentifier </code> - Unique ID for the Amazon Redshift
            cluster.</li> </ul>
            </para>
            </li> <li>
            <para>
            DatabaseCredentials - AWS Identity abd Access Management (IAM) credentials that are
            used to connect to the Amazon Redshift database.
            </para>
            </li> <li>
            <para>
            SelectSqlQuery - Query that is used to retrieve the observation data for the <code>Datasource</code>.
            </para>
            </li> <li>
            <para>
            S3StagingLocation - Amazon Simple Storage Service (Amazon S3) location for staging
            Amazon Redshift data. The data retrieved from Amazon Relational Database Service (Amazon
            RDS) using <code>SelectSqlQuery</code> is stored in this location.
            </para>
            </li> <li>
            <para>
            DataSchemaUri - Amazon S3 location of the <code>DataSchema</code>.
            </para>
            </li> <li>
            <para>
            DataSchema - A JSON string representing the schema. This is not required if <code>DataSchemaUri</code>
            is specified. 
            </para>
            </li> <li> 
            <para>
            DataRearrangement - A JSON string representing the splitting requirement of a <code>Datasource</code>.
            
            </para>
              
            <para>
             Sample - <code> "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</code>
            
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftRequest.RoleARN">
            <summary>
            Gets and sets the property RoleARN. 
            <para>
            A fully specified role Amazon Resource Name (ARN). Amazon ML assumes the role on behalf
            of the user to create the following: 
            </para>
             
            <para>
             <ul> <li>
            <para>
            A security group to allow Amazon ML to execute the <code>SelectSqlQuery</code> query
            on an Amazon Redshift cluster
            </para>
            </li> <li>
            <para>
            An Amazon S3 bucket policy to grant Amazon ML read/write permissions on the <code>S3StagingLocation</code>
            </para>
            </li> </ul> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftResponse">
            <summary>
            Represents the output of a <a>CreateDataSourceFromRedshift</a> operation, and is
            an acknowledgement that Amazon ML received the request.
            
             
            <para>
            The <a>CreateDataSourceFromRedshift</a> operation is asynchronous. You can poll for
            updates by using the <a>GetBatchPrediction</a> operation and checking the <code>Status</code>
            parameter. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftResponse.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            A user-supplied ID that uniquely identifies the datasource. This value should be identical
            to the value of the <code>DataSourceID</code> in the request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateDataSourceFromS3Request">
            <summary>
            Container for the parameters to the CreateDataSourceFromS3 operation.
            Creates a <code>DataSource</code> object. A <code>DataSource</code> references data
            that can be used to perform <a>CreateMLModel</a>, <a>CreateEvaluation</a>, or <a>CreateBatchPrediction</a>
            operations.
            
             
            <para>
            <code>CreateDataSourceFromS3</code> is an asynchronous operation. In response to <code>CreateDataSourceFromS3</code>,
            Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>DataSource</code>
            status to <code>PENDING</code>. After the <code>DataSource</code> is created and ready
            for use, Amazon ML sets the <code>Status</code> parameter to <code>COMPLETED</code>.
            <code>DataSource</code> in <code>COMPLETED</code> or <code>PENDING</code> status can
            only be used to perform <a>CreateMLModel</a>, <a>CreateEvaluation</a> or <a>CreateBatchPrediction</a>
            operations. 
            </para>
             
            <para>
             If Amazon ML cannot accept the input source, it sets the <code>Status</code> parameter
            to <code>FAILED</code> and includes an error message in the <code>Message</code> attribute
            of the <a>GetDataSource</a> operation response. 
            </para>
             
            <para>
            The observation data used in a <code>DataSource</code> should be ready to use; that
            is, it should have a consistent structure, and missing data values should be kept
            to a minimum. The observation data must reside in one or more CSV files in an Amazon
            Simple Storage Service (Amazon S3) bucket, along with a schema that describes the
            data items by name and type. The same schema must be used for all of the data files
            referenced by the <code>DataSource</code>. 
            </para>
             
            <para>
            After the <code>DataSource</code> has been created, it's ready to use in evaluations
            and batch predictions. If you plan to use the <code>DataSource</code> to train an
            <code>MLModel</code>, the <code>DataSource</code> requires another item: a recipe.
            A recipe describes the observation variables that participate in training an <code>MLModel</code>.
            A recipe describes how each input variable will be used in training. Will the variable
            be included or excluded from training? Will the variable be manipulated, for example,
            combined with another variable, or split apart into word combinations? The recipe
            provides answers to these questions. For more information, see the <a href="http://docs.aws.amazon.com/machine-learning/latest/dg">Amazon
            Machine Learning Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromS3Request.ComputeStatistics">
            <summary>
            Gets and sets the property ComputeStatistics. 
            <para>
            The compute statistics for a <code>DataSource</code>. The statistics are generated
            from the observation data referenced by a <code>DataSource</code>. Amazon ML uses
            the statistics internally during an <code>MLModel</code> training. This parameter
            must be set to <code>true</code> if the <code></code>DataSource<code></code> needs
            to be used for <code>MLModel</code> training
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromS3Request.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            A user-supplied identifier that uniquely identifies the <code>DataSource</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromS3Request.DataSourceName">
            <summary>
            Gets and sets the property DataSourceName. 
            <para>
            A user-supplied name or description of the <code>DataSource</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromS3Request.DataSpec">
            <summary>
            Gets and sets the property DataSpec. 
            <para>
            The data specification of a <code>DataSource</code>:
            </para>
             <ul> <li>
            <para>
            DataLocationS3 - Amazon Simple Storage Service (Amazon S3) location of the observation
            data.
            </para>
            </li> <li>
            <para>
            DataSchemaLocationS3 - Amazon S3 location of the <code>DataSchema</code>.
            </para>
            </li> <li>
            <para>
            DataSchema - A JSON string representing the schema. This is not required if <code>DataSchemaUri</code>
            is specified. 
            </para>
            </li> <li> 
            <para>
            DataRearrangement - A JSON string representing the splitting requirement of a <code>Datasource</code>.
            
            </para>
              
            <para>
             Sample - <code> "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</code>
            
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateDataSourceFromS3Response">
            <summary>
            Represents the output of a <a>CreateDataSourceFromS3</a> operation, and is an acknowledgement
            that Amazon ML received the request.
            
             
            <para>
            The <a>CreateDataSourceFromS3</a> operation is asynchronous. You can poll for updates
            by using the <a>GetBatchPrediction</a> operation and checking the <code>Status</code>
            parameter. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateDataSourceFromS3Response.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            A user-supplied ID that uniquely identifies the datasource. This value should be identical
            to the value of the <code>DataSourceID</code> in the request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateEvaluationRequest">
            <summary>
            Container for the parameters to the CreateEvaluation operation.
            Creates a new <code>Evaluation</code> of an <code>MLModel</code>. An <code>MLModel</code>
            is evaluated on a set of observations associated to a <code>DataSource</code>. Like
            a <code>DataSource</code> for an <code>MLModel</code>, the <code>DataSource</code>
            for an <code>Evaluation</code> contains values for the Target Variable. The <code>Evaluation</code>
            compares the predicted result for each observation to the actual outcome and provides
            a summary so that you know how effective the <code>MLModel</code> functions on the
            test data. Evaluation generates a relevant performance metric such as BinaryAUC, RegressionRMSE
            or MulticlassAvgFScore based on the corresponding <code>MLModelType</code>: <code>BINARY</code>,
            <code>REGRESSION</code> or <code>MULTICLASS</code>. 
            
             
            <para>
            <code>CreateEvaluation</code> is an asynchronous operation. In response to <code>CreateEvaluation</code>,
            Amazon Machine Learning (Amazon ML) immediately returns and sets the evaluation status
            to <code>PENDING</code>. After the <code>Evaluation</code> is created and ready for
            use, Amazon ML sets the status to <code>COMPLETED</code>. 
            </para>
             
            <para>
            You can use the <a>GetEvaluation</a> operation to check progress of the evaluation
            during the creation operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateEvaluationRequest.EvaluationDataSourceId">
            <summary>
            Gets and sets the property EvaluationDataSourceId. 
            <para>
            The ID of the <code>DataSource</code> for the evaluation. The schema of the <code>DataSource</code>
            must match the schema used to create the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateEvaluationRequest.EvaluationId">
            <summary>
            Gets and sets the property EvaluationId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>Evaluation</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateEvaluationRequest.EvaluationName">
            <summary>
            Gets and sets the property EvaluationName. 
            <para>
            A user-supplied name or description of the <code>Evaluation</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateEvaluationRequest.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The ID of the <code>MLModel</code> to evaluate.
            </para>
             
            <para>
            The schema used in creating the <code>MLModel</code> must match the schema of the
            <code>DataSource</code> used in the <code>Evaluation</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateEvaluationResponse">
            <summary>
            Represents the output of a <a>CreateEvaluation</a> operation, and is an acknowledgement
            that Amazon ML received the request.
            
             
            <para>
            <a>CreateEvaluation</a> operation is asynchronous. You can poll for status updates
            by using the <a>GetEvaluation</a> operation and checking the <code>Status</code> parameter.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateEvaluationResponse.EvaluationId">
            <summary>
            Gets and sets the property EvaluationId. 
            <para>
            The user-supplied ID that uniquely identifies the <code>Evaluation</code>. This value
            should be identical to the value of the <code>EvaluationId</code> in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateMLModelRequest">
            <summary>
            Container for the parameters to the CreateMLModel operation.
            Creates a new <code>MLModel</code> using the data files and the recipe as information
            sources. 
            
             
            <para>
            An <code>MLModel</code> is nearly immutable. Users can only update the <code>MLModelName</code>
            and the <code>ScoreThreshold</code> in an <code>MLModel</code> without creating a
            new <code>MLModel</code>. 
            </para>
             
            <para>
            <code>CreateMLModel</code> is an asynchronous operation. In response to <code>CreateMLModel</code>,
            Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>MLModel</code>
            status to <code>PENDING</code>. After the <code>MLModel</code> is created and ready
            for use, Amazon ML sets the status to <code>COMPLETED</code>. 
            </para>
             
            <para>
            You can use the <a>GetMLModel</a> operation to check progress of the <code>MLModel</code>
            during the creation operation.
            </para>
             
            <para>
             <a>CreateMLModel</a> requires a <code>DataSource</code> with computed statistics,
            which can be created by setting <code>ComputeStatistics</code> to <code>true</code>
            in <a>CreateDataSourceFromRDS</a>, <a>CreateDataSourceFromS3</a>, or <a>CreateDataSourceFromRedshift</a>
            operations. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateMLModelRequest.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateMLModelRequest.MLModelName">
            <summary>
            Gets and sets the property MLModelName. 
            <para>
            A user-supplied name or description of the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateMLModelRequest.MLModelType">
            <summary>
            Gets and sets the property MLModelType. 
            <para>
            The category of supervised learning that this <code>MLModel</code> will address. Choose
            from the following types:
            </para>
             <ul> <li>Choose <code>REGRESSION</code> if the <code>MLModel</code> will be used
            to predict a numeric value.</li> <li>Choose <code>BINARY</code> if the <code>MLModel</code>
            result has two possible values.</li> <li>Choose <code>MULTICLASS</code> if the <code>MLModel</code>
            result has a limited number of values. </li> </ul> 
            <para>
             For more information, see the <a href="http://docs.aws.amazon.com/machine-learning/latest/dg">Amazon
            Machine Learning Developer Guide</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateMLModelRequest.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            A list of the training parameters in the <code>MLModel</code>. The list is implemented
            as a map of key/value pairs.
            </para>
             
            <para>
            The following is the current set of training parameters: 
            </para>
             <ul> <li> 
            <para>
            <code>sgd.l1RegularizationAmount</code> - Coefficient regularization L1 norm. It controls
            overfitting the data by penalizing large coefficients. This tends to drive coefficients
            to zero, resulting in sparse feature set. If you use this parameter, start by specifying
            a small value such as 1.0E-08.
            </para>
             
            <para>
            The value is a double that ranges from 0 to MAX_DOUBLE. The default is not to use
            L1 normalization. The parameter cannot be used when <code>L2</code> is specified.
            Use this parameter sparingly.
            </para>
             </li> <li> 
            <para>
            <code>sgd.l2RegularizationAmount</code> - Coefficient regularization L2 norm. It controls
            overfitting the data by penalizing large coefficients. This tends to drive coefficients
            to small, nonzero values. If you use this parameter, start by specifying a small value
            such as 1.0E-08.
            </para>
             
            <para>
            The valuseis a double that ranges from 0 to MAX_DOUBLE. The default is not to use
            L2 normalization. This cannot be used when <code>L1</code> is specified. Use this
            parameter sparingly.
            </para>
             </li> <li>
            <para>
            <code>sgd.maxPasses</code> - Number of times that the training process traverses the
            observations to build the <code>MLModel</code>. The value is an integer that ranges
            from 1 to 10000. The default value is 10. 
            </para>
            </li> <li> 
            <para>
            <code>sgd.maxMLModelSizeInBytes</code> - Maximum allowed size of the model. Depending
            on the input data, the size of the model might affect its performance.
            </para>
             
            <para>
             The value is an integer that ranges from 100000 to 2147483648. The default value
            is 33554432. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateMLModelRequest.Recipe">
            <summary>
            Gets and sets the property Recipe. 
            <para>
            The data recipe for creating <code>MLModel</code>. You must specify either the recipe
            or its URI. If you don’t specify a recipe or its URI, Amazon ML creates a default.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateMLModelRequest.RecipeUri">
            <summary>
            Gets and sets the property RecipeUri. 
            <para>
            The Amazon Simple Storage Service (Amazon S3) location and file name that contains
            the <code>MLModel</code> recipe. You must specify either the recipe or its URI. If
            you don’t specify a recipe or its URI, Amazon ML creates a default.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateMLModelRequest.TrainingDataSourceId">
            <summary>
            Gets and sets the property TrainingDataSourceId. 
            <para>
            The <code>DataSource</code> that points to the training data.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateMLModelResponse">
            <summary>
            Represents the output of a <a>CreateMLModel</a> operation, and is an acknowledgement
            that Amazon ML received the request.
            
             
            <para>
            The <a>CreateMLModel</a> operation is asynchronous. You can poll for status updates
            by using the <a>GetMLModel</a> operation and checking the <code>Status</code> parameter.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateMLModelResponse.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>MLModel</code>. This value should
            be identical to the value of the <code>MLModelId</code> in the request. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateRealtimeEndpointRequest">
            <summary>
            Container for the parameters to the CreateRealtimeEndpoint operation.
            Creates a real-time endpoint for the <code>MLModel</code>. The endpoint contains the
            URI of the <code>MLModel</code>; that is, the location to send real-time prediction
            requests for the specified <code>MLModel</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateRealtimeEndpointRequest.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The ID assigned to the <code>MLModel</code> during creation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.CreateRealtimeEndpointResponse">
            <summary>
            Represents the output of an <a>CreateRealtimeEndpoint</a> operation.
            
             
            <para>
            The result contains the <code>MLModelId</code> and the endpoint information for the
            <code>MLModel</code>.
            </para>
             <note> 
            <para>
            The endpoint information includes the URI of the <code>MLModel</code>; that is, the
            location to send online prediction requests for the specified <code>MLModel</code>.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateRealtimeEndpointResponse.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>MLModel</code>. This value should
            be identical to the value of the <code>MLModelId</code> in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.CreateRealtimeEndpointResponse.RealtimeEndpointInfo">
            <summary>
            Gets and sets the property RealtimeEndpointInfo. 
            <para>
            The endpoint information of the <code>MLModel</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DataSource">
            <summary>
            Represents the output of the <a>GetDataSource</a> operation. 
            
             
            <para>
             The content consists of the detailed metadata and data file information and the current
            status of the <code>DataSource</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.ComputeStatistics">
            <summary>
            Gets and sets the property ComputeStatistics. 
            <para>
             The parameter is <code>true</code> if statistics need to be generated from the observation
            data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time that the <code>DataSource</code> was created. The time is expressed in epoch
            time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.CreatedByIamUser">
            <summary>
            Gets and sets the property CreatedByIamUser. 
            <para>
            The AWS user account from which the <code>DataSource</code> was created. The account
            type can be either an AWS root account or an AWS Identity and Access Management (IAM)
            user account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.DataLocationS3">
            <summary>
            Gets and sets the property DataLocationS3. 
            <para>
            The location and name of the data in Amazon Simple Storage Service (Amazon S3) that
            is used by a <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.DataRearrangement">
            <summary>
            Gets and sets the property DataRearrangement. 
            <para>
            A JSON string that represents the splitting requirement of a <code>Datasource</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.DataSizeInBytes">
            <summary>
            Gets and sets the property DataSizeInBytes. 
            <para>
            The total number of observations contained in the data files that the <code>DataSource</code>
            references.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            The ID that is assigned to the <code>DataSource</code> during creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            The time of the most recent edit to the <code>BatchPrediction</code>. The time is
            expressed in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A description of the most recent details about creating the <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A user-supplied name or description of the <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.NumberOfFiles">
            <summary>
            Gets and sets the property NumberOfFiles. 
            <para>
            The number of data files referenced by the <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.RDSMetadata">
            <summary>
            Gets and sets the property RDSMetadata.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.RedshiftMetadata">
            <summary>
            Gets and sets the property RedshiftMetadata.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.RoleARN">
            <summary>
            Gets and sets the property RoleARN.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DataSource.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the <code>DataSource</code>. This element can have one of the
            following values: 
            </para>
             <ul> <li>PENDING - Amazon Machine Learning (Amazon ML) submitted a request to create
            a <code>DataSource</code>.</li> <li>INPROGRESS - The creation process is underway.</li>
            <li>FAILED - The request to create a <code>DataSource</code> did not run to completion.
            It is not usable.</li> <li>COMPLETED - The creation process completed successfully.</li>
            <li>DELETED - The <code>DataSource</code> is marked as deleted. It is not usable.</li>
            </ul>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DeleteBatchPredictionRequest">
            <summary>
            Container for the parameters to the DeleteBatchPrediction operation.
            Assigns the DELETED status to a <code>BatchPrediction</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteBatchPrediction</code> operation, you can use the <a>GetBatchPrediction</a>
            operation to verify that the status of the <code>BatchPrediction</code> changed to
            DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The result of the <code>DeleteBatchPrediction</code> operation is
            irreversible.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DeleteBatchPredictionRequest.BatchPredictionId">
            <summary>
            Gets and sets the property BatchPredictionId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>BatchPrediction</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DeleteBatchPredictionResponse">
            <summary>
            Represents the output of a <a>DeleteBatchPrediction</a> operation.
            
             
            <para>
            You can use the <a>GetBatchPrediction</a> operation and check the value of the <code>Status</code>
            parameter to see whether a <code>BatchPrediction</code> is marked as <code>DELETED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DeleteBatchPredictionResponse.BatchPredictionId">
            <summary>
            Gets and sets the property BatchPredictionId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>BatchPrediction</code>. This
            value should be identical to the value of the <code>BatchPredictionID</code> in the
            request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DeleteDataSourceRequest">
            <summary>
            Container for the parameters to the DeleteDataSource operation.
            Assigns the DELETED status to a <code>DataSource</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteDataSource</code> operation, you can use the <a>GetDataSource</a>
            operation to verify that the status of the <code>DataSource</code> changed to DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The results of the <code>DeleteDataSource</code> operation are irreversible.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DeleteDataSourceRequest.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DeleteDataSourceResponse">
            <summary>
            Represents the output of a <a>DeleteDataSource</a> operation.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DeleteDataSourceResponse.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>DataSource</code>. This value
            should be identical to the value of the <code>DataSourceID</code> in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DeleteEvaluationRequest">
            <summary>
            Container for the parameters to the DeleteEvaluation operation.
            Assigns the <code>DELETED</code> status to an <code>Evaluation</code>, rendering it
            unusable.
            
             
            <para>
            After invoking the <code>DeleteEvaluation</code> operation, you can use the <a>GetEvaluation</a>
            operation to verify that the status of the <code>Evaluation</code> changed to <code>DELETED</code>.
            </para>
             
            <para>
            <b>Caution:</b> The results of the <code>DeleteEvaluation</code> operation are irreversible.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DeleteEvaluationRequest.EvaluationId">
            <summary>
            Gets and sets the property EvaluationId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>Evaluation</code> to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DeleteEvaluationResponse">
            <summary>
            Represents the output of a <a>DeleteEvaluation</a> operation. The output indicates
            that Amazon Machine Learning (Amazon ML) received the request.
            
             
            <para>
            You can use the <a>GetEvaluation</a> operation and check the value of the <code>Status</code>
            parameter to see whether an <code>Evaluation</code> is marked as <code>DELETED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DeleteEvaluationResponse.EvaluationId">
            <summary>
            Gets and sets the property EvaluationId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>Evaluation</code>. This value
            should be identical to the value of the <code>EvaluationId</code> in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DeleteMLModelRequest">
            <summary>
            Container for the parameters to the DeleteMLModel operation.
            Assigns the DELETED status to an <code>MLModel</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteMLModel</code> operation, you can use the <a>GetMLModel</a>
            operation to verify that the status of the <code>MLModel</code> changed to DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The result of the <code>DeleteMLModel</code> operation is irreversible.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DeleteMLModelRequest.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DeleteMLModelResponse">
            <summary>
            Represents the output of a <a>DeleteMLModel</a> operation.
            
             
            <para>
            You can use the <a>GetMLModel</a> operation and check the value of the <code>Status</code>
            parameter to see whether an <code>MLModel</code> is marked as <code>DELETED</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DeleteMLModelResponse.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>MLModel</code>. This value should
            be identical to the value of the <code>MLModelID</code> in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DeleteRealtimeEndpointRequest">
            <summary>
            Container for the parameters to the DeleteRealtimeEndpoint operation.
            Deletes a real time endpoint of an <code>MLModel</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DeleteRealtimeEndpointRequest.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The ID assigned to the <code>MLModel</code> during creation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DeleteRealtimeEndpointResponse">
            <summary>
            Represents the output of an <a>DeleteRealtimeEndpoint</a> operation.
            
             
            <para>
            The result contains the <code>MLModelId</code> and the endpoint information for the
            <code>MLModel</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DeleteRealtimeEndpointResponse.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            A user-supplied ID that uniquely identifies the <code>MLModel</code>. This value should
            be identical to the value of the <code>MLModelId</code> in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DeleteRealtimeEndpointResponse.RealtimeEndpointInfo">
            <summary>
            Gets and sets the property RealtimeEndpointInfo. 
            <para>
            The endpoint information of the <code>MLModel</code> 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest">
            <summary>
            Container for the parameters to the DescribeBatchPredictions operation.
            Returns a list of <code>BatchPrediction</code> operations that match the search criteria
            in the request.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest.EQ">
            <summary>
            Gets and sets the property EQ. 
            <para>
            The equal to operator. The <code>BatchPrediction</code> results will have <code>FilterVariable</code>
            values that exactly match the value specified with <code>EQ</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest.FilterVariable">
            <summary>
            Gets and sets the property FilterVariable. 
            <para>
            Use one of the following variables to filter a list of <code>BatchPrediction</code>:
            </para>
             <ul> <li> <code>CreatedAt</code> - Sets the search criteria to the <code>BatchPrediction</code>
            creation date.</li> <li> <code>Status</code> - Sets the search criteria to the <code>BatchPrediction</code>
            status.</li> <li> <code>Name</code> - Sets the search criteria to the contents of
            the <code>BatchPrediction</code><b> </b> <code>Name</code>.</li> <li> <code>IAMUser</code>
            - Sets the search criteria to the user account that invoked the <code>BatchPrediction</code>
            creation.</li> <li> <code>MLModelId</code> - Sets the search criteria to the <code>MLModel</code>
            used in the <code>BatchPrediction</code>.</li> <li> <code>DataSourceId</code> - Sets
            the search criteria to the <code>DataSource</code> used in the <code>BatchPrediction</code>.</li>
            <li> <code>DataURI</code> - Sets the search criteria to the data file(s) used in the
            <code>BatchPrediction</code>. The URL can identify either a file or an Amazon Simple
            Storage Solution (Amazon S3) bucket or directory.</li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest.GE">
            <summary>
            Gets and sets the property GE. 
            <para>
            The greater than or equal to operator. The <code>BatchPrediction</code> results will
            have <code>FilterVariable</code> values that are greater than or equal to the value
            specified with <code>GE</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest.GT">
            <summary>
            Gets and sets the property GT. 
            <para>
            The greater than operator. The <code>BatchPrediction</code> results will have <code>FilterVariable</code>
            values that are greater than the value specified with <code>GT</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest.LE">
            <summary>
            Gets and sets the property LE. 
            <para>
            The less than or equal to operator. The <code>BatchPrediction</code> results will
            have <code>FilterVariable</code> values that are less than or equal to the value specified
            with <code>LE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The number of pages of information to include in the result. The range of acceptable
            values is 1 through 100. The default value is 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest.LT">
            <summary>
            Gets and sets the property LT. 
            <para>
            The less than operator. The <code>BatchPrediction</code> results will have <code>FilterVariable</code>
            values that are less than the value specified with <code>LT</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest.NE">
            <summary>
            Gets and sets the property NE. 
            <para>
            The not equal to operator. The <code>BatchPrediction</code> results will have <code>FilterVariable</code>
            values not equal to the value specified with <code>NE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An ID of the page in the paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            A string that is found at the beginning of a variable, such as <code>Name</code> or
            <code>Id</code>.
            </para>
             
            <para>
            For example, a <code>Batch Prediction</code> operation could have the <code>Name</code>
            <code>2014-09-09-HolidayGiftMailer</code>. To search for this <code>BatchPrediction</code>,
            select <code>Name</code> for the <code>FilterVariable</code> and any of the following
            strings for the <code>Prefix</code>: 
            </para>
             <ul> <li>
            <para>
            2014-09
            </para>
            </li> <li>
            <para>
            2014-09-09
            </para>
            </li> <li>
            <para>
            2014-09-09-Holiday
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest.SortOrder">
            <summary>
            Gets and sets the property SortOrder. 
            <para>
            A two-value parameter that determines the sequence of the resulting list of <code>MLModel</code>s.
            </para>
             <ul> <li> <code>asc</code> - Arranges the list in ascending order (A-Z, 0-9).</li>
            <li> <code>dsc</code> - Arranges the list in descending order (Z-A, 9-0).</li> </ul>
            
            <para>
            Results are sorted by <code>FilterVariable</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DescribeBatchPredictionsResponse">
            <summary>
            Represents the output of a <a>DescribeBatchPredictions</a> operation. The content
            is essentially a list of <code>BatchPrediction</code>s.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The ID of the next page in the paginated results that indicates at least one more
            page follows.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeBatchPredictionsResponse.Results">
            <summary>
            Gets and sets the property Results. 
            <para>
            A list of <a>BatchPrediction</a> objects that meet the search criteria. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DescribeDataSourcesRequest">
            <summary>
            Container for the parameters to the DescribeDataSources operation.
            Returns a list of <code>DataSource</code> that match the search criteria in the request.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesRequest.EQ">
            <summary>
            Gets and sets the property EQ. 
            <para>
            The equal to operator. The <code>DataSource</code> results will have <code>FilterVariable</code>
            values that exactly match the value specified with <code>EQ</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesRequest.FilterVariable">
            <summary>
            Gets and sets the property FilterVariable. 
            <para>
            Use one of the following variables to filter a list of <code>DataSource</code>:
            </para>
             <ul> <li> <code>CreatedAt</code> - Sets the search criteria to <code>DataSource</code>
            creation dates.</li> <li> <code>Status</code> - Sets the search criteria to <code>DataSource</code>
            statuses.</li> <li> <code>Name</code> - Sets the search criteria to the contents of
            <code>DataSource</code> <b> </b> <code>Name</code>.</li> <li> <code>DataUri</code>
            - Sets the search criteria to the URI of data files used to create the <code>DataSource</code>.
            The URI can identify either a file or an Amazon Simple Storage Service (Amazon S3)
            bucket or directory.</li> <li> <code>IAMUser</code> - Sets the search criteria to
            the user account that invoked the <code>DataSource</code> creation.</li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesRequest.GE">
            <summary>
            Gets and sets the property GE. 
            <para>
            The greater than or equal to operator. The <code>DataSource</code> results will have
            <code>FilterVariable</code> values that are greater than or equal to the value specified
            with <code>GE</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesRequest.GT">
            <summary>
            Gets and sets the property GT. 
            <para>
            The greater than operator. The <code>DataSource</code> results will have <code>FilterVariable</code>
            values that are greater than the value specified with <code>GT</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesRequest.LE">
            <summary>
            Gets and sets the property LE. 
            <para>
            The less than or equal to operator. The <code>DataSource</code> results will have
            <code>FilterVariable</code> values that are less than or equal to the value specified
            with <code>LE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
             The maximum number of <code>DataSource</code> to include in the result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesRequest.LT">
            <summary>
            Gets and sets the property LT. 
            <para>
            The less than operator. The <code>DataSource</code> results will have <code>FilterVariable</code>
            values that are less than the value specified with <code>LT</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesRequest.NE">
            <summary>
            Gets and sets the property NE. 
            <para>
            The not equal to operator. The <code>DataSource</code> results will have <code>FilterVariable</code>
            values not equal to the value specified with <code>NE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The ID of the page in the paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesRequest.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            A string that is found at the beginning of a variable, such as <code>Name</code> or
            <code>Id</code>.
            </para>
             
            <para>
            For example, a <code>DataSource</code> could have the <code>Name</code> <code>2014-09-09-HolidayGiftMailer</code>.
            To search for this <code>DataSource</code>, select <code>Name</code> for the <code>FilterVariable</code>
            and any of the following strings for the <code>Prefix</code>: 
            </para>
             <ul> <li>
            <para>
            2014-09
            </para>
            </li> <li>
            <para>
            2014-09-09
            </para>
            </li> <li>
            <para>
            2014-09-09-Holiday
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesRequest.SortOrder">
            <summary>
            Gets and sets the property SortOrder. 
            <para>
            A two-value parameter that determines the sequence of the resulting list of <code>DataSource</code>.
            </para>
             <ul> <li> <code>asc</code> - Arranges the list in ascending order (A-Z, 0-9).</li>
            <li> <code>dsc</code> - Arranges the list in descending order (Z-A, 9-0).</li> </ul>
            
            <para>
            Results are sorted by <code>FilterVariable</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DescribeDataSourcesResponse">
            <summary>
            Represents the query results from a <a>DescribeDataSources</a> operation. The content
            is essentially a list of <code>DataSource</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An ID of the next page in the paginated results that indicates at least one more page
            follows.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeDataSourcesResponse.Results">
            <summary>
            Gets and sets the property Results. 
            <para>
            A list of <code>DataSource</code> that meet the search criteria. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DescribeEvaluationsRequest">
            <summary>
            Container for the parameters to the DescribeEvaluations operation.
            Returns a list of <code>DescribeEvaluations</code> that match the search criteria
            in the request.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsRequest.EQ">
            <summary>
            Gets and sets the property EQ. 
            <para>
            The equal to operator. The <code>Evaluation</code> results will have <code>FilterVariable</code>
            values that exactly match the value specified with <code>EQ</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsRequest.FilterVariable">
            <summary>
            Gets and sets the property FilterVariable. 
            <para>
            Use one of the following variable to filter a list of <code>Evaluation</code> objects:
            </para>
             <ul> <li> <code>CreatedAt</code> - Sets the search criteria to the <code>Evaluation</code>
            creation date.</li> <li> <code>Status</code> - Sets the search criteria to the <code>Evaluation</code>
            status.</li> <li> <code>Name</code> - Sets the search criteria to the contents of
            <code>Evaluation</code> <b> </b> <code>Name</code>.</li> <li> <code>IAMUser</code>
            - Sets the search criteria to the user account that invoked an <code>Evaluation</code>.</li>
            <li> <code>MLModelId</code> - Sets the search criteria to the <code>MLModel</code>
            that was evaluated.</li> <li> <code>DataSourceId</code> - Sets the search criteria
            to the <code>DataSource</code> used in <code>Evaluation</code>.</li> <li> <code>DataUri</code>
            - Sets the search criteria to the data file(s) used in <code>Evaluation</code>. The
            URL can identify either a file or an Amazon Simple Storage Solution (Amazon S3) bucket
            or directory.</li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsRequest.GE">
            <summary>
            Gets and sets the property GE. 
            <para>
            The greater than or equal to operator. The <code>Evaluation</code> results will have
            <code>FilterVariable</code> values that are greater than or equal to the value specified
            with <code>GE</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsRequest.GT">
            <summary>
            Gets and sets the property GT. 
            <para>
            The greater than operator. The <code>Evaluation</code> results will have <code>FilterVariable</code>
            values that are greater than the value specified with <code>GT</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsRequest.LE">
            <summary>
            Gets and sets the property LE. 
            <para>
            The less than or equal to operator. The <code>Evaluation</code> results will have
            <code>FilterVariable</code> values that are less than or equal to the value specified
            with <code>LE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
             The maximum number of <code>Evaluation</code> to include in the result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsRequest.LT">
            <summary>
            Gets and sets the property LT. 
            <para>
            The less than operator. The <code>Evaluation</code> results will have <code>FilterVariable</code>
            values that are less than the value specified with <code>LT</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsRequest.NE">
            <summary>
            Gets and sets the property NE. 
            <para>
            The not equal to operator. The <code>Evaluation</code> results will have <code>FilterVariable</code>
            values not equal to the value specified with <code>NE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The ID of the page in the paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsRequest.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            A string that is found at the beginning of a variable, such as <code>Name</code> or
            <code>Id</code>.
            </para>
             
            <para>
            For example, an <code>Evaluation</code> could have the <code>Name</code> <code>2014-09-09-HolidayGiftMailer</code>.
            To search for this <code>Evaluation</code>, select <code>Name</code> for the <code>FilterVariable</code>
            and any of the following strings for the <code>Prefix</code>: 
            </para>
             <ul> <li>
            <para>
            2014-09
            </para>
            </li> <li>
            <para>
            2014-09-09
            </para>
            </li> <li>
            <para>
            2014-09-09-Holiday
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsRequest.SortOrder">
            <summary>
            Gets and sets the property SortOrder. 
            <para>
            A two-value parameter that determines the sequence of the resulting list of <code>Evaluation</code>.
            </para>
             <ul> <li> <code>asc</code> - Arranges the list in ascending order (A-Z, 0-9).</li>
            <li> <code>dsc</code> - Arranges the list in descending order (Z-A, 9-0).</li> </ul>
            
            <para>
            Results are sorted by <code>FilterVariable</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DescribeEvaluationsResponse">
            <summary>
            Represents the query results from a <a>DescribeEvaluations</a> operation. The content
            is essentially a list of <code>Evaluation</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The ID of the next page in the paginated results that indicates at least one more
            page follows.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeEvaluationsResponse.Results">
            <summary>
            Gets and sets the property Results. 
            <para>
            A list of <a>Evaluation</a> that meet the search criteria. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DescribeMLModelsRequest">
            <summary>
            Container for the parameters to the DescribeMLModels operation.
            Returns a list of <code>MLModel</code> that match the search criteria in the request.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsRequest.EQ">
            <summary>
            Gets and sets the property EQ. 
            <para>
            The equal to operator. The <code>MLModel</code> results will have <code>FilterVariable</code>
            values that exactly match the value specified with <code>EQ</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsRequest.FilterVariable">
            <summary>
            Gets and sets the property FilterVariable. 
            <para>
            Use one of the following variables to filter a list of <code>MLModel</code>:
            </para>
             <ul> <li> <code>CreatedAt</code> - Sets the search criteria to <code>MLModel</code>
            creation date.</li> <li> <code>Status</code> - Sets the search criteria to <code>MLModel</code>
            status.</li> <li> <code>Name</code> - Sets the search criteria to the contents of
            <code>MLModel</code><b> </b> <code>Name</code>.</li> <li> <code>IAMUser</code> - Sets
            the search criteria to the user account that invoked the <code>MLModel</code> creation.</li>
            <li> <code>TrainingDataSourceId</code> - Sets the search criteria to the <code>DataSource</code>
            used to train one or more <code>MLModel</code>.</li> <li> <code>RealtimeEndpointStatus</code>
            - Sets the search criteria to the <code>MLModel</code> real-time endpoint status.</li>
            <li> <code>MLModelType</code> - Sets the search criteria to <code>MLModel</code> type:
            binary, regression, or multi-class.</li> <li> <code>Algorithm</code> - Sets the search
            criteria to the algorithm that the <code>MLModel</code> uses.</li> <li> <code>TrainingDataURI</code>
            - Sets the search criteria to the data file(s) used in training a <code>MLModel</code>.
            The URL can identify either a file or an Amazon Simple Storage Service (Amazon S3)
            bucket or directory.</li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsRequest.GE">
            <summary>
            Gets and sets the property GE. 
            <para>
            The greater than or equal to operator. The <code>MLModel</code> results will have
            <code>FilterVariable</code> values that are greater than or equal to the value specified
            with <code>GE</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsRequest.GT">
            <summary>
            Gets and sets the property GT. 
            <para>
            The greater than operator. The <code>MLModel</code> results will have <code>FilterVariable</code>
            values that are greater than the value specified with <code>GT</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsRequest.LE">
            <summary>
            Gets and sets the property LE. 
            <para>
            The less than or equal to operator. The <code>MLModel</code> results will have <code>FilterVariable</code>
            values that are less than or equal to the value specified with <code>LE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The number of pages of information to include in the result. The range of acceptable
            values is 1 through 100. The default value is 100.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsRequest.LT">
            <summary>
            Gets and sets the property LT. 
            <para>
            The less than operator. The <code>MLModel</code> results will have <code>FilterVariable</code>
            values that are less than the value specified with <code>LT</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsRequest.NE">
            <summary>
            Gets and sets the property NE. 
            <para>
            The not equal to operator. The <code>MLModel</code> results will have <code>FilterVariable</code>
            values not equal to the value specified with <code>NE</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The ID of the page in the paginated results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsRequest.Prefix">
            <summary>
            Gets and sets the property Prefix. 
            <para>
            A string that is found at the beginning of a variable, such as <code>Name</code> or
            <code>Id</code>.
            </para>
             
            <para>
            For example, an <code>MLModel</code> could have the <code>Name</code> <code>2014-09-09-HolidayGiftMailer</code>.
            To search for this <code>MLModel</code>, select <code>Name</code> for the <code>FilterVariable</code>
            and any of the following strings for the <code>Prefix</code>: 
            </para>
             <ul> <li>
            <para>
            2014-09
            </para>
            </li> <li>
            <para>
            2014-09-09
            </para>
            </li> <li>
            <para>
            2014-09-09-Holiday
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsRequest.SortOrder">
            <summary>
            Gets and sets the property SortOrder. 
            <para>
            A two-value parameter that determines the sequence of the resulting list of <code>MLModel</code>.
            </para>
             <ul> <li> <code>asc</code> - Arranges the list in ascending order (A-Z, 0-9).</li>
            <li> <code>dsc</code> - Arranges the list in descending order (Z-A, 9-0).</li> </ul>
            
            <para>
            Results are sorted by <code>FilterVariable</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.DescribeMLModelsResponse">
            <summary>
            Represents the output of a <a>DescribeMLModels</a> operation. The content is essentially
            a list of <code>MLModel</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The ID of the next page in the paginated results that indicates at least one more
            page follows.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.DescribeMLModelsResponse.Results">
            <summary>
            Gets and sets the property Results. 
            <para>
            A list of <a>MLModel</a> that meet the search criteria.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Evaluation">
            <summary>
            Represents the output of <a>GetEvaluation</a> operation. 
            
             
            <para>
            The content consists of the detailed metadata and data file information and the current
            status of the <code>Evaluation</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Evaluation.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time that the <code>Evaluation</code> was created. The time is expressed in epoch
            time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Evaluation.CreatedByIamUser">
            <summary>
            Gets and sets the property CreatedByIamUser. 
            <para>
            The AWS user account that invoked the evaluation. The account type can be either an
            AWS root account or an AWS Identity and Access Management (IAM) user account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Evaluation.EvaluationDataSourceId">
            <summary>
            Gets and sets the property EvaluationDataSourceId. 
            <para>
            The ID of the <code>DataSource</code> that is used to evaluate the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Evaluation.EvaluationId">
            <summary>
            Gets and sets the property EvaluationId. 
            <para>
            The ID that is assigned to the <code>Evaluation</code> at creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Evaluation.InputDataLocationS3">
            <summary>
            Gets and sets the property InputDataLocationS3. 
            <para>
            The location and name of the data in Amazon Simple Storage Server (Amazon S3) that
            is used in the evaluation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Evaluation.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            The time of the most recent edit to the <code>Evaluation</code>. The time is expressed
            in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Evaluation.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A description of the most recent details about evaluating the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Evaluation.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The ID of the <code>MLModel</code> that is the focus of the evaluation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Evaluation.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A user-supplied name or description of the <code>Evaluation</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Evaluation.PerformanceMetrics">
            <summary>
            Gets and sets the property PerformanceMetrics. 
            <para>
            Measurements of how well the <code>MLModel</code> performed, using observations referenced
            by the <code>DataSource</code>. One of the following metrics is returned, based on
            the type of the MLModel: 
            </para>
             <ul> <li> 
            <para>
            BinaryAUC: A binary <code>MLModel</code> uses the Area Under the Curve (AUC) technique
            to measure performance. 
            </para>
             </li> <li> 
            <para>
            RegressionRMSE: A regression <code>MLModel</code> uses the Root Mean Square Error
            (RMSE) technique to measure performance. RMSE measures the difference between predicted
            and actual values for a single variable.
            </para>
             </li> <li> 
            <para>
            MulticlassAvgFScore: A multiclass <code>MLModel</code> uses the F1 score technique
            to measure performance. 
            </para>
             </li> </ul> 
            <para>
             For more information about performance metrics, please see the <a href="http://docs.aws.amazon.com/machine-learning/latest/dg">Amazon
            Machine Learning Developer Guide</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Evaluation.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the evaluation. This element can have one of the following values:
            </para>
             <ul> <li> <code>PENDING</code> - Amazon Machine Learning (Amazon ML) submitted a
            request to evaluate an <code>MLModel</code>.</li> <li> <code>INPROGRESS</code> - The
            evaluation is underway.</li> <li> <code>FAILED</code> - The request to evaluate an
            <code>MLModel</code> did not run to completion. It is not usable.</li> <li> <code>COMPLETED</code>
            - The evaluation process completed successfully.</li> <li> <code>DELETED</code> -
            The <code>Evaluation</code> is marked as deleted. It is not usable.</li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.GetBatchPredictionRequest">
            <summary>
            Container for the parameters to the GetBatchPrediction operation.
            Returns a <code>BatchPrediction</code> that includes detailed metadata, status, and
            data file information for a <code>Batch Prediction</code> request.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionRequest.BatchPredictionId">
            <summary>
            Gets and sets the property BatchPredictionId. 
            <para>
            An ID assigned to the <code>BatchPrediction</code> at creation.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.GetBatchPredictionResponse">
            <summary>
            Represents the output of a <a>GetBatchPrediction</a> operation and describes a <code>BatchPrediction</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionResponse.BatchPredictionDataSourceId">
            <summary>
            Gets and sets the property BatchPredictionDataSourceId. 
            <para>
            The ID of the <code>DataSource</code> that was used to create the <code>BatchPrediction</code>.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionResponse.BatchPredictionId">
            <summary>
            Gets and sets the property BatchPredictionId. 
            <para>
            An ID assigned to the <code>BatchPrediction</code> at creation. This value should
            be identical to the value of the <code>BatchPredictionID</code> in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time when the <code>BatchPrediction</code> was created. The time is expressed
            in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionResponse.CreatedByIamUser">
            <summary>
            Gets and sets the property CreatedByIamUser. 
            <para>
            The AWS user account that invoked the <code>BatchPrediction</code>. The account type
            can be either an AWS root account or an AWS Identity and Access Management (IAM) user
            account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionResponse.InputDataLocationS3">
            <summary>
            Gets and sets the property InputDataLocationS3. 
            <para>
            The location of the data file or directory in Amazon Simple Storage Service (Amazon
            S3).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionResponse.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            The time of the most recent edit to <code>BatchPrediction</code>. The time is expressed
            in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionResponse.LogUri">
            <summary>
            Gets and sets the property LogUri. 
            <para>
            A link to the file that contains logs of the <a>CreateBatchPrediction</a> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionResponse.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A description of the most recent details about processing the batch prediction request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionResponse.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The ID of the <code>MLModel</code> that generated predictions for the <code>BatchPrediction</code>
            request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A user-supplied name or description of the <code>BatchPrediction</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionResponse.OutputUri">
            <summary>
            Gets and sets the property OutputUri. 
            <para>
            The location of an Amazon S3 bucket or directory to receive the operation results.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetBatchPredictionResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the <code>BatchPrediction</code>, which can be one of the following
            values:
            </para>
             <ul> <li> <code>PENDING</code> - Amazon Machine Learning (Amazon ML) submitted a
            request to generate batch predictions.</li> <li> <code>INPROGRESS</code> - The batch
            predictions are in progress.</li> <li> <code>FAILED</code> - The request to perform
            a batch prediction did not run to completion. It is not usable.</li> <li> <code>COMPLETED</code>
            - The batch prediction process completed successfully.</li> <li> <code>DELETED</code>
            - The <code>BatchPrediction</code> is marked as deleted. It is not usable.</li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.GetDataSourceRequest">
            <summary>
            Container for the parameters to the GetDataSource operation.
            Returns a <code>DataSource</code> that includes metadata and data file information,
            as well as the current status of the <code>DataSource</code>.
            
             
            <para>
            <code>GetDataSource</code> provides results in normal or verbose format. The verbose
            format adds the schema description and the list of files pointed to by the DataSource
            to the normal format.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceRequest.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            The ID assigned to the <code>DataSource</code> at creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceRequest.Verbose">
            <summary>
            Gets and sets the property Verbose. 
            <para>
            Specifies whether the <code>GetDataSource</code> operation should return <code>DataSourceSchema</code>.
            </para>
             
            <para>
            If true, <code>DataSourceSchema</code> is returned.
            </para>
             
            <para>
            If false, <code>DataSourceSchema</code> is not returned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.GetDataSourceResponse">
            <summary>
            Represents the output of a <a>GetDataSource</a> operation and describes a <code>DataSource</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.ComputeStatistics">
            <summary>
            Gets and sets the property ComputeStatistics. 
            <para>
             The parameter is <code>true</code> if statistics need to be generated from the observation
            data. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time that the <code>DataSource</code> was created. The time is expressed in epoch
            time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.CreatedByIamUser">
            <summary>
            Gets and sets the property CreatedByIamUser. 
            <para>
            The AWS user account from which the <code>DataSource</code> was created. The account
            type can be either an AWS root account or an AWS Identity and Access Management (IAM)
            user account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.DataLocationS3">
            <summary>
            Gets and sets the property DataLocationS3. 
            <para>
            The location of the data file or directory in Amazon Simple Storage Service (Amazon
            S3).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.DataRearrangement">
            <summary>
            Gets and sets the property DataRearrangement. 
            <para>
            A JSON string that captures the splitting rearrangement requirement of the <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.DataSizeInBytes">
            <summary>
            Gets and sets the property DataSizeInBytes. 
            <para>
            The total size of observations in the data files.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            The ID assigned to the <code>DataSource</code> at creation. This value should be identical
            to the value of the <code>DataSourceId</code> in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.DataSourceSchema">
            <summary>
            Gets and sets the property DataSourceSchema. 
            <para>
            The schema used by all of the data files of this <code>DataSource</code>.
            </para>
             <note><title>Note</title> 
            <para>
            This parameter is provided as part of the verbose format.
            </para>
            </note>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            The time of the most recent edit to the <code>DataSource</code>. The time is expressed
            in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.LogUri">
            <summary>
            Gets and sets the property LogUri. 
            <para>
            A link to the file containining logs of either create <code>DataSource</code> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The description of the most recent details about creating the <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A user-supplied name or description of the <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.NumberOfFiles">
            <summary>
            Gets and sets the property NumberOfFiles. 
            <para>
            The number of data files referenced by the <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.RDSMetadata">
            <summary>
            Gets and sets the property RDSMetadata.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.RedshiftMetadata">
            <summary>
            Gets and sets the property RedshiftMetadata.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.RoleARN">
            <summary>
            Gets and sets the property RoleARN.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetDataSourceResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the <code>DataSource</code>. This element can have one of the
            following values:
            </para>
             <ul> <li> <code>PENDING</code> - Amazon Machine Language (Amazon ML) submitted a
            request to create a <code>DataSource</code>.</li> <li> <code>INPROGRESS</code> - The
            creation process is underway.</li> <li> <code>FAILED</code> - The request to create
            a <code>DataSource</code> did not run to completion. It is not usable.</li> <li> <code>COMPLETED</code>
            - The creation process completed successfully.</li> <li> <code>DELETED</code> - The
            <code>DataSource</code> is marked as deleted. It is not usable.</li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.GetEvaluationRequest">
            <summary>
            Container for the parameters to the GetEvaluation operation.
            Returns an <code>Evaluation</code> that includes metadata as well as the current status
            of the <code>Evaluation</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationRequest.EvaluationId">
            <summary>
            Gets and sets the property EvaluationId. 
            <para>
            The ID of the <code>Evaluation</code> to retrieve. The evaluation of each <code>MLModel</code>
            is recorded and cataloged. The ID provides the means to access the information. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.GetEvaluationResponse">
            <summary>
            Represents the output of a <a>GetEvaluation</a> operation and describes an <code>Evaluation</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time that the <code>Evaluation</code> was created. The time is expressed in epoch
            time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationResponse.CreatedByIamUser">
            <summary>
            Gets and sets the property CreatedByIamUser. 
            <para>
            The AWS user account that invoked the evaluation. The account type can be either an
            AWS root account or an AWS Identity and Access Management (IAM) user account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationResponse.EvaluationDataSourceId">
            <summary>
            Gets and sets the property EvaluationDataSourceId. 
            <para>
            The <code>DataSource</code> used for this evaluation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationResponse.EvaluationId">
            <summary>
            Gets and sets the property EvaluationId. 
            <para>
            The evaluation ID which is same as the <code>EvaluationId</code> in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationResponse.InputDataLocationS3">
            <summary>
            Gets and sets the property InputDataLocationS3. 
            <para>
            The location of the data file or directory in Amazon Simple Storage Service (Amazon
            S3).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationResponse.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            The time of the most recent edit to the <code>BatchPrediction</code>. The time is
            expressed in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationResponse.LogUri">
            <summary>
            Gets and sets the property LogUri. 
            <para>
            A link to the file that contains logs of the <a>CreateEvaluation</a> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationResponse.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A description of the most recent details about evaluating the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationResponse.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The ID of the <code>MLModel</code> that was the focus of the evaluation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A user-supplied name or description of the <code>Evaluation</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationResponse.PerformanceMetrics">
            <summary>
            Gets and sets the property PerformanceMetrics. 
            <para>
            Measurements of how well the <code>MLModel</code> performed using observations referenced
            by the <code>DataSource</code>. One of the following metric is returned based on the
            type of the <code>MLModel</code>: 
            </para>
             <ul> <li> 
            <para>
            BinaryAUC: A binary <code>MLModel</code> uses the Area Under the Curve (AUC) technique
            to measure performance. 
            </para>
             </li> <li> 
            <para>
            RegressionRMSE: A regression <code>MLModel</code> uses the Root Mean Square Error
            (RMSE) technique to measure performance. RMSE measures the difference between predicted
            and actual values for a single variable.
            </para>
             </li> <li> 
            <para>
            MulticlassAvgFScore: A multiclass <code>MLModel</code> uses the F1 score technique
            to measure performance. 
            </para>
             </li> </ul> 
            <para>
             For more information about performance metrics, please see the <a href="http://docs.aws.amazon.com/machine-learning/latest/dg">Amazon
            Machine Learning Developer Guide</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetEvaluationResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the evaluation. This element can have one of the following values:
            </para>
             <ul> <li> <code>PENDING</code> - Amazon Machine Language (Amazon ML) submitted a
            request to evaluate an <code>MLModel</code>.</li> <li> <code>INPROGRESS</code> - The
            evaluation is underway.</li> <li> <code>FAILED</code> - The request to evaluate an
            <code>MLModel</code> did not run to completion. It is not usable.</li> <li> <code>COMPLETED</code>
            - The evaluation process completed successfully.</li> <li> <code>DELETED</code> -
            The <code>Evaluation</code> is marked as deleted. It is not usable.</li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.GetMLModelRequest">
            <summary>
            Container for the parameters to the GetMLModel operation.
            Returns an <code>MLModel</code> that includes detailed metadata, and data source information
            as well as the current status of the <code>MLModel</code>.
            
             
            <para>
            <code>GetMLModel</code> provides results in normal or verbose format. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelRequest.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The ID assigned to the <code>MLModel</code> at creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelRequest.Verbose">
            <summary>
            Gets and sets the property Verbose. 
            <para>
            Specifies whether the <code>GetMLModel</code> operation should return <code>Recipe</code>.
            </para>
             
            <para>
            If true, <code>Recipe</code> is returned.
            </para>
             
            <para>
            If false, <code>Recipe</code> is not returned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.GetMLModelResponse">
            <summary>
            Represents the output of a <a>GetMLModel</a> operation, and provides detailed information
            about a <code>MLModel</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time that the <code>MLModel</code> was created. The time is expressed in epoch
            time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.CreatedByIamUser">
            <summary>
            Gets and sets the property CreatedByIamUser. 
            <para>
            The AWS user account from which the <code>MLModel</code> was created. The account
            type can be either an AWS root account or an AWS Identity and Access Management (IAM)
            user account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.EndpointInfo">
            <summary>
            Gets and sets the property EndpointInfo. 
            <para>
            The current endpoint of the <code>MLModel</code>
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.InputDataLocationS3">
            <summary>
            Gets and sets the property InputDataLocationS3. 
            <para>
            The location of the data file or directory in Amazon Simple Storage Service (Amazon
            S3).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            The time of the most recent edit to the <code>MLModel</code>. The time is expressed
            in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.LogUri">
            <summary>
            Gets and sets the property LogUri. 
            <para>
            A link to the file that contains logs of the <code>CreateMLModel</code> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            Description of the most recent details about accessing the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The MLModel ID which is same as the <code>MLModelId</code> in the request.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.MLModelType">
            <summary>
            Gets and sets the property MLModelType. 
            <para>
            Identifies the <code>MLModel</code> category. The following are the available types:
            
            </para>
             <ul> <li>REGRESSION -- Produces a numeric result. For example, "What listing price
            should a house have?"</li> <li>BINARY -- Produces one of two possible results. For
            example, "Is this an e-commerce website?"</li> <li>MULTICLASS -- Produces more than
            two possible results. For example, "Is this a HIGH, LOW or MEDIUM risk trade?"</li>
            </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A user-supplied name or description of the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.Recipe">
            <summary>
            Gets and sets the property Recipe. 
            <para>
            The recipe to use when training the <code>MLModel</code>. The <code>Recipe</code>
            provides detailed information about the observation data to use during training, as
            well as manipulations to perform on the observation data during training.
            </para>
             <note><title>Note</title> 
            <para>
            This parameter is provided as part of the verbose format.
            </para>
            </note>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.Schema">
            <summary>
            Gets and sets the property Schema. 
            <para>
            The schema used by all of the data files referenced by the <code>DataSource</code>.
            </para>
             <note><title>Note</title> 
            <para>
            This parameter is provided as part of the verbose format.
            </para>
            </note>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.ScoreThreshold">
            <summary>
            Gets and sets the property ScoreThreshold. 
            <para>
            The scoring threshold is used in binary classification <code>MLModel</code>s, and
            marks the boundary between a positive prediction and a negative prediction.
            </para>
             
            <para>
            Output values greater than or equal to the threshold receive a positive result from
            the MLModel, such as <code>true</code>. Output values less than the threshold receive
            a negative response from the MLModel, such as <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.ScoreThresholdLastUpdatedAt">
            <summary>
            Gets and sets the property ScoreThresholdLastUpdatedAt. 
            <para>
            The time of the most recent edit to the <code>ScoreThreshold</code>. The time is expressed
            in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.SizeInBytes">
            <summary>
            Gets and sets the property SizeInBytes.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of the <code>MLModel</code>. This element can have one of the following
            values:
            </para>
             <ul> <li> <code>PENDING</code> - Amazon Machine Learning (Amazon ML) submitted a
            request to describe a <code>MLModel</code>.</li> <li> <code>INPROGRESS</code> - The
            request is processing.</li> <li> <code>FAILED</code> - The request did not run to
            completion. It is not usable.</li> <li> <code>COMPLETED</code> - The request completed
            successfully.</li> <li> <code>DELETED</code> - The <code>MLModel</code> is marked
            as deleted. It is not usable.</li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.TrainingDataSourceId">
            <summary>
            Gets and sets the property TrainingDataSourceId. 
            <para>
            The ID of the training <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.GetMLModelResponse.TrainingParameters">
            <summary>
            Gets and sets the property TrainingParameters. 
            <para>
            A list of the training parameters in the <code>MLModel</code>. The list is implemented
            as a map of key/value pairs.
            </para>
             
            <para>
            The following is the current set of training parameters: 
            </para>
             <ul> <li> 
            <para>
            <code>sgd.l1RegularizationAmount</code> - Coefficient regularization L1 norm. It controls
            overfitting the data by penalizing large coefficients. This tends to drive coefficients
            to zero, resulting in a sparse feature set. If you use this parameter, specify a small
            value, such as 1.0E-04 or 1.0E-08.
            </para>
             
            <para>
            The value is a double that ranges from 0 to MAX_DOUBLE. The default is not to use
            L1 normalization. The parameter cannot be used when <code>L2</code> is specified.
            Use this parameter sparingly.
            </para>
             </li> <li> 
            <para>
            <code>sgd.l2RegularizationAmount</code> - Coefficient regularization L2 norm. It controls
            overfitting the data by penalizing large coefficients. This tends to drive coefficients
            to small, nonzero values. If you use this parameter, specify a small value, such as
            1.0E-04 or 1.0E-08.
            </para>
             
            <para>
            The value is a double that ranges from 0 to MAX_DOUBLE. The default is not to use
            L2 normalization. This parameter cannot be used when <code>L1</code> is specified.
            Use this parameter sparingly.
            </para>
             </li> <li>
            <para>
            <code>sgd.maxPasses</code> - The number of times that the training process traverses
            the observations to build the <code>MLModel</code>. The value is an integer that ranges
            from 1 to 10000. The default value is 10. 
            </para>
            </li> <li> 
            <para>
            <code>sgd.maxMLModelSizeInBytes</code> - The maximum allowed size of the model. Depending
            on the input data, the model size might affect performance. 
            </para>
             
            <para>
             The value is an integer that ranges from 100000 to 2147483648. The default value
            is 33554432. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            <summary>
             MachineLearning exception
             </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Model.IdempotentParameterMismatchException.#ctor(System.String)">
            <summary>
            Constructs a new IdempotentParameterMismatchException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.IdempotentParameterMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.IdempotentParameterMismatchException.#ctor(System.Exception)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.IdempotentParameterMismatchException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.IdempotentParameterMismatchException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotentParameterMismatchException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.MachineLearning.Model.InternalServerException">
            <summary>
             MachineLearning exception
             </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Model.InternalServerException.#ctor(System.String)">
            <summary>
            Constructs a new InternalServerException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.InternalServerException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.InternalServerException.#ctor(System.Exception)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.InternalServerException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.InternalServerException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InternalServerException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.MachineLearning.Model.InvalidInputException">
            <summary>
             MachineLearning exception
             </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Model.InvalidInputException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidInputException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.InvalidInputException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidInputException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.InvalidInputException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidInputException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.InvalidInputException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidInputException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.InvalidInputException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidInputException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.MachineLearning.Model.LimitExceededException">
            <summary>
             MachineLearning exception
             </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.MachineLearning.Model.MLModel">
            <summary>
            Represents the output of a <a>GetMLModel</a> operation. 
            
             
            <para>
            The content consists of the detailed metadata and the current status of the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.Algorithm">
            <summary>
            Gets and sets the property Algorithm. 
            <para>
            The algorithm used to train the <code>MLModel</code>. The following algorithm is supported:
            </para>
             <ul> <li>SGD -- Stochastic gradient descent. The goal of SGD is to minimize the gradient
            of the loss function. </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time that the <code>MLModel</code> was created. The time is expressed in epoch
            time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.CreatedByIamUser">
            <summary>
            Gets and sets the property CreatedByIamUser. 
            <para>
            The AWS user account from which the <code>MLModel</code> was created. The account
            type can be either an AWS root account or an AWS Identity and Access Management (IAM)
            user account.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.EndpointInfo">
            <summary>
            Gets and sets the property EndpointInfo. 
            <para>
            The current endpoint of the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.InputDataLocationS3">
            <summary>
            Gets and sets the property InputDataLocationS3. 
            <para>
            The location of the data file or directory in Amazon Simple Storage Service (Amazon
            S3).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.LastUpdatedAt">
            <summary>
            Gets and sets the property LastUpdatedAt. 
            <para>
            The time of the most recent edit to the <code>MLModel</code>. The time is expressed
            in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A description of the most recent details about accessing the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The ID assigned to the <code>MLModel</code> at creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.MLModelType">
            <summary>
            Gets and sets the property MLModelType. 
            <para>
            Identifies the <code>MLModel</code> category. The following are the available types:
            </para>
             <ul> <li>REGRESSION - Produces a numeric result. For example, "What listing price
            should a house have?".</li> <li>BINARY - Produces one of two possible results. For
            example, "Is this a child-friendly web site?".</li> <li>MULTICLASS - Produces more
            than two possible results. For example, "Is this a HIGH, LOW or MEDIUM risk trade?".</li>
            </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A user-supplied name or description of the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.ScoreThreshold">
            <summary>
            Gets and sets the property ScoreThreshold.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.ScoreThresholdLastUpdatedAt">
            <summary>
            Gets and sets the property ScoreThresholdLastUpdatedAt. 
            <para>
            The time of the most recent edit to the <code>ScoreThreshold</code>. The time is expressed
            in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.SizeInBytes">
            <summary>
            Gets and sets the property SizeInBytes.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The current status of an <code>MLModel</code>. This element can have one of the following
            values: 
            </para>
             <ul> <li>PENDING - Amazon Machine Learning (Amazon ML) submitted a request to create
            an <code>MLModel</code>.</li> <li>INPROGRESS - The creation process is underway.</li>
            <li>FAILED - The request to create an <code>MLModel</code> did not run to completion.
            It is not usable.</li> <li>COMPLETED - The creation process completed successfully.</li>
            <li>DELETED - The <code>MLModel</code> is marked as deleted. It is not usable.</li>
            </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.TrainingDataSourceId">
            <summary>
            Gets and sets the property TrainingDataSourceId. 
            <para>
            The ID of the training <code>DataSource</code>. The <a>CreateMLModel</a> operation
            uses the <code>TrainingDataSourceId</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.MLModel.TrainingParameters">
            <summary>
            Gets and sets the property TrainingParameters. 
            <para>
            A list of the training parameters in the <code>MLModel</code>. The list is implemented
            as a map of key/value pairs.
            </para>
             
            <para>
            The following is the current set of training parameters: 
            </para>
             <ul> <li> 
            <para>
            <code>sgd.l1RegularizationAmount</code> - Coefficient regularization L1 norm. It controls
            overfitting the data by penalizing large coefficients. This tends to drive coefficients
            to zero, resulting in a sparse feature set. If you use this parameter, specify a small
            value, such as 1.0E-04 or 1.0E-08.
            </para>
             
            <para>
            The value is a double that ranges from 0 to MAX_DOUBLE. The default is not to use
            L1 normalization. The parameter cannot be used when <code>L2</code> is specified.
            Use this parameter sparingly.
            </para>
             </li> <li> 
            <para>
            <code>sgd.l2RegularizationAmount</code> - Coefficient regularization L2 norm. It controls
            overfitting the data by penalizing large coefficients. This tends to drive coefficients
            to small, nonzero values. If you use this parameter, specify a small value, such as
            1.0E-04 or 1.0E-08.
            </para>
             
            <para>
            The valus is a double that ranges from 0 to MAX_DOUBLE. The default is not to use
            L2 normalization. This cannot be used when <code>L1</code> is specified. Use this
            parameter sparingly.
            </para>
             </li> <li>
            <para>
            <code>sgd.maxPasses</code> - Number of times that the training process traverses the
            observations to build the <code>MLModel</code>. The value is an integer that ranges
            from 1 to 10000. The default value is 10. 
            </para>
            </li> <li> 
            <para>
            <code>sgd.maxMLModelSizeInBytes</code> - Maximum allowed size of the model. Depending
            on the input data, the model size might affect performance. 
            </para>
             
            <para>
             The value is an integer that ranges from 100000 to 2147483648. The default value
            is 33554432. 
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.PerformanceMetrics">
            <summary>
            Measurements of how well the <code>MLModel</code> performed on known observations.
            One of the following metrics is returned, based on the type of the <code>MLModel</code>:
            
            
             <ul> <li> 
            <para>
            BinaryAUC: The binary <code>MLModel</code> uses the Area Under the Curve (AUC) technique
            to measure performance. 
            </para>
             </li> <li> 
            <para>
            RegressionRMSE: The regression <code>MLModel</code> uses the Root Mean Square Error
            (RMSE) technique to measure performance. RMSE measures the difference between predicted
            and actual values for a single variable.
            </para>
             </li> <li> 
            <para>
            MulticlassAvgFScore: The multiclass <code>MLModel</code> uses the F1 score technique
            to measure performance. 
            </para>
             </li> </ul> 
            <para>
             For more information about performance metrics, please see the <a href="http://docs.aws.amazon.com/machine-learning/latest/dg">Amazon
            Machine Learning Developer Guide</a>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.PerformanceMetrics.Properties">
            <summary>
            Gets and sets the property Properties.
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Prediction">
            <summary>
            The output from a <code>Predict</code> operation: 
            
             <ul> <li> 
            <para>
             <code>Details</code> - Contains the following attributes: DetailsAttributes.PREDICTIVE_MODEL_TYPE
            - REGRESSION | BINARY | MULTICLASS DetailsAttributes.ALGORITHM - SGD 
            </para>
             </li> <li> 
            <para>
             <code>PredictedLabel</code> - Present for either a BINARY or MULTICLASS <code>MLModel</code>
            request. 
            </para>
             </li> <li> 
            <para>
             <code>PredictedScores</code> - Contains the raw classification score corresponding
            to each label. 
            </para>
             </li> <li> 
            <para>
             <code>PredictedValue</code> - Present for a REGRESSION <code>MLModel</code> request.
            
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Prediction.Details">
            <summary>
            Gets and sets the property Details.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Prediction.PredictedLabel">
            <summary>
            Gets and sets the property PredictedLabel. The prediction label for either a BINARY
            or MULTICLASS <code>MLModel</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Prediction.PredictedScores">
            <summary>
            Gets and sets the property PredictedScores.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Prediction.PredictedValue">
            <summary>
            Gets and sets the property PredictedValue. The prediction value for REGRESSION <code>MLModel</code>.
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.PredictorNotMountedException">
            <summary>
             MachineLearning exception
             </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Model.PredictorNotMountedException.#ctor(System.String)">
            <summary>
            Constructs a new PredictorNotMountedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.PredictorNotMountedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of PredictorNotMountedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.PredictorNotMountedException.#ctor(System.Exception)">
            <summary>
            Construct instance of PredictorNotMountedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.PredictorNotMountedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PredictorNotMountedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.PredictorNotMountedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of PredictorNotMountedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.MachineLearning.Model.PredictRequest">
            <summary>
            Container for the parameters to the Predict operation.
            Generates a prediction for the observation using the specified <code>ML Model</code>.
            
             <note><title>Note</title> 
            <para>
            Not all response parameters will be populated. Whether a response parameter is populated
            depends on the type of model requested.
            </para>
            </note>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.PredictRequest.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            A unique identifier of the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.PredictRequest.PredictEndpoint">
            <summary>
            Gets and sets the property PredictEndpoint.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.PredictRequest.Record">
            <summary>
            Gets and sets the property Record.
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.PredictResponse">
            <summary>
            This is the response object from the Predict operation.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.PredictResponse.Prediction">
            <summary>
            Gets and sets the property Prediction.
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.RDSDatabase">
            <summary>
            The database details of an Amazon RDS database.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDatabase.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDatabase.InstanceIdentifier">
            <summary>
            Gets and sets the property InstanceIdentifier. 
            <para>
            The ID of an RDS DB instance.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.RDSDatabaseCredentials">
            <summary>
            The database credentials to connect to a database on an RDS DB instance.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDatabaseCredentials.Password">
            <summary>
            Gets and sets the property Password.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDatabaseCredentials.Username">
            <summary>
            Gets and sets the property Username.
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.RDSDataSpec">
            <summary>
            The data specification of an Amazon Relational Database Service (Amazon RDS) <code>DataSource</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDataSpec.DatabaseCredentials">
            <summary>
            Gets and sets the property DatabaseCredentials. 
            <para>
            The AWS Identity and Access Management (IAM) credentials that are used connect to
            the Amazon RDS database.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDataSpec.DatabaseInformation">
            <summary>
            Gets and sets the property DatabaseInformation. 
            <para>
            Describes the <code>DatabaseName</code> and <code>InstanceIdentifier</code> of an
            an Amazon RDS database.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDataSpec.DataRearrangement">
            <summary>
            Gets and sets the property DataRearrangement. 
            <para>
            DataRearrangement - A JSON string that represents the splitting requirement of a <code>DataSource</code>.
            
            </para>
              
            <para>
             Sample - <code> "{\"splitting\":{\"percentBegin\":10,\"percentEnd\":60}}"</code>
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDataSpec.DataSchema">
            <summary>
            Gets and sets the property DataSchema. 
            <para>
            A JSON string that represents the schema for an Amazon RDS <code>DataSource</code>.
            The <code>DataSchema</code> defines the structure of the observation data in the data
            file(s) referenced in the <code>DataSource</code>.
            </para>
             
            <para>
            A <code>DataSchema</code> is not required if you specify a <code>DataSchemaUri</code>
            </para>
             
            <para>
            Define your <code>DataSchema</code> as a series of key-value pairs. <code>attributes</code>
            and <code>excludedVariableNames</code> have an array of key-value pairs for their
            value. Use the following format to define your <code>DataSchema</code>.
            </para>
             
            <para>
            { "version": "1.0",
            </para>
             
            <para>
             "recordAnnotationFieldName": "F1",
            </para>
             
            <para>
             "recordWeightFieldName": "F2",
            </para>
             
            <para>
             "targetFieldName": "F3",
            </para>
             
            <para>
             "dataFormat": "CSV",
            </para>
             
            <para>
             "dataFileContainsHeader": true,
            </para>
             
            <para>
             "attributes": [
            </para>
             
            <para>
             { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2", "fieldType": "NUMERIC"
            }, { "fieldName": "F3", "fieldType": "CATEGORICAL" }, { "fieldName": "F4", "fieldType":
            "NUMERIC" }, { "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
            "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType": "WEIGHTED_INT_SEQUENCE" },
            { "fieldName": "F8", "fieldType": "WEIGHTED_STRING_SEQUENCE" } ],
            </para>
             
            <para>
             "excludedVariableNames": [ "F6" ] } 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDataSpec.DataSchemaUri">
            <summary>
            Gets and sets the property DataSchemaUri. 
            <para>
            The Amazon S3 location of the <code>DataSchema</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDataSpec.ResourceRole">
            <summary>
            Gets and sets the property ResourceRole. 
            <para>
            The role (DataPipelineDefaultResourceRole) assumed by an Amazon Elastic Compute Cloud
            (Amazon EC2) instance to carry out the copy operation from Amazon RDS to an Amazon
            S3 task. For more information, see <a href="http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html">Role
            templates</a> for data pipelines.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDataSpec.S3StagingLocation">
            <summary>
            Gets and sets the property S3StagingLocation. 
            <para>
            The Amazon S3 location for staging Amazon RDS data. The data retrieved from Amazon
            RDS using <code>SelectSqlQuery</code> is stored in this location.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDataSpec.SecurityGroupIds">
            <summary>
            Gets and sets the property SecurityGroupIds. 
            <para>
            The security group IDs to be used to access a VPC-based RDS DB instance. Ensure that
            there are appropriate ingress rules set up to allow access to the RDS DB instance.
            This attribute is used by Data Pipeline to carry out the copy operation from Amazon
            RDS to an Amazon S3 task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDataSpec.SelectSqlQuery">
            <summary>
            Gets and sets the property SelectSqlQuery. 
            <para>
            The query that is used to retrieve the observation data for the <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDataSpec.ServiceRole">
            <summary>
            Gets and sets the property ServiceRole. 
            <para>
            The role (DataPipelineDefaultRole) assumed by AWS Data Pipeline service to monitor
            the progress of the copy task from Amazon RDS to Amazon S3. For more information,
            see <a href="http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html">Role
            templates</a> for data pipelines.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSDataSpec.SubnetId">
            <summary>
            Gets and sets the property SubnetId. 
            <para>
            The subnet ID to be used to access a VPC-based RDS DB instance. This attribute is
            used by Data Pipeline to carry out the copy task from Amazon RDS to Amazon S3.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.RDSMetadata">
            <summary>
            The datasource details that are specific to Amazon RDS.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSMetadata.Database">
            <summary>
            Gets and sets the property Database. 
            <para>
            The database details required to connect to an Amazon RDS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSMetadata.DatabaseUserName">
            <summary>
            Gets and sets the property DatabaseUserName.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSMetadata.DataPipelineId">
            <summary>
            Gets and sets the property DataPipelineId. 
            <para>
            The ID of the Data Pipeline instance that is used to carry to copy data from Amazon
            RDS to Amazon S3. You can use the ID to find details about the instance in the Data
            Pipeline console.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSMetadata.ResourceRole">
            <summary>
            Gets and sets the property ResourceRole. 
            <para>
            The role (DataPipelineDefaultResourceRole) assumed by an Amazon EC2 instance to carry
            out the copy task from Amazon RDS to Amazon S3. For more information, see <a href="http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html">Role
            templates</a> for data pipelines.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSMetadata.SelectSqlQuery">
            <summary>
            Gets and sets the property SelectSqlQuery. 
            <para>
            The SQL query that is supplied during <a>CreateDataSourceFromRDS</a>. Returns only
            if <code>Verbose</code> is true in <code>GetDataSourceInput</code>. 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RDSMetadata.ServiceRole">
            <summary>
            Gets and sets the property ServiceRole. 
            <para>
            The role (DataPipelineDefaultRole) assumed by the Data Pipeline service to monitor
            the progress of the copy task from Amazon RDS to Amazon S3. For more information,
            see <a href="http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-iam-roles.html">Role
            templates</a> for data pipelines.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.RealtimeEndpointInfo">
            <summary>
            Describes the real-time endpoint information for an <code>MLModel</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RealtimeEndpointInfo.CreatedAt">
            <summary>
            Gets and sets the property CreatedAt. 
            <para>
            The time that the request to create the real-time endpoint for the <code>MLModel</code>
            was received. The time is expressed in epoch time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RealtimeEndpointInfo.EndpointStatus">
            <summary>
            Gets and sets the property EndpointStatus. 
            <para>
             The current status of the real-time endpoint for the <code>MLModel</code>. This element
            can have one of the following values: 
            </para>
             <ul> <li>NONE - Endpoint does not exist or was previously deleted.</li> <li>READY
            - Endpoint is ready to be used for real-time predictions.</li> <li>UPDATING - Updating/creating
            the endpoint. </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RealtimeEndpointInfo.EndpointUrl">
            <summary>
            Gets and sets the property EndpointUrl. 
            <para>
            The URI that specifies where to send real-time prediction requests for the <code>MLModel</code>.
            </para>
             <note><title>Note</title> 
            <para>
            The application must wait until the real-time endpoint is ready before using this
            URI.
            </para>
             </note>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RealtimeEndpointInfo.PeakRequestsPerSecond">
            <summary>
            Gets and sets the property PeakRequestsPerSecond. 
            <para>
             The maximum processing rate for the real-time endpoint for <code>MLModel</code>,
            measured in incoming requests per second.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.RedshiftDatabase">
            <summary>
            Describes the database details required to connect to an Amazon Redshift database.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftDatabase.ClusterIdentifier">
            <summary>
            Gets and sets the property ClusterIdentifier.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftDatabase.DatabaseName">
            <summary>
            Gets and sets the property DatabaseName.
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.RedshiftDatabaseCredentials">
            <summary>
            Describes the database credentials for connecting to a database on an Amazon Redshift
            cluster.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftDatabaseCredentials.Password">
            <summary>
            Gets and sets the property Password.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftDatabaseCredentials.Username">
            <summary>
            Gets and sets the property Username.
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.RedshiftDataSpec">
            <summary>
            Describes the data specification of an Amazon Redshift <code>DataSource</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftDataSpec.DatabaseCredentials">
            <summary>
            Gets and sets the property DatabaseCredentials. 
            <para>
            Describes AWS Identity and Access Management (IAM) credentials that are used connect
            to the Amazon Redshift database.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftDataSpec.DatabaseInformation">
            <summary>
            Gets and sets the property DatabaseInformation. 
            <para>
            Describes the <code>DatabaseName</code> and <code>ClusterIdentifier</code> for an
            Amazon Redshift <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftDataSpec.DataRearrangement">
            <summary>
            Gets and sets the property DataRearrangement. 
            <para>
            Describes the splitting specifications for a <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftDataSpec.DataSchema">
            <summary>
            Gets and sets the property DataSchema. 
            <para>
            A JSON string that represents the schema for an Amazon Redshift <code>DataSource</code>.
            The <code>DataSchema</code> defines the structure of the observation data in the data
            file(s) referenced in the <code>DataSource</code>.
            </para>
             
            <para>
            A <code>DataSchema</code> is not required if you specify a <code>DataSchemaUri</code>.
            </para>
             
            <para>
            Define your <code>DataSchema</code> as a series of key-value pairs. <code>attributes</code>
            and <code>excludedVariableNames</code> have an array of key-value pairs for their
            value. Use the following format to define your <code>DataSchema</code>.
            </para>
             
            <para>
            { "version": "1.0",
            </para>
             
            <para>
             "recordAnnotationFieldName": "F1",
            </para>
             
            <para>
             "recordWeightFieldName": "F2",
            </para>
             
            <para>
             "targetFieldName": "F3",
            </para>
             
            <para>
             "dataFormat": "CSV",
            </para>
             
            <para>
             "dataFileContainsHeader": true,
            </para>
             
            <para>
             "attributes": [
            </para>
             
            <para>
             { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2", "fieldType": "NUMERIC"
            }, { "fieldName": "F3", "fieldType": "CATEGORICAL" }, { "fieldName": "F4", "fieldType":
            "NUMERIC" }, { "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
            "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType": "WEIGHTED_INT_SEQUENCE" },
            { "fieldName": "F8", "fieldType": "WEIGHTED_STRING_SEQUENCE" } ],
            </para>
             
            <para>
             "excludedVariableNames": [ "F6" ] } 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftDataSpec.DataSchemaUri">
            <summary>
            Gets and sets the property DataSchemaUri. 
            <para>
            Describes the schema location for an Amazon Redshift <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftDataSpec.S3StagingLocation">
            <summary>
            Gets and sets the property S3StagingLocation. 
            <para>
            Describes an Amazon S3 location to store the result set of the <code>SelectSqlQuery</code>
            query.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftDataSpec.SelectSqlQuery">
            <summary>
            Gets and sets the property SelectSqlQuery. 
            <para>
            Describes the SQL Query to execute on an Amazon Redshift database for an Amazon Redshift
            <code>DataSource</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.RedshiftMetadata">
            <summary>
            Describes the <code>DataSource</code> details specific to Amazon Redshift.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftMetadata.DatabaseUserName">
            <summary>
            Gets and sets the property DatabaseUserName.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftMetadata.RedshiftDatabase">
            <summary>
            Gets and sets the property RedshiftDatabase.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.RedshiftMetadata.SelectSqlQuery">
            <summary>
            Gets and sets the property SelectSqlQuery. 
            <para>
             The SQL query that is specified during <a>CreateDataSourceFromRedshift</a>. Returns
            only if <code>Verbose</code> is true in GetDataSourceInput. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            <summary>
             MachineLearning exception
             </summary>
        </member>
        <member name="M:Amazon.MachineLearning.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.MachineLearning.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.MachineLearning.Model.S3DataSpec">
            <summary>
            Describes the data specification of a <code>DataSource</code>.
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.S3DataSpec.DataLocationS3">
            <summary>
            Gets and sets the property DataLocationS3. 
            <para>
            The location of the data file(s) used by a <code>DataSource</code>. The URI specifies
            a data file or an Amazon Simple Storage Service (Amazon S3) directory or bucket containing
            data files.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.S3DataSpec.DataRearrangement">
            <summary>
            Gets and sets the property DataRearrangement. 
            <para>
             Describes the splitting requirement of a <code>Datasource</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.S3DataSpec.DataSchema">
            <summary>
            Gets and sets the property DataSchema. 
            <para>
             A JSON string that represents the schema for an Amazon S3 <code>DataSource</code>.
            The <code>DataSchema</code> defines the structure of the observation data in the data
            file(s) referenced in the <code>DataSource</code>.
            </para>
             
            <para>
            Define your <code>DataSchema</code> as a series of key-value pairs. <code>attributes</code>
            and <code>excludedVariableNames</code> have an array of key-value pairs for their
            value. Use the following format to define your <code>DataSchema</code>.
            </para>
             
            <para>
            { "version": "1.0",
            </para>
             
            <para>
             "recordAnnotationFieldName": "F1",
            </para>
             
            <para>
             "recordWeightFieldName": "F2",
            </para>
             
            <para>
             "targetFieldName": "F3",
            </para>
             
            <para>
             "dataFormat": "CSV",
            </para>
             
            <para>
             "dataFileContainsHeader": true,
            </para>
             
            <para>
             "attributes": [
            </para>
             
            <para>
             { "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2", "fieldType": "NUMERIC"
            }, { "fieldName": "F3", "fieldType": "CATEGORICAL" }, { "fieldName": "F4", "fieldType":
            "NUMERIC" }, { "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6",
            "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType": "WEIGHTED_INT_SEQUENCE" },
            { "fieldName": "F8", "fieldType": "WEIGHTED_STRING_SEQUENCE" } ],
            </para>
             
            <para>
             "excludedVariableNames": [ "F6" ] } 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.S3DataSpec.DataSchemaLocationS3">
            <summary>
            Gets and sets the property DataSchemaLocationS3. 
            <para>
            Describes the schema Location in Amazon S3.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.UpdateBatchPredictionRequest">
            <summary>
            Container for the parameters to the UpdateBatchPrediction operation.
            Updates the <code>BatchPredictionName</code> of a <code>BatchPrediction</code>.
            
             
            <para>
            You can use the <a>GetBatchPrediction</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateBatchPredictionRequest.BatchPredictionId">
            <summary>
            Gets and sets the property BatchPredictionId. 
            <para>
            The ID assigned to the <code>BatchPrediction</code> during creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateBatchPredictionRequest.BatchPredictionName">
            <summary>
            Gets and sets the property BatchPredictionName. 
            <para>
            A new user-supplied name or description of the <code>BatchPrediction</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.UpdateBatchPredictionResponse">
            <summary>
            Represents the output of an <a>UpdateBatchPrediction</a> operation.
            
             
            <para>
            You can see the updated content by using the <a>GetBatchPrediction</a> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateBatchPredictionResponse.BatchPredictionId">
            <summary>
            Gets and sets the property BatchPredictionId. 
            <para>
            The ID assigned to the <code>BatchPrediction</code> during creation. This value should
            be identical to the value of the <code>BatchPredictionId</code> in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.UpdateDataSourceRequest">
            <summary>
            Container for the parameters to the UpdateDataSource operation.
            Updates the <code>DataSourceName</code> of a <code>DataSource</code>.
            
             
            <para>
            You can use the <a>GetDataSource</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateDataSourceRequest.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            The ID assigned to the <code>DataSource</code> during creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateDataSourceRequest.DataSourceName">
            <summary>
            Gets and sets the property DataSourceName. 
            <para>
            A new user-supplied name or description of the <code>DataSource</code> that will replace
            the current description. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.UpdateDataSourceResponse">
            <summary>
            Represents the output of an <a>UpdateDataSource</a> operation.
            
             
            <para>
            You can see the updated content by using the <a>GetBatchPrediction</a> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateDataSourceResponse.DataSourceId">
            <summary>
            Gets and sets the property DataSourceId. 
            <para>
            The ID assigned to the <code>DataSource</code> during creation. This value should
            be identical to the value of the <code>DataSourceID</code> in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.UpdateEvaluationRequest">
            <summary>
            Container for the parameters to the UpdateEvaluation operation.
            Updates the <code>EvaluationName</code> of an <code>Evaluation</code>.
            
             
            <para>
            You can use the <a>GetEvaluation</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateEvaluationRequest.EvaluationId">
            <summary>
            Gets and sets the property EvaluationId. 
            <para>
            The ID assigned to the <code>Evaluation</code> during creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateEvaluationRequest.EvaluationName">
            <summary>
            Gets and sets the property EvaluationName. 
            <para>
            A new user-supplied name or description of the <code>Evaluation</code> that will replace
            the current content. 
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.UpdateEvaluationResponse">
            <summary>
            Represents the output of an <a>UpdateEvaluation</a> operation.
            
             
            <para>
            You can see the updated content by using the <a>GetEvaluation</a> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateEvaluationResponse.EvaluationId">
            <summary>
            Gets and sets the property EvaluationId. 
            <para>
            The ID assigned to the <code>Evaluation</code> during creation. This value should
            be identical to the value of the <code>Evaluation</code> in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.UpdateMLModelRequest">
            <summary>
            Container for the parameters to the UpdateMLModel operation.
            Updates the <code>MLModelName</code> and the <code>ScoreThreshold</code> of an <code>MLModel</code>.
            
             
            <para>
            You can use the <a>GetMLModel</a> operation to view the contents of the updated data
            element.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateMLModelRequest.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The ID assigned to the <code>MLModel</code> during creation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateMLModelRequest.MLModelName">
            <summary>
            Gets and sets the property MLModelName. 
            <para>
            A user-supplied name or description of the <code>MLModel</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateMLModelRequest.ScoreThreshold">
            <summary>
            Gets and sets the property ScoreThreshold. 
            <para>
            The <code>ScoreThreshold</code> used in binary classification <code>MLModel</code>
            that marks the boundary between a positive prediction and a negative prediction.
            </para>
             
            <para>
            Output values greater than or equal to the <code>ScoreThreshold</code> receive a positive
            result from the <code>MLModel</code>, such as <code>true</code>. Output values less
            than the <code>ScoreThreshold</code> receive a negative response from the <code>MLModel</code>,
            such as <code>false</code>.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.UpdateMLModelResponse">
            <summary>
            Represents the output of an <a>UpdateMLModel</a> operation.
            
             
            <para>
            You can see the updated content by using the <a>GetMLModel</a> operation.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.MachineLearning.Model.UpdateMLModelResponse.MLModelId">
            <summary>
            Gets and sets the property MLModelId. 
            <para>
            The ID assigned to the <code>MLModel</code> during creation. This value should be
            identical to the value of the <code>MLModelID</code> in the request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.BatchPredictionUnmarshaller">
            <summary>
            Response Unmarshaller for BatchPrediction Object
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.BatchPredictionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MachineLearning#Model#BatchPrediction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.BatchPredictionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.BatchPredictionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateBatchPredictionRequestMarshaller">
            <summary>
            CreateBatchPrediction Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateBatchPredictionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateBatchPredictionRequestMarshaller.Marshall(Amazon.MachineLearning.Model.CreateBatchPredictionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateBatchPredictionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateBatchPrediction operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateBatchPredictionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateBatchPredictionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateBatchPredictionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRDSRequestMarshaller">
            <summary>
            CreateDataSourceFromRDS Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRDSRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRDSRequestMarshaller.Marshall(Amazon.MachineLearning.Model.CreateDataSourceFromRDSRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRDSResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDataSourceFromRDS operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRDSResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRDSResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRDSResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRedshiftRequestMarshaller">
            <summary>
            CreateDataSourceFromRedshift Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRedshiftRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRedshiftRequestMarshaller.Marshall(Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRedshiftResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDataSourceFromRedshift operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRedshiftResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRedshiftResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromRedshiftResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromS3RequestMarshaller">
            <summary>
            CreateDataSourceFromS3 Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromS3RequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromS3RequestMarshaller.Marshall(Amazon.MachineLearning.Model.CreateDataSourceFromS3Request)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromS3ResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDataSourceFromS3 operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromS3ResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromS3ResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateDataSourceFromS3ResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateEvaluationRequestMarshaller">
            <summary>
            CreateEvaluation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateEvaluationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateEvaluationRequestMarshaller.Marshall(Amazon.MachineLearning.Model.CreateEvaluationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateEvaluationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateEvaluation operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateEvaluationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateEvaluationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateEvaluationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateMLModelRequestMarshaller">
            <summary>
            CreateMLModel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateMLModelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateMLModelRequestMarshaller.Marshall(Amazon.MachineLearning.Model.CreateMLModelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateMLModelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateMLModel operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateMLModelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateMLModelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateMLModelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateRealtimeEndpointRequestMarshaller">
            <summary>
            CreateRealtimeEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateRealtimeEndpointRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateRealtimeEndpointRequestMarshaller.Marshall(Amazon.MachineLearning.Model.CreateRealtimeEndpointRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateRealtimeEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateRealtimeEndpoint operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateRealtimeEndpointResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateRealtimeEndpointResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.CreateRealtimeEndpointResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DataSourceUnmarshaller">
            <summary>
            Response Unmarshaller for DataSource Object
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DataSourceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MachineLearning#Model#DataSource,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DataSourceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DataSourceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteBatchPredictionRequestMarshaller">
            <summary>
            DeleteBatchPrediction Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteBatchPredictionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteBatchPredictionRequestMarshaller.Marshall(Amazon.MachineLearning.Model.DeleteBatchPredictionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteBatchPredictionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteBatchPrediction operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteBatchPredictionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteBatchPredictionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteBatchPredictionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteDataSourceRequestMarshaller">
            <summary>
            DeleteDataSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteDataSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteDataSourceRequestMarshaller.Marshall(Amazon.MachineLearning.Model.DeleteDataSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteDataSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDataSource operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteDataSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteDataSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteDataSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteEvaluationRequestMarshaller">
            <summary>
            DeleteEvaluation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteEvaluationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteEvaluationRequestMarshaller.Marshall(Amazon.MachineLearning.Model.DeleteEvaluationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteEvaluationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteEvaluation operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteEvaluationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteEvaluationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteEvaluationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteMLModelRequestMarshaller">
            <summary>
            DeleteMLModel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteMLModelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteMLModelRequestMarshaller.Marshall(Amazon.MachineLearning.Model.DeleteMLModelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteMLModelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMLModel operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteMLModelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteMLModelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteMLModelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteRealtimeEndpointRequestMarshaller">
            <summary>
            DeleteRealtimeEndpoint Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteRealtimeEndpointRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteRealtimeEndpointRequestMarshaller.Marshall(Amazon.MachineLearning.Model.DeleteRealtimeEndpointRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteRealtimeEndpointResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRealtimeEndpoint operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteRealtimeEndpointResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteRealtimeEndpointResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DeleteRealtimeEndpointResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeBatchPredictionsRequestMarshaller">
            <summary>
            DescribeBatchPredictions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeBatchPredictionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeBatchPredictionsRequestMarshaller.Marshall(Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeBatchPredictionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeBatchPredictions operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeBatchPredictionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeBatchPredictionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeBatchPredictionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeDataSourcesRequestMarshaller">
            <summary>
            DescribeDataSources Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeDataSourcesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeDataSourcesRequestMarshaller.Marshall(Amazon.MachineLearning.Model.DescribeDataSourcesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeDataSourcesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDataSources operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeDataSourcesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeDataSourcesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeDataSourcesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeEvaluationsRequestMarshaller">
            <summary>
            DescribeEvaluations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeEvaluationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeEvaluationsRequestMarshaller.Marshall(Amazon.MachineLearning.Model.DescribeEvaluationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeEvaluationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeEvaluations operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeEvaluationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeEvaluationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeEvaluationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeMLModelsRequestMarshaller">
            <summary>
            DescribeMLModels Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeMLModelsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeMLModelsRequestMarshaller.Marshall(Amazon.MachineLearning.Model.DescribeMLModelsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeMLModelsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeMLModels operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeMLModelsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeMLModelsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.DescribeMLModelsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.EvaluationUnmarshaller">
            <summary>
            Response Unmarshaller for Evaluation Object
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.EvaluationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MachineLearning#Model#Evaluation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.EvaluationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.EvaluationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetBatchPredictionRequestMarshaller">
            <summary>
            GetBatchPrediction Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetBatchPredictionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetBatchPredictionRequestMarshaller.Marshall(Amazon.MachineLearning.Model.GetBatchPredictionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetBatchPredictionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetBatchPrediction operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetBatchPredictionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetBatchPredictionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetBatchPredictionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetDataSourceRequestMarshaller">
            <summary>
            GetDataSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetDataSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetDataSourceRequestMarshaller.Marshall(Amazon.MachineLearning.Model.GetDataSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetDataSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDataSource operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetDataSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetDataSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetDataSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetEvaluationRequestMarshaller">
            <summary>
            GetEvaluation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetEvaluationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetEvaluationRequestMarshaller.Marshall(Amazon.MachineLearning.Model.GetEvaluationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetEvaluationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetEvaluation operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetEvaluationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetEvaluationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetEvaluationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetMLModelRequestMarshaller">
            <summary>
            GetMLModel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetMLModelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetMLModelRequestMarshaller.Marshall(Amazon.MachineLearning.Model.GetMLModelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetMLModelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetMLModel operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetMLModelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetMLModelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.GetMLModelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.MLModelUnmarshaller">
            <summary>
            Response Unmarshaller for MLModel Object
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.MLModelUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MachineLearning#Model#MLModel,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.MLModelUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.MLModelUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PerformanceMetricsUnmarshaller">
            <summary>
            Response Unmarshaller for PerformanceMetrics Object
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PerformanceMetricsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MachineLearning#Model#PerformanceMetrics,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PerformanceMetricsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PerformanceMetricsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PredictionUnmarshaller">
            <summary>
            Response Unmarshaller for Prediction Object
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PredictionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MachineLearning#Model#Prediction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PredictionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PredictionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PredictRequestMarshaller">
            <summary>
            Predict Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PredictRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PredictRequestMarshaller.Marshall(Amazon.MachineLearning.Model.PredictRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PredictResponseUnmarshaller">
            <summary>
            Response Unmarshaller for Predict operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PredictResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PredictResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.PredictResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDatabaseCredentialsMarshaller">
            <summary>
            RDSDatabaseCredentials Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDatabaseCredentialsMarshaller.Marshall(Amazon.MachineLearning.Model.RDSDatabaseCredentials,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDatabaseCredentialsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDatabaseMarshaller">
            <summary>
            RDSDatabase Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDatabaseMarshaller.Marshall(Amazon.MachineLearning.Model.RDSDatabase,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDatabaseMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDatabaseUnmarshaller">
            <summary>
            Response Unmarshaller for RDSDatabase Object
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDatabaseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MachineLearning#Model#RDSDatabase,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDatabaseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDatabaseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDataSpecMarshaller">
            <summary>
            RDSDataSpec Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDataSpecMarshaller.Marshall(Amazon.MachineLearning.Model.RDSDataSpec,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSDataSpecMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for RDSMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MachineLearning#Model#RDSMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RDSMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RealtimeEndpointInfoUnmarshaller">
            <summary>
            Response Unmarshaller for RealtimeEndpointInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RealtimeEndpointInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MachineLearning#Model#RealtimeEndpointInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RealtimeEndpointInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RealtimeEndpointInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDatabaseCredentialsMarshaller">
            <summary>
            RedshiftDatabaseCredentials Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDatabaseCredentialsMarshaller.Marshall(Amazon.MachineLearning.Model.RedshiftDatabaseCredentials,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDatabaseCredentialsMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDatabaseMarshaller">
            <summary>
            RedshiftDatabase Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDatabaseMarshaller.Marshall(Amazon.MachineLearning.Model.RedshiftDatabase,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDatabaseMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDatabaseUnmarshaller">
            <summary>
            Response Unmarshaller for RedshiftDatabase Object
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDatabaseUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MachineLearning#Model#RedshiftDatabase,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDatabaseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDatabaseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDataSpecMarshaller">
            <summary>
            RedshiftDataSpec Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDataSpecMarshaller.Marshall(Amazon.MachineLearning.Model.RedshiftDataSpec,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftDataSpecMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftMetadataUnmarshaller">
            <summary>
            Response Unmarshaller for RedshiftMetadata Object
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftMetadataUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#MachineLearning#Model#RedshiftMetadata,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftMetadataUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.RedshiftMetadataUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.S3DataSpecMarshaller">
            <summary>
            S3DataSpec Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.S3DataSpecMarshaller.Marshall(Amazon.MachineLearning.Model.S3DataSpec,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.MachineLearning.Model.Internal.MarshallTransformations.S3DataSpecMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateBatchPredictionRequestMarshaller">
            <summary>
            UpdateBatchPrediction Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateBatchPredictionRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateBatchPredictionRequestMarshaller.Marshall(Amazon.MachineLearning.Model.UpdateBatchPredictionRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateBatchPredictionResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateBatchPrediction operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateBatchPredictionResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateBatchPredictionResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateBatchPredictionResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateDataSourceRequestMarshaller">
            <summary>
            UpdateDataSource Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateDataSourceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateDataSourceRequestMarshaller.Marshall(Amazon.MachineLearning.Model.UpdateDataSourceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateDataSourceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateDataSource operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateDataSourceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateDataSourceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateDataSourceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateEvaluationRequestMarshaller">
            <summary>
            UpdateEvaluation Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateEvaluationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateEvaluationRequestMarshaller.Marshall(Amazon.MachineLearning.Model.UpdateEvaluationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateEvaluationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateEvaluation operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateEvaluationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateEvaluationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateEvaluationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateMLModelRequestMarshaller">
            <summary>
            UpdateMLModel Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateMLModelRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateMLModelRequestMarshaller.Marshall(Amazon.MachineLearning.Model.UpdateMLModelRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateMLModelResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateMLModel operation
            </summary>  
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateMLModelResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateMLModelResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.MachineLearning.Model.Internal.MarshallTransformations.UpdateMLModelResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.MachineLearning.IAmazonMachineLearning">
             <summary>
             Interface for accessing MachineLearning
            
             Definition of the public APIs exposed by Amazon Machine Learning
             </summary>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.CreateBatchPrediction(Amazon.MachineLearning.Model.CreateBatchPredictionRequest)">
            <summary>
            Generates predictions for a group of observations. The observations to process exist
            in one or more data files referenced by a <code>DataSource</code>. This operation
            creates a new <code>BatchPrediction</code>, and uses an <code>MLModel</code> and the
            data files referenced by the <code>DataSource</code> as information sources. 
            
             
            <para>
            <code>CreateBatchPrediction</code> is an asynchronous operation. In response to <code>CreateBatchPrediction</code>,
            Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>BatchPrediction</code>
            status to <code>PENDING</code>. After the <code>BatchPrediction</code> completes,
            Amazon ML sets the status to <code>COMPLETED</code>. 
            </para>
             
            <para>
            You can poll for status updates by using the <a>GetBatchPrediction</a> operation and
            checking the <code>Status</code> parameter of the result. After the <code>COMPLETED</code>
            status appears, the results are available in the location specified by the <code>OutputUri</code>
            parameter.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateBatchPrediction service method.</param>
            
            <returns>The response from the CreateBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            A second request to use or change an object was not allowed. This can result from
            retrying a request using a parameter that was not present in the original request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginCreateBatchPrediction(Amazon.MachineLearning.Model.CreateBatchPredictionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateBatchPrediction operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateBatchPrediction operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateBatchPrediction
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndCreateBatchPrediction(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateBatchPrediction operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateBatchPrediction.</param>
            
            <returns>Returns a  CreateBatchPredictionResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.CreateDataSourceFromRDS(Amazon.MachineLearning.Model.CreateDataSourceFromRDSRequest)">
            <summary>
            Creates a <code>DataSource</code> object from an <a href="http://aws.amazon.com/rds/">
            Amazon Relational Database Service</a> (Amazon RDS). A <code>DataSource</code> references
            data that can be used to perform <a>CreateMLModel</a>, <a>CreateEvaluation</a>, or
            <a>CreateBatchPrediction</a> operations.
            
             
            <para>
            <code>CreateDataSourceFromRDS</code> is an asynchronous operation. In response to
            <code>CreateDataSourceFromRDS</code>, Amazon Machine Learning (Amazon ML) immediately
            returns and sets the <code>DataSource</code> status to <code>PENDING</code>. After
            the <code>DataSource</code> is created and ready for use, Amazon ML sets the <code>Status</code>
            parameter to <code>COMPLETED</code>. <code>DataSource</code> in <code>COMPLETED</code>
            or <code>PENDING</code> status can only be used to perform <a>CreateMLModel</a>, <a>CreateEvaluation</a>,
            or <a>CreateBatchPrediction</a> operations. 
            </para>
             
            <para>
             If Amazon ML cannot accept the input source, it sets the <code>Status</code> parameter
            to <code>FAILED</code> and includes an error message in the <code>Message</code> attribute
            of the <a>GetDataSource</a> operation response. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataSourceFromRDS service method.</param>
            
            <returns>The response from the CreateDataSourceFromRDS service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            A second request to use or change an object was not allowed. This can result from
            retrying a request using a parameter that was not present in the original request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginCreateDataSourceFromRDS(Amazon.MachineLearning.Model.CreateDataSourceFromRDSRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateDataSourceFromRDS operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDataSourceFromRDS operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateDataSourceFromRDS
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndCreateDataSourceFromRDS(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateDataSourceFromRDS operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateDataSourceFromRDS.</param>
            
            <returns>Returns a  CreateDataSourceFromRDSResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.CreateDataSourceFromRedshift(Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftRequest)">
            <summary>
            Creates a <code>DataSource</code> from <a href="http://aws.amazon.com/redshift/">Amazon
            Redshift</a>. A <code>DataSource</code> references data that can be used to perform
            either <a>CreateMLModel</a>, <a>CreateEvaluation</a> or <a>CreateBatchPrediction</a>
            operations.
            
             
            <para>
            <code>CreateDataSourceFromRedshift</code> is an asynchronous operation. In response
            to <code>CreateDataSourceFromRedshift</code>, Amazon Machine Learning (Amazon ML)
            immediately returns and sets the <code>DataSource</code> status to <code>PENDING</code>.
            After the <code>DataSource</code> is created and ready for use, Amazon ML sets the
            <code>Status</code> parameter to <code>COMPLETED</code>. <code>DataSource</code> in
            <code>COMPLETED</code> or <code>PENDING</code> status can only be used to perform
            <a>CreateMLModel</a>, <a>CreateEvaluation</a>, or <a>CreateBatchPrediction</a> operations.
            
            </para>
             
            <para>
             If Amazon ML cannot accept the input source, it sets the <code>Status</code> parameter
            to <code>FAILED</code> and includes an error message in the <code>Message</code> attribute
            of the <a>GetDataSource</a> operation response. 
            </para>
             
            <para>
            The observations should exist in the database hosted on an Amazon Redshift cluster
            and should be specified by a <code>SelectSqlQuery</code>. Amazon ML executes <a href="http://docs.aws.amazon.com/redshift/latest/dg/t_Unloading_tables.html">
            Unload</a> command in Amazon Redshift to transfer the result set of <code>SelectSqlQuery</code>
            to <code>S3StagingLocation.</code> 
            </para>
             
            <para>
            After the <code>DataSource</code> is created, it's ready for use in evaluations and
            batch predictions. If you plan to use the <code>DataSource</code> to train an <code>MLModel</code>,
            the <code>DataSource</code> requires another item -- a recipe. A recipe describes
            the observation variables that participate in training an <code>MLModel</code>. A
            recipe describes how each input variable will be used in training. Will the variable
            be included or excluded from training? Will the variable be manipulated, for example,
            combined with another variable or split apart into word combinations? The recipe provides
            answers to these questions. For more information, see the Amazon Machine Learning
            Developer Guide.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataSourceFromRedshift service method.</param>
            
            <returns>The response from the CreateDataSourceFromRedshift service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            A second request to use or change an object was not allowed. This can result from
            retrying a request using a parameter that was not present in the original request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginCreateDataSourceFromRedshift(Amazon.MachineLearning.Model.CreateDataSourceFromRedshiftRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateDataSourceFromRedshift operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDataSourceFromRedshift operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateDataSourceFromRedshift
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndCreateDataSourceFromRedshift(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateDataSourceFromRedshift operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateDataSourceFromRedshift.</param>
            
            <returns>Returns a  CreateDataSourceFromRedshiftResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.CreateDataSourceFromS3(Amazon.MachineLearning.Model.CreateDataSourceFromS3Request)">
            <summary>
            Creates a <code>DataSource</code> object. A <code>DataSource</code> references data
            that can be used to perform <a>CreateMLModel</a>, <a>CreateEvaluation</a>, or <a>CreateBatchPrediction</a>
            operations.
            
             
            <para>
            <code>CreateDataSourceFromS3</code> is an asynchronous operation. In response to <code>CreateDataSourceFromS3</code>,
            Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>DataSource</code>
            status to <code>PENDING</code>. After the <code>DataSource</code> is created and ready
            for use, Amazon ML sets the <code>Status</code> parameter to <code>COMPLETED</code>.
            <code>DataSource</code> in <code>COMPLETED</code> or <code>PENDING</code> status can
            only be used to perform <a>CreateMLModel</a>, <a>CreateEvaluation</a> or <a>CreateBatchPrediction</a>
            operations. 
            </para>
             
            <para>
             If Amazon ML cannot accept the input source, it sets the <code>Status</code> parameter
            to <code>FAILED</code> and includes an error message in the <code>Message</code> attribute
            of the <a>GetDataSource</a> operation response. 
            </para>
             
            <para>
            The observation data used in a <code>DataSource</code> should be ready to use; that
            is, it should have a consistent structure, and missing data values should be kept
            to a minimum. The observation data must reside in one or more CSV files in an Amazon
            Simple Storage Service (Amazon S3) bucket, along with a schema that describes the
            data items by name and type. The same schema must be used for all of the data files
            referenced by the <code>DataSource</code>. 
            </para>
             
            <para>
            After the <code>DataSource</code> has been created, it's ready to use in evaluations
            and batch predictions. If you plan to use the <code>DataSource</code> to train an
            <code>MLModel</code>, the <code>DataSource</code> requires another item: a recipe.
            A recipe describes the observation variables that participate in training an <code>MLModel</code>.
            A recipe describes how each input variable will be used in training. Will the variable
            be included or excluded from training? Will the variable be manipulated, for example,
            combined with another variable, or split apart into word combinations? The recipe
            provides answers to these questions. For more information, see the <a href="http://docs.aws.amazon.com/machine-learning/latest/dg">Amazon
            Machine Learning Developer Guide</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDataSourceFromS3 service method.</param>
            
            <returns>The response from the CreateDataSourceFromS3 service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            A second request to use or change an object was not allowed. This can result from
            retrying a request using a parameter that was not present in the original request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginCreateDataSourceFromS3(Amazon.MachineLearning.Model.CreateDataSourceFromS3Request,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateDataSourceFromS3 operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDataSourceFromS3 operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateDataSourceFromS3
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndCreateDataSourceFromS3(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateDataSourceFromS3 operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateDataSourceFromS3.</param>
            
            <returns>Returns a  CreateDataSourceFromS3Result from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.CreateEvaluation(Amazon.MachineLearning.Model.CreateEvaluationRequest)">
            <summary>
            Creates a new <code>Evaluation</code> of an <code>MLModel</code>. An <code>MLModel</code>
            is evaluated on a set of observations associated to a <code>DataSource</code>. Like
            a <code>DataSource</code> for an <code>MLModel</code>, the <code>DataSource</code>
            for an <code>Evaluation</code> contains values for the Target Variable. The <code>Evaluation</code>
            compares the predicted result for each observation to the actual outcome and provides
            a summary so that you know how effective the <code>MLModel</code> functions on the
            test data. Evaluation generates a relevant performance metric such as BinaryAUC, RegressionRMSE
            or MulticlassAvgFScore based on the corresponding <code>MLModelType</code>: <code>BINARY</code>,
            <code>REGRESSION</code> or <code>MULTICLASS</code>. 
            
             
            <para>
            <code>CreateEvaluation</code> is an asynchronous operation. In response to <code>CreateEvaluation</code>,
            Amazon Machine Learning (Amazon ML) immediately returns and sets the evaluation status
            to <code>PENDING</code>. After the <code>Evaluation</code> is created and ready for
            use, Amazon ML sets the status to <code>COMPLETED</code>. 
            </para>
             
            <para>
            You can use the <a>GetEvaluation</a> operation to check progress of the evaluation
            during the creation operation.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateEvaluation service method.</param>
            
            <returns>The response from the CreateEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            A second request to use or change an object was not allowed. This can result from
            retrying a request using a parameter that was not present in the original request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginCreateEvaluation(Amazon.MachineLearning.Model.CreateEvaluationRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateEvaluation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateEvaluation operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateEvaluation
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndCreateEvaluation(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateEvaluation operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateEvaluation.</param>
            
            <returns>Returns a  CreateEvaluationResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.CreateMLModel(Amazon.MachineLearning.Model.CreateMLModelRequest)">
            <summary>
            Creates a new <code>MLModel</code> using the data files and the recipe as information
            sources. 
            
             
            <para>
            An <code>MLModel</code> is nearly immutable. Users can only update the <code>MLModelName</code>
            and the <code>ScoreThreshold</code> in an <code>MLModel</code> without creating a
            new <code>MLModel</code>. 
            </para>
             
            <para>
            <code>CreateMLModel</code> is an asynchronous operation. In response to <code>CreateMLModel</code>,
            Amazon Machine Learning (Amazon ML) immediately returns and sets the <code>MLModel</code>
            status to <code>PENDING</code>. After the <code>MLModel</code> is created and ready
            for use, Amazon ML sets the status to <code>COMPLETED</code>. 
            </para>
             
            <para>
            You can use the <a>GetMLModel</a> operation to check progress of the <code>MLModel</code>
            during the creation operation.
            </para>
             
            <para>
             <a>CreateMLModel</a> requires a <code>DataSource</code> with computed statistics,
            which can be created by setting <code>ComputeStatistics</code> to <code>true</code>
            in <a>CreateDataSourceFromRDS</a>, <a>CreateDataSourceFromS3</a>, or <a>CreateDataSourceFromRedshift</a>
            operations. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateMLModel service method.</param>
            
            <returns>The response from the CreateMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.IdempotentParameterMismatchException">
            A second request to use or change an object was not allowed. This can result from
            retrying a request using a parameter that was not present in the original request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginCreateMLModel(Amazon.MachineLearning.Model.CreateMLModelRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateMLModel operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateMLModel operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateMLModel
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndCreateMLModel(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateMLModel operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateMLModel.</param>
            
            <returns>Returns a  CreateMLModelResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.CreateRealtimeEndpoint(System.String)">
            <summary>
            Creates a real-time endpoint for the <code>MLModel</code>. The endpoint contains the
            URI of the <code>MLModel</code>; that is, the location to send real-time prediction
            requests for the specified <code>MLModel</code>.
            </summary>
            <param name="mlModelId">The ID assigned to the <code>MLModel</code> during creation.</param>
            
            <returns>The response from the CreateRealtimeEndpoint service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.CreateRealtimeEndpoint(Amazon.MachineLearning.Model.CreateRealtimeEndpointRequest)">
            <summary>
            Creates a real-time endpoint for the <code>MLModel</code>. The endpoint contains the
            URI of the <code>MLModel</code>; that is, the location to send real-time prediction
            requests for the specified <code>MLModel</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateRealtimeEndpoint service method.</param>
            
            <returns>The response from the CreateRealtimeEndpoint service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginCreateRealtimeEndpoint(Amazon.MachineLearning.Model.CreateRealtimeEndpointRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateRealtimeEndpoint operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateRealtimeEndpoint operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateRealtimeEndpoint
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndCreateRealtimeEndpoint(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateRealtimeEndpoint operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateRealtimeEndpoint.</param>
            
            <returns>Returns a  CreateRealtimeEndpointResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DeleteBatchPrediction(System.String)">
            <summary>
            Assigns the DELETED status to a <code>BatchPrediction</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteBatchPrediction</code> operation, you can use the <a>GetBatchPrediction</a>
            operation to verify that the status of the <code>BatchPrediction</code> changed to
            DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The result of the <code>DeleteBatchPrediction</code> operation is
            irreversible.
            </para>
            </summary>
            <param name="batchPredictionId">A user-supplied ID that uniquely identifies the <code>BatchPrediction</code>.</param>
            
            <returns>The response from the DeleteBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DeleteBatchPrediction(Amazon.MachineLearning.Model.DeleteBatchPredictionRequest)">
            <summary>
            Assigns the DELETED status to a <code>BatchPrediction</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteBatchPrediction</code> operation, you can use the <a>GetBatchPrediction</a>
            operation to verify that the status of the <code>BatchPrediction</code> changed to
            DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The result of the <code>DeleteBatchPrediction</code> operation is
            irreversible.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteBatchPrediction service method.</param>
            
            <returns>The response from the DeleteBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginDeleteBatchPrediction(Amazon.MachineLearning.Model.DeleteBatchPredictionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteBatchPrediction operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteBatchPrediction operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteBatchPrediction
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndDeleteBatchPrediction(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteBatchPrediction operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteBatchPrediction.</param>
            
            <returns>Returns a  DeleteBatchPredictionResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DeleteDataSource(System.String)">
            <summary>
            Assigns the DELETED status to a <code>DataSource</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteDataSource</code> operation, you can use the <a>GetDataSource</a>
            operation to verify that the status of the <code>DataSource</code> changed to DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The results of the <code>DeleteDataSource</code> operation are irreversible.
            </para>
            </summary>
            <param name="dataSourceId">A user-supplied ID that uniquely identifies the <code>DataSource</code>.</param>
            
            <returns>The response from the DeleteDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DeleteDataSource(Amazon.MachineLearning.Model.DeleteDataSourceRequest)">
            <summary>
            Assigns the DELETED status to a <code>DataSource</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteDataSource</code> operation, you can use the <a>GetDataSource</a>
            operation to verify that the status of the <code>DataSource</code> changed to DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The results of the <code>DeleteDataSource</code> operation are irreversible.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDataSource service method.</param>
            
            <returns>The response from the DeleteDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginDeleteDataSource(Amazon.MachineLearning.Model.DeleteDataSourceRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteDataSource operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDataSource operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteDataSource
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndDeleteDataSource(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteDataSource operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteDataSource.</param>
            
            <returns>Returns a  DeleteDataSourceResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DeleteEvaluation(System.String)">
            <summary>
            Assigns the <code>DELETED</code> status to an <code>Evaluation</code>, rendering it
            unusable.
            
             
            <para>
            After invoking the <code>DeleteEvaluation</code> operation, you can use the <a>GetEvaluation</a>
            operation to verify that the status of the <code>Evaluation</code> changed to <code>DELETED</code>.
            </para>
             
            <para>
            <b>Caution:</b> The results of the <code>DeleteEvaluation</code> operation are irreversible.
            </para>
            </summary>
            <param name="evaluationId">A user-supplied ID that uniquely identifies the <code>Evaluation</code> to delete.</param>
            
            <returns>The response from the DeleteEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DeleteEvaluation(Amazon.MachineLearning.Model.DeleteEvaluationRequest)">
            <summary>
            Assigns the <code>DELETED</code> status to an <code>Evaluation</code>, rendering it
            unusable.
            
             
            <para>
            After invoking the <code>DeleteEvaluation</code> operation, you can use the <a>GetEvaluation</a>
            operation to verify that the status of the <code>Evaluation</code> changed to <code>DELETED</code>.
            </para>
             
            <para>
            <b>Caution:</b> The results of the <code>DeleteEvaluation</code> operation are irreversible.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteEvaluation service method.</param>
            
            <returns>The response from the DeleteEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginDeleteEvaluation(Amazon.MachineLearning.Model.DeleteEvaluationRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteEvaluation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteEvaluation operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteEvaluation
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndDeleteEvaluation(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteEvaluation operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteEvaluation.</param>
            
            <returns>Returns a  DeleteEvaluationResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DeleteMLModel(System.String)">
            <summary>
            Assigns the DELETED status to an <code>MLModel</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteMLModel</code> operation, you can use the <a>GetMLModel</a>
            operation to verify that the status of the <code>MLModel</code> changed to DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The result of the <code>DeleteMLModel</code> operation is irreversible.
            </para>
            </summary>
            <param name="mlModelId">A user-supplied ID that uniquely identifies the <code>MLModel</code>.</param>
            
            <returns>The response from the DeleteMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DeleteMLModel(Amazon.MachineLearning.Model.DeleteMLModelRequest)">
            <summary>
            Assigns the DELETED status to an <code>MLModel</code>, rendering it unusable.
            
             
            <para>
            After using the <code>DeleteMLModel</code> operation, you can use the <a>GetMLModel</a>
            operation to verify that the status of the <code>MLModel</code> changed to DELETED.
            </para>
             
            <para>
            <b>Caution:</b> The result of the <code>DeleteMLModel</code> operation is irreversible.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMLModel service method.</param>
            
            <returns>The response from the DeleteMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginDeleteMLModel(Amazon.MachineLearning.Model.DeleteMLModelRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteMLModel operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMLModel operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteMLModel
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndDeleteMLModel(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteMLModel operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteMLModel.</param>
            
            <returns>Returns a  DeleteMLModelResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DeleteRealtimeEndpoint(System.String)">
            <summary>
            Deletes a real time endpoint of an <code>MLModel</code>.
            </summary>
            <param name="mlModelId">The ID assigned to the <code>MLModel</code> during creation.</param>
            
            <returns>The response from the DeleteRealtimeEndpoint service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DeleteRealtimeEndpoint(Amazon.MachineLearning.Model.DeleteRealtimeEndpointRequest)">
            <summary>
            Deletes a real time endpoint of an <code>MLModel</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRealtimeEndpoint service method.</param>
            
            <returns>The response from the DeleteRealtimeEndpoint service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginDeleteRealtimeEndpoint(Amazon.MachineLearning.Model.DeleteRealtimeEndpointRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteRealtimeEndpoint operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRealtimeEndpoint operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteRealtimeEndpoint
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndDeleteRealtimeEndpoint(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteRealtimeEndpoint operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteRealtimeEndpoint.</param>
            
            <returns>Returns a  DeleteRealtimeEndpointResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DescribeBatchPredictions(Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest)">
            <summary>
            Returns a list of <code>BatchPrediction</code> operations that match the search criteria
            in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeBatchPredictions service method.</param>
            
            <returns>The response from the DescribeBatchPredictions service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginDescribeBatchPredictions(Amazon.MachineLearning.Model.DescribeBatchPredictionsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeBatchPredictions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeBatchPredictions operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeBatchPredictions
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndDescribeBatchPredictions(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeBatchPredictions operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeBatchPredictions.</param>
            
            <returns>Returns a  DescribeBatchPredictionsResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DescribeDataSources(Amazon.MachineLearning.Model.DescribeDataSourcesRequest)">
            <summary>
            Returns a list of <code>DataSource</code> that match the search criteria in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDataSources service method.</param>
            
            <returns>The response from the DescribeDataSources service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginDescribeDataSources(Amazon.MachineLearning.Model.DescribeDataSourcesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeDataSources operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDataSources operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeDataSources
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndDescribeDataSources(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeDataSources operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeDataSources.</param>
            
            <returns>Returns a  DescribeDataSourcesResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DescribeEvaluations(Amazon.MachineLearning.Model.DescribeEvaluationsRequest)">
            <summary>
            Returns a list of <code>DescribeEvaluations</code> that match the search criteria
            in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeEvaluations service method.</param>
            
            <returns>The response from the DescribeEvaluations service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginDescribeEvaluations(Amazon.MachineLearning.Model.DescribeEvaluationsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeEvaluations operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeEvaluations operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeEvaluations
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndDescribeEvaluations(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeEvaluations operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeEvaluations.</param>
            
            <returns>Returns a  DescribeEvaluationsResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.DescribeMLModels(Amazon.MachineLearning.Model.DescribeMLModelsRequest)">
            <summary>
            Returns a list of <code>MLModel</code> that match the search criteria in the request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMLModels service method.</param>
            
            <returns>The response from the DescribeMLModels service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginDescribeMLModels(Amazon.MachineLearning.Model.DescribeMLModelsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DescribeMLModels operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeMLModels operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDescribeMLModels
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndDescribeMLModels(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DescribeMLModels operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDescribeMLModels.</param>
            
            <returns>Returns a  DescribeMLModelsResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.GetBatchPrediction(System.String)">
            <summary>
            Returns a <code>BatchPrediction</code> that includes detailed metadata, status, and
            data file information for a <code>Batch Prediction</code> request.
            </summary>
            <param name="batchPredictionId">An ID assigned to the <code>BatchPrediction</code> at creation.</param>
            
            <returns>The response from the GetBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.GetBatchPrediction(Amazon.MachineLearning.Model.GetBatchPredictionRequest)">
            <summary>
            Returns a <code>BatchPrediction</code> that includes detailed metadata, status, and
            data file information for a <code>Batch Prediction</code> request.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetBatchPrediction service method.</param>
            
            <returns>The response from the GetBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginGetBatchPrediction(Amazon.MachineLearning.Model.GetBatchPredictionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetBatchPrediction operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetBatchPrediction operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetBatchPrediction
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndGetBatchPrediction(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetBatchPrediction operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetBatchPrediction.</param>
            
            <returns>Returns a  GetBatchPredictionResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.GetDataSource(System.String)">
            <summary>
            Returns a <code>DataSource</code> that includes metadata and data file information,
            as well as the current status of the <code>DataSource</code>.
            
             
            <para>
            <code>GetDataSource</code> provides results in normal or verbose format. The verbose
            format adds the schema description and the list of files pointed to by the DataSource
            to the normal format.
            </para>
            </summary>
            <param name="dataSourceId">The ID assigned to the <code>DataSource</code> at creation.</param>
            
            <returns>The response from the GetDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.GetDataSource(System.String,System.Boolean)">
            <summary>
            Returns a <code>DataSource</code> that includes metadata and data file information,
            as well as the current status of the <code>DataSource</code>.
            
             
            <para>
            <code>GetDataSource</code> provides results in normal or verbose format. The verbose
            format adds the schema description and the list of files pointed to by the DataSource
            to the normal format.
            </para>
            </summary>
            <param name="dataSourceId">The ID assigned to the <code>DataSource</code> at creation.</param>
            <param name="verbose">Specifies whether the <code>GetDataSource</code> operation should return <code>DataSourceSchema</code>. If true, <code>DataSourceSchema</code> is returned. If false, <code>DataSourceSchema</code> is not returned.</param>
            
            <returns>The response from the GetDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.GetDataSource(Amazon.MachineLearning.Model.GetDataSourceRequest)">
            <summary>
            Returns a <code>DataSource</code> that includes metadata and data file information,
            as well as the current status of the <code>DataSource</code>.
            
             
            <para>
            <code>GetDataSource</code> provides results in normal or verbose format. The verbose
            format adds the schema description and the list of files pointed to by the DataSource
            to the normal format.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDataSource service method.</param>
            
            <returns>The response from the GetDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginGetDataSource(Amazon.MachineLearning.Model.GetDataSourceRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetDataSource operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDataSource operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetDataSource
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndGetDataSource(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetDataSource operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetDataSource.</param>
            
            <returns>Returns a  GetDataSourceResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.GetEvaluation(System.String)">
            <summary>
            Returns an <code>Evaluation</code> that includes metadata as well as the current status
            of the <code>Evaluation</code>.
            </summary>
            <param name="evaluationId">The ID of the <code>Evaluation</code> to retrieve. The evaluation of each <code>MLModel</code> is recorded and cataloged. The ID provides the means to access the information. </param>
            
            <returns>The response from the GetEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.GetEvaluation(Amazon.MachineLearning.Model.GetEvaluationRequest)">
            <summary>
            Returns an <code>Evaluation</code> that includes metadata as well as the current status
            of the <code>Evaluation</code>.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetEvaluation service method.</param>
            
            <returns>The response from the GetEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginGetEvaluation(Amazon.MachineLearning.Model.GetEvaluationRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetEvaluation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetEvaluation operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetEvaluation
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndGetEvaluation(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetEvaluation operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetEvaluation.</param>
            
            <returns>Returns a  GetEvaluationResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.GetMLModel(System.String)">
            <summary>
            Returns an <code>MLModel</code> that includes detailed metadata, and data source information
            as well as the current status of the <code>MLModel</code>.
            
             
            <para>
            <code>GetMLModel</code> provides results in normal or verbose format. 
            </para>
            </summary>
            <param name="mlModelId">The ID assigned to the <code>MLModel</code> at creation.</param>
            
            <returns>The response from the GetMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.GetMLModel(System.String,System.Boolean)">
            <summary>
            Returns an <code>MLModel</code> that includes detailed metadata, and data source information
            as well as the current status of the <code>MLModel</code>.
            
             
            <para>
            <code>GetMLModel</code> provides results in normal or verbose format. 
            </para>
            </summary>
            <param name="mlModelId">The ID assigned to the <code>MLModel</code> at creation.</param>
            <param name="verbose">Specifies whether the <code>GetMLModel</code> operation should return <code>Recipe</code>. If true, <code>Recipe</code> is returned. If false, <code>Recipe</code> is not returned.</param>
            
            <returns>The response from the GetMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.GetMLModel(Amazon.MachineLearning.Model.GetMLModelRequest)">
            <summary>
            Returns an <code>MLModel</code> that includes detailed metadata, and data source information
            as well as the current status of the <code>MLModel</code>.
            
             
            <para>
            <code>GetMLModel</code> provides results in normal or verbose format. 
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetMLModel service method.</param>
            
            <returns>The response from the GetMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginGetMLModel(Amazon.MachineLearning.Model.GetMLModelRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetMLModel operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetMLModel operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetMLModel
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndGetMLModel(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetMLModel operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetMLModel.</param>
            
            <returns>Returns a  GetMLModelResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.Predict(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Generates a prediction for the observation using the specified <code>ML Model</code>.
            
             <note><title>Note</title> 
            <para>
            Not all response parameters will be populated. Whether a response parameter is populated
            depends on the type of model requested.
            </para>
            </note>
            </summary>
            <param name="mlModelId">A unique identifier of the <code>MLModel</code>.</param>
            <param name="predictEndpoint">A property of PredictRequest used to execute the Predict service method.</param>
            <param name="record">A property of PredictRequest used to execute the Predict service method.</param>
            
            <returns>The response from the Predict service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.LimitExceededException">
            The subscriber exceeded the maximum number of operations. This exception can occur
            when listing objects such as <code>DataSource</code>.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.PredictorNotMountedException">
            The exception is thrown when a predict request is made to an unmounted <code>MLModel</code>.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.Predict(Amazon.MachineLearning.Model.PredictRequest)">
            <summary>
            Generates a prediction for the observation using the specified <code>ML Model</code>.
            
             <note><title>Note</title> 
            <para>
            Not all response parameters will be populated. Whether a response parameter is populated
            depends on the type of model requested.
            </para>
            </note>
            </summary>
            <param name="request">Container for the necessary parameters to execute the Predict service method.</param>
            
            <returns>The response from the Predict service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.LimitExceededException">
            The subscriber exceeded the maximum number of operations. This exception can occur
            when listing objects such as <code>DataSource</code>.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.PredictorNotMountedException">
            The exception is thrown when a predict request is made to an unmounted <code>MLModel</code>.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginPredict(Amazon.MachineLearning.Model.PredictRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the Predict operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the Predict operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndPredict
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndPredict(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  Predict operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginPredict.</param>
            
            <returns>Returns a  PredictResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.UpdateBatchPrediction(System.String,System.String)">
            <summary>
            Updates the <code>BatchPredictionName</code> of a <code>BatchPrediction</code>.
            
             
            <para>
            You can use the <a>GetBatchPrediction</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
            <param name="batchPredictionId">The ID assigned to the <code>BatchPrediction</code> during creation.</param>
            <param name="batchPredictionName">A new user-supplied name or description of the <code>BatchPrediction</code>.</param>
            
            <returns>The response from the UpdateBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.UpdateBatchPrediction(Amazon.MachineLearning.Model.UpdateBatchPredictionRequest)">
            <summary>
            Updates the <code>BatchPredictionName</code> of a <code>BatchPrediction</code>.
            
             
            <para>
            You can use the <a>GetBatchPrediction</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateBatchPrediction service method.</param>
            
            <returns>The response from the UpdateBatchPrediction service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginUpdateBatchPrediction(Amazon.MachineLearning.Model.UpdateBatchPredictionRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateBatchPrediction operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateBatchPrediction operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateBatchPrediction
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndUpdateBatchPrediction(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateBatchPrediction operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateBatchPrediction.</param>
            
            <returns>Returns a  UpdateBatchPredictionResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.UpdateDataSource(System.String,System.String)">
            <summary>
            Updates the <code>DataSourceName</code> of a <code>DataSource</code>.
            
             
            <para>
            You can use the <a>GetDataSource</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
            <param name="dataSourceId">The ID assigned to the <code>DataSource</code> during creation.</param>
            <param name="dataSourceName">A new user-supplied name or description of the <code>DataSource</code> that will replace the current description. </param>
            
            <returns>The response from the UpdateDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.UpdateDataSource(Amazon.MachineLearning.Model.UpdateDataSourceRequest)">
            <summary>
            Updates the <code>DataSourceName</code> of a <code>DataSource</code>.
            
             
            <para>
            You can use the <a>GetDataSource</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDataSource service method.</param>
            
            <returns>The response from the UpdateDataSource service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginUpdateDataSource(Amazon.MachineLearning.Model.UpdateDataSourceRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateDataSource operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateDataSource operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateDataSource
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndUpdateDataSource(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateDataSource operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateDataSource.</param>
            
            <returns>Returns a  UpdateDataSourceResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.UpdateEvaluation(System.String,System.String)">
            <summary>
            Updates the <code>EvaluationName</code> of an <code>Evaluation</code>.
            
             
            <para>
            You can use the <a>GetEvaluation</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
            <param name="evaluationId">The ID assigned to the <code>Evaluation</code> during creation.</param>
            <param name="evaluationName">A new user-supplied name or description of the <code>Evaluation</code> that will replace the current content. </param>
            
            <returns>The response from the UpdateEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.UpdateEvaluation(Amazon.MachineLearning.Model.UpdateEvaluationRequest)">
            <summary>
            Updates the <code>EvaluationName</code> of an <code>Evaluation</code>.
            
             
            <para>
            You can use the <a>GetEvaluation</a> operation to view the contents of the updated
            data element.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateEvaluation service method.</param>
            
            <returns>The response from the UpdateEvaluation service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginUpdateEvaluation(Amazon.MachineLearning.Model.UpdateEvaluationRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateEvaluation operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateEvaluation operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateEvaluation
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndUpdateEvaluation(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateEvaluation operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateEvaluation.</param>
            
            <returns>Returns a  UpdateEvaluationResult from MachineLearning.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.UpdateMLModel(System.String,System.String,System.Single)">
            <summary>
            Updates the <code>MLModelName</code> and the <code>ScoreThreshold</code> of an <code>MLModel</code>.
            
             
            <para>
            You can use the <a>GetMLModel</a> operation to view the contents of the updated data
            element.
            </para>
            </summary>
            <param name="mlModelId">The ID assigned to the <code>MLModel</code> during creation.</param>
            <param name="mlModelName">A user-supplied name or description of the <code>MLModel</code>.</param>
            <param name="scoreThreshold">The <code>ScoreThreshold</code> used in binary classification <code>MLModel</code> that marks the boundary between a positive prediction and a negative prediction. Output values greater than or equal to the <code>ScoreThreshold</code> receive a positive result from the <code>MLModel</code>, such as <code>true</code>. Output values less than the <code>ScoreThreshold</code> receive a negative response from the <code>MLModel</code>, such as <code>false</code>.</param>
            
            <returns>The response from the UpdateMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.UpdateMLModel(Amazon.MachineLearning.Model.UpdateMLModelRequest)">
            <summary>
            Updates the <code>MLModelName</code> and the <code>ScoreThreshold</code> of an <code>MLModel</code>.
            
             
            <para>
            You can use the <a>GetMLModel</a> operation to view the contents of the updated data
            element.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateMLModel service method.</param>
            
            <returns>The response from the UpdateMLModel service method, as returned by MachineLearning.</returns>
            <exception cref="T:Amazon.MachineLearning.Model.InternalServerException">
            An error on the server occurred when trying to process a request.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.InvalidInputException">
            An error on the client occurred. Typically, the cause is an invalid input value.
            </exception>
            <exception cref="T:Amazon.MachineLearning.Model.ResourceNotFoundException">
            A specified resource cannot be located.
            </exception>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.BeginUpdateMLModel(Amazon.MachineLearning.Model.UpdateMLModelRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateMLModel operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateMLModel operation on AmazonMachineLearningClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateMLModel
                    operation.</returns>
        </member>
        <member name="M:Amazon.MachineLearning.IAmazonMachineLearning.EndUpdateMLModel(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateMLModel operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateMLModel.</param>
            
            <returns>Returns a  UpdateMLModelResult from MachineLearning.</returns>
        </member>
    </members>
</doc>
