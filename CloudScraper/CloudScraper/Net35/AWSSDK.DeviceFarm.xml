<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.DeviceFarm</name>
    </assembly>
    <members>
        <member name="T:Amazon.DeviceFarm.AmazonDeviceFarmConfig">
            <summary>
            Configuration for accessing Amazon DeviceFarm service
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.AmazonDeviceFarmConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.AmazonDeviceFarmConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.AmazonDeviceFarmConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.AmazonDeviceFarmException">
            <summary>
             Common exception for the DeviceFarm service.
             </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonDeviceFarmException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonDeviceFarmException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonDeviceFarmException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonDeviceFarmException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonDeviceFarmException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DeviceFarm.ArtifactCategory">
            <summary>
            Constants used for properties of type ArtifactCategory.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactCategory.FILE">
            <summary>
            Constant FILE for ArtifactCategory
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactCategory.LOG">
            <summary>
            Constant LOG for ArtifactCategory
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactCategory.SCREENSHOT">
            <summary>
            Constant SCREENSHOT for ArtifactCategory
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.ArtifactCategory.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.ArtifactCategory.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.ArtifactCategory.op_Implicit(System.String)~Amazon.DeviceFarm.ArtifactCategory">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.ArtifactType">
            <summary>
            Constants used for properties of type ArtifactType.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.APPIUM_JAVA_OUTPUT">
            <summary>
            Constant APPIUM_JAVA_OUTPUT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.APPIUM_JAVA_XML_OUTPUT">
            <summary>
            Constant APPIUM_JAVA_XML_OUTPUT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.APPIUM_PYTHON_OUTPUT">
            <summary>
            Constant APPIUM_PYTHON_OUTPUT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.APPIUM_PYTHON_XML_OUTPUT">
            <summary>
            Constant APPIUM_PYTHON_XML_OUTPUT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.APPIUM_SERVER_OUTPUT">
            <summary>
            Constant APPIUM_SERVER_OUTPUT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.APPLICATION_CRASH_REPORT">
            <summary>
            Constant APPLICATION_CRASH_REPORT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.AUTOMATION_OUTPUT">
            <summary>
            Constant AUTOMATION_OUTPUT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.CALABASH_JAVA_XML_OUTPUT">
            <summary>
            Constant CALABASH_JAVA_XML_OUTPUT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.CALABASH_JSON_OUTPUT">
            <summary>
            Constant CALABASH_JSON_OUTPUT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.CALABASH_PRETTY_OUTPUT">
            <summary>
            Constant CALABASH_PRETTY_OUTPUT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.CALABASH_STANDARD_OUTPUT">
            <summary>
            Constant CALABASH_STANDARD_OUTPUT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.DEVICE_LOG">
            <summary>
            Constant DEVICE_LOG for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.EXERCISER_MONKEY_OUTPUT">
            <summary>
            Constant EXERCISER_MONKEY_OUTPUT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.EXPLORER_EVENT_LOG">
            <summary>
            Constant EXPLORER_EVENT_LOG for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.EXPLORER_SUMMARY_LOG">
            <summary>
            Constant EXPLORER_SUMMARY_LOG for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.INSTRUMENTATION_OUTPUT">
            <summary>
            Constant INSTRUMENTATION_OUTPUT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.MESSAGE_LOG">
            <summary>
            Constant MESSAGE_LOG for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.RESULT_LOG">
            <summary>
            Constant RESULT_LOG for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.SCREENSHOT">
            <summary>
            Constant SCREENSHOT for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.SERVICE_LOG">
            <summary>
            Constant SERVICE_LOG for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.UNKNOWN">
            <summary>
            Constant UNKNOWN for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.WEBKIT_LOG">
            <summary>
            Constant WEBKIT_LOG for ArtifactType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ArtifactType.XCTEST_LOG">
            <summary>
            Constant XCTEST_LOG for ArtifactType
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.ArtifactType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.ArtifactType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.ArtifactType.op_Implicit(System.String)~Amazon.DeviceFarm.ArtifactType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.BillingMethod">
            <summary>
            Constants used for properties of type BillingMethod.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.BillingMethod.METERED">
            <summary>
            Constant METERED for BillingMethod
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.BillingMethod.UNMETERED">
            <summary>
            Constant UNMETERED for BillingMethod
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.BillingMethod.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.BillingMethod.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.BillingMethod.op_Implicit(System.String)~Amazon.DeviceFarm.BillingMethod">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.CurrencyCode">
            <summary>
            Constants used for properties of type CurrencyCode.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.CurrencyCode.USD">
            <summary>
            Constant USD for CurrencyCode
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.CurrencyCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.CurrencyCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.CurrencyCode.op_Implicit(System.String)~Amazon.DeviceFarm.CurrencyCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.DeviceAttribute">
            <summary>
            Constants used for properties of type DeviceAttribute.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.DeviceAttribute.ARN">
            <summary>
            Constant ARN for DeviceAttribute
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.DeviceAttribute.FORM_FACTOR">
            <summary>
            Constant FORM_FACTOR for DeviceAttribute
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.DeviceAttribute.MANUFACTURER">
            <summary>
            Constant MANUFACTURER for DeviceAttribute
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.DeviceAttribute.PLATFORM">
            <summary>
            Constant PLATFORM for DeviceAttribute
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.DeviceAttribute.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.DeviceAttribute.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.DeviceAttribute.op_Implicit(System.String)~Amazon.DeviceFarm.DeviceAttribute">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.DeviceFormFactor">
            <summary>
            Constants used for properties of type DeviceFormFactor.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.DeviceFormFactor.PHONE">
            <summary>
            Constant PHONE for DeviceFormFactor
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.DeviceFormFactor.TABLET">
            <summary>
            Constant TABLET for DeviceFormFactor
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.DeviceFormFactor.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.DeviceFormFactor.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.DeviceFormFactor.op_Implicit(System.String)~Amazon.DeviceFarm.DeviceFormFactor">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.DevicePlatform">
            <summary>
            Constants used for properties of type DevicePlatform.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.DevicePlatform.ANDROID">
            <summary>
            Constant ANDROID for DevicePlatform
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.DevicePlatform.IOS">
            <summary>
            Constant IOS for DevicePlatform
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.DevicePlatform.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.DevicePlatform.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.DevicePlatform.op_Implicit(System.String)~Amazon.DeviceFarm.DevicePlatform">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.DevicePoolType">
            <summary>
            Constants used for properties of type DevicePoolType.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.DevicePoolType.CURATED">
            <summary>
            Constant CURATED for DevicePoolType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.DevicePoolType.PRIVATE">
            <summary>
            Constant PRIVATE for DevicePoolType
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.DevicePoolType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.DevicePoolType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.DevicePoolType.op_Implicit(System.String)~Amazon.DeviceFarm.DevicePoolType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.ExecutionResult">
            <summary>
            Constants used for properties of type ExecutionResult.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionResult.ERRORED">
            <summary>
            Constant ERRORED for ExecutionResult
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionResult.FAILED">
            <summary>
            Constant FAILED for ExecutionResult
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionResult.PASSED">
            <summary>
            Constant PASSED for ExecutionResult
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionResult.PENDING">
            <summary>
            Constant PENDING for ExecutionResult
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionResult.SKIPPED">
            <summary>
            Constant SKIPPED for ExecutionResult
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionResult.STOPPED">
            <summary>
            Constant STOPPED for ExecutionResult
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionResult.WARNED">
            <summary>
            Constant WARNED for ExecutionResult
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.ExecutionResult.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.ExecutionResult.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.ExecutionResult.op_Implicit(System.String)~Amazon.DeviceFarm.ExecutionResult">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.ExecutionStatus">
            <summary>
            Constants used for properties of type ExecutionStatus.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionStatus.COMPLETED">
            <summary>
            Constant COMPLETED for ExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionStatus.PENDING">
            <summary>
            Constant PENDING for ExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionStatus.PROCESSING">
            <summary>
            Constant PROCESSING for ExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionStatus.RUNNING">
            <summary>
            Constant RUNNING for ExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionStatus.SCHEDULING">
            <summary>
            Constant SCHEDULING for ExecutionStatus
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.ExecutionStatus.STOPPING">
            <summary>
            Constant STOPPING for ExecutionStatus
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.ExecutionStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.ExecutionStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.ExecutionStatus.op_Implicit(System.String)~Amazon.DeviceFarm.ExecutionStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.OfferingTransactionType">
            <summary>
            Constants used for properties of type OfferingTransactionType.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.OfferingTransactionType.PURCHASE">
            <summary>
            Constant PURCHASE for OfferingTransactionType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.OfferingTransactionType.RENEW">
            <summary>
            Constant RENEW for OfferingTransactionType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.OfferingTransactionType.SYSTEM">
            <summary>
            Constant SYSTEM for OfferingTransactionType
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.OfferingTransactionType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.OfferingTransactionType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.OfferingTransactionType.op_Implicit(System.String)~Amazon.DeviceFarm.OfferingTransactionType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.OfferingType">
            <summary>
            Constants used for properties of type OfferingType.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.OfferingType.RECURRING">
            <summary>
            Constant RECURRING for OfferingType
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.OfferingType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.OfferingType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.OfferingType.op_Implicit(System.String)~Amazon.DeviceFarm.OfferingType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.RecurringChargeFrequency">
            <summary>
            Constants used for properties of type RecurringChargeFrequency.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.RecurringChargeFrequency.MONTHLY">
            <summary>
            Constant MONTHLY for RecurringChargeFrequency
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.RecurringChargeFrequency.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.RecurringChargeFrequency.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.RecurringChargeFrequency.op_Implicit(System.String)~Amazon.DeviceFarm.RecurringChargeFrequency">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.RuleOperator">
            <summary>
            Constants used for properties of type RuleOperator.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.RuleOperator.EQUALS_TO">
            <summary>
            Constant EQUALS_TO for RuleOperator
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.RuleOperator.GREATER_THAN">
            <summary>
            Constant GREATER_THAN for RuleOperator
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.RuleOperator.IN">
            <summary>
            Constant IN for RuleOperator
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.RuleOperator.LESS_THAN">
            <summary>
            Constant LESS_THAN for RuleOperator
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.RuleOperator.NOT_IN">
            <summary>
            Constant NOT_IN for RuleOperator
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.RuleOperator.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.RuleOperator.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.RuleOperator.op_Implicit(System.String)~Amazon.DeviceFarm.RuleOperator">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.SampleType">
            <summary>
            Constants used for properties of type SampleType.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.CPU">
            <summary>
            Constant CPU for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.MEMORY">
            <summary>
            Constant MEMORY for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.NATIVE_AVG_DRAWTIME">
            <summary>
            Constant NATIVE_AVG_DRAWTIME for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.NATIVE_FPS">
            <summary>
            Constant NATIVE_FPS for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.NATIVE_FRAMES">
            <summary>
            Constant NATIVE_FRAMES for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.NATIVE_MAX_DRAWTIME">
            <summary>
            Constant NATIVE_MAX_DRAWTIME for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.NATIVE_MIN_DRAWTIME">
            <summary>
            Constant NATIVE_MIN_DRAWTIME for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.OPENGL_AVG_DRAWTIME">
            <summary>
            Constant OPENGL_AVG_DRAWTIME for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.OPENGL_FPS">
            <summary>
            Constant OPENGL_FPS for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.OPENGL_FRAMES">
            <summary>
            Constant OPENGL_FRAMES for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.OPENGL_MAX_DRAWTIME">
            <summary>
            Constant OPENGL_MAX_DRAWTIME for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.OPENGL_MIN_DRAWTIME">
            <summary>
            Constant OPENGL_MIN_DRAWTIME for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.RX">
            <summary>
            Constant RX for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.RX_RATE">
            <summary>
            Constant RX_RATE for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.THREADS">
            <summary>
            Constant THREADS for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.TX">
            <summary>
            Constant TX for SampleType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.SampleType.TX_RATE">
            <summary>
            Constant TX_RATE for SampleType
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.SampleType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.SampleType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.SampleType.op_Implicit(System.String)~Amazon.DeviceFarm.SampleType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.TestType">
            <summary>
            Constants used for properties of type TestType.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.APPIUM_JAVA_JUNIT">
            <summary>
            Constant APPIUM_JAVA_JUNIT for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.APPIUM_JAVA_TESTNG">
            <summary>
            Constant APPIUM_JAVA_TESTNG for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.APPIUM_PYTHON">
            <summary>
            Constant APPIUM_PYTHON for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.APPIUM_WEB_JAVA_JUNIT">
            <summary>
            Constant APPIUM_WEB_JAVA_JUNIT for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.APPIUM_WEB_JAVA_TESTNG">
            <summary>
            Constant APPIUM_WEB_JAVA_TESTNG for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.APPIUM_WEB_PYTHON">
            <summary>
            Constant APPIUM_WEB_PYTHON for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.BUILTIN_EXPLORER">
            <summary>
            Constant BUILTIN_EXPLORER for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.BUILTIN_FUZZ">
            <summary>
            Constant BUILTIN_FUZZ for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.CALABASH">
            <summary>
            Constant CALABASH for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.INSTRUMENTATION">
            <summary>
            Constant INSTRUMENTATION for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.UIAUTOMATION">
            <summary>
            Constant UIAUTOMATION for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.UIAUTOMATOR">
            <summary>
            Constant UIAUTOMATOR for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.XCTEST">
            <summary>
            Constant XCTEST for TestType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.TestType.XCTEST_UI">
            <summary>
            Constant XCTEST_UI for TestType
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.TestType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.TestType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.TestType.op_Implicit(System.String)~Amazon.DeviceFarm.TestType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.UploadStatus">
            <summary>
            Constants used for properties of type UploadStatus.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadStatus.FAILED">
            <summary>
            Constant FAILED for UploadStatus
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadStatus.INITIALIZED">
            <summary>
            Constant INITIALIZED for UploadStatus
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadStatus.PROCESSING">
            <summary>
            Constant PROCESSING for UploadStatus
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadStatus.SUCCEEDED">
            <summary>
            Constant SUCCEEDED for UploadStatus
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.UploadStatus.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.UploadStatus.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.UploadStatus.op_Implicit(System.String)~Amazon.DeviceFarm.UploadStatus">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.UploadType">
            <summary>
            Constants used for properties of type UploadType.
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.ANDROID_APP">
            <summary>
            Constant ANDROID_APP for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.APPIUM_JAVA_JUNIT_TEST_PACKAGE">
            <summary>
            Constant APPIUM_JAVA_JUNIT_TEST_PACKAGE for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.APPIUM_JAVA_TESTNG_TEST_PACKAGE">
            <summary>
            Constant APPIUM_JAVA_TESTNG_TEST_PACKAGE for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.APPIUM_PYTHON_TEST_PACKAGE">
            <summary>
            Constant APPIUM_PYTHON_TEST_PACKAGE for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE">
            <summary>
            Constant APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE">
            <summary>
            Constant APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.APPIUM_WEB_PYTHON_TEST_PACKAGE">
            <summary>
            Constant APPIUM_WEB_PYTHON_TEST_PACKAGE for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.CALABASH_TEST_PACKAGE">
            <summary>
            Constant CALABASH_TEST_PACKAGE for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.EXTERNAL_DATA">
            <summary>
            Constant EXTERNAL_DATA for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.INSTRUMENTATION_TEST_PACKAGE">
            <summary>
            Constant INSTRUMENTATION_TEST_PACKAGE for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.IOS_APP">
            <summary>
            Constant IOS_APP for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.UIAUTOMATION_TEST_PACKAGE">
            <summary>
            Constant UIAUTOMATION_TEST_PACKAGE for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.UIAUTOMATOR_TEST_PACKAGE">
            <summary>
            Constant UIAUTOMATOR_TEST_PACKAGE for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.WEB_APP">
            <summary>
            Constant WEB_APP for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.XCTEST_TEST_PACKAGE">
            <summary>
            Constant XCTEST_TEST_PACKAGE for UploadType
            </summary>
        </member>
        <member name="F:Amazon.DeviceFarm.UploadType.XCTEST_UI_TEST_PACKAGE">
            <summary>
            Constant XCTEST_UI_TEST_PACKAGE for UploadType
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.UploadType.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.UploadType.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.UploadType.op_Implicit(System.String)~Amazon.DeviceFarm.UploadType">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.AccountSettings">
            <summary>
            A container for account-level settings within AWS Device Farm.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.AccountSettings.AwsAccountNumber">
            <summary>
            Gets and sets the property AwsAccountNumber. 
            <para>
            The AWS account number specified in the <code>AccountSettings</code> container.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.AccountSettings.UnmeteredDevices">
            <summary>
            Gets and sets the property UnmeteredDevices. 
            <para>
            Returns the unmetered devices you have purchased.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ArgumentException">
            <summary>
             DeviceFarm exception
             </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.ArgumentException.#ctor(System.String)">
            <summary>
            Constructs a new ArgumentException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.ArgumentException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ArgumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.ArgumentException.#ctor(System.Exception)">
            <summary>
            Construct instance of ArgumentException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.ArgumentException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ArgumentException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.ArgumentException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ArgumentException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Artifact">
            <summary>
            Represents the output of a test. Examples of artifacts include logs and screenshots.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Artifact.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The artifact's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Artifact.Extension">
            <summary>
            Gets and sets the property Extension. 
            <para>
            The artifact's file extension.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Artifact.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The artifact's name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Artifact.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The artifact's type.
            </para>
             
            <para>
            Allowed values include the following:
            </para>
             <ul> <li>
            <para>
            UNKNOWN: An unknown type.
            </para>
            </li> <li>
            <para>
            SCREENSHOT: The screenshot type.
            </para>
            </li> <li>
            <para>
            DEVICE_LOG: The device log type.
            </para>
            </li> <li>
            <para>
            MESSAGE_LOG: The message log type.
            </para>
            </li> <li>
            <para>
            RESULT_LOG: The result log type.
            </para>
            </li> <li>
            <para>
            SERVICE_LOG: The service log type.
            </para>
            </li> <li>
            <para>
            WEBKIT_LOG: The web kit log type.
            </para>
            </li> <li>
            <para>
            INSTRUMENTATION_OUTPUT: The instrumentation type.
            </para>
            </li> <li>
            <para>
            EXERCISER_MONKEY_OUTPUT: For Android, the artifact (log) generated by an Android fuzz
            test.
            </para>
            </li> <li>
            <para>
            CALABASH_JSON_OUTPUT: The Calabash JSON output type.
            </para>
            </li> <li>
            <para>
            CALABASH_PRETTY_OUTPUT: The Calabash pretty output type.
            </para>
            </li> <li>
            <para>
            CALABASH_STANDARD_OUTPUT: The Calabash standard output type.
            </para>
            </li> <li>
            <para>
            CALABASH_JAVA_XML_OUTPUT: The Calabash Java XML output type.
            </para>
            </li> <li>
            <para>
            AUTOMATION_OUTPUT: The automation output type.
            </para>
            </li> <li>
            <para>
            APPIUM_SERVER_OUTPUT: The Appium server output type.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_OUTPUT: The Appium Java output type.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_XML_OUTPUT: The Appium Java XML output type.
            </para>
            </li> <li>
            <para>
            APPIUM_PYTHON_OUTPUT: The Appium Python output type.
            </para>
            </li> <li>
            <para>
            APPIUM_PYTHON_XML_OUTPUT: The Appium Python XML output type.
            </para>
            </li> <li>
            <para>
            EXPLORER_EVENT_LOG: The Explorer event log output type.
            </para>
            </li> <li>
            <para>
            EXPLORER_SUMMARY_LOG: The Explorer summary log output type.
            </para>
            </li> <li>
            <para>
            APPLICATION_CRASH_REPORT: The application crash report output type.
            </para>
            </li> <li>
            <para>
            XCTEST_LOG: The XCode test output type.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Artifact.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The pre-signed Amazon S3 URL that can be used with a corresponding GET request to
            download the artifact's file.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Counters">
            <summary>
            Represents entity counters.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Counters.Errored">
            <summary>
            Gets and sets the property Errored. 
            <para>
            The number of errored entities.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Counters.Failed">
            <summary>
            Gets and sets the property Failed. 
            <para>
            The number of failed entities.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Counters.Passed">
            <summary>
            Gets and sets the property Passed. 
            <para>
            The number of passed entities.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Counters.Skipped">
            <summary>
            Gets and sets the property Skipped. 
            <para>
            The number of skipped entities.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Counters.Stopped">
            <summary>
            Gets and sets the property Stopped. 
            <para>
            The number of stopped entities.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Counters.Total">
            <summary>
            Gets and sets the property Total. 
            <para>
            The total number of entities.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Counters.Warned">
            <summary>
            Gets and sets the property Warned. 
            <para>
            The number of warned entities.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.CPU">
            <summary>
            Represents the amount of CPU that an app is using on a physical device.
            
             
            <para>
            Note that this does not represent system-wide CPU usage.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CPU.Architecture">
            <summary>
            Gets and sets the property Architecture. 
            <para>
            The CPU's architecture, for example x86 or ARM.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CPU.Clock">
            <summary>
            Gets and sets the property Clock. 
            <para>
            The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz
            CPU is expressed as 1200000000.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CPU.Frequency">
            <summary>
            Gets and sets the property Frequency. 
            <para>
            The CPU's frequency.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.CreateDevicePoolRequest">
            <summary>
            Container for the parameters to the CreateDevicePool operation.
            Creates a device pool.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CreateDevicePoolRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The device pool's description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CreateDevicePoolRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The device pool's name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CreateDevicePoolRequest.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
            The ARN of the project for the device pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CreateDevicePoolRequest.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            The device pool's rules.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.CreateDevicePoolResponse">
            <summary>
            Represents the result of a create device pool request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CreateDevicePoolResponse.DevicePool">
            <summary>
            Gets and sets the property DevicePool. 
            <para>
            The newly created device pool.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.CreateProjectRequest">
            <summary>
            Container for the parameters to the CreateProject operation.
            Creates a new project.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CreateProjectRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The project's name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.CreateProjectResponse">
            <summary>
            Represents the result of a create project request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CreateProjectResponse.Project">
            <summary>
            Gets and sets the property Project. 
            <para>
            The newly created project.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.CreateUploadRequest">
            <summary>
            Container for the parameters to the CreateUpload operation.
            Uploads an app or test scripts.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CreateUploadRequest.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            The upload's content type (for example, "application/octet-stream").
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CreateUploadRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The upload's file name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CreateUploadRequest.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
            The ARN of the project for the upload.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CreateUploadRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The upload's upload type.
            </para>
             
            <para>
            Must be one of the following values:
            </para>
             <ul> <li>
            <para>
            ANDROID_APP: An Android upload.
            </para>
            </li> <li>
            <para>
            IOS_APP: An iOS upload.
            </para>
            </li> <li>
            <para>
            WEB_APP: A web appliction upload.
            </para>
            </li> <li>
            <para>
            EXTERNAL_DATA: An external data upload.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.
            </para>
            </li> <li>
            <para>
            APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload.
            </para>
            </li> <li>
            <para>
            CALABASH_TEST_PACKAGE: A Calabash test package upload.
            </para>
            </li> <li>
            <para>
            INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.
            </para>
            </li> <li>
            <para>
            UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.
            </para>
            </li> <li>
            <para>
            UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.
            </para>
            </li> <li>
            <para>
            XCTEST_TEST_PACKAGE: An XCode test package upload.
            </para>
            </li> <li>
            <para>
            XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.
            </para>
            </li> </ul> 
            <para>
            <b>Note</b> If you call <code>CreateUpload</code> with <code>WEB_APP</code> specified,
            AWS Device Farm throws an <code>ArgumentException</code> error.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.CreateUploadResponse">
            <summary>
            Represents the result of a create upload request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.CreateUploadResponse.Upload">
            <summary>
            Gets and sets the property Upload. 
            <para>
            The newly created upload.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.DeleteDevicePoolRequest">
            <summary>
            Container for the parameters to the DeleteDevicePool operation.
            Deletes a device pool given the pool ARN. Does not allow deletion of curated pools
            owned by the system.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DeleteDevicePoolRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Represents the Amazon Resource Name (ARN) of the Device Farm device pool you wish
            to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.DeleteDevicePoolResponse">
            <summary>
            Represents the result of a delete device pool request.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.DeleteProjectRequest">
            <summary>
            Container for the parameters to the DeleteProject operation.
            Deletes an AWS Device Farm project, given the project ARN.
            
             
            <para>
            <b>Note</b> Deleting this resource does not stop an in-progress run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DeleteProjectRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Represents the Amazon Resource Name (ARN) of the Device Farm project you wish to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.DeleteProjectResponse">
            <summary>
            Represents the result of a delete project request.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.DeleteRunRequest">
            <summary>
            Container for the parameters to the DeleteRun operation.
            Deletes the run, given the run ARN.
            
             
            <para>
            <b>Note</b> Deleting this resource does not stop an in-progress run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DeleteRunRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) for the run you wish to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.DeleteRunResponse">
            <summary>
            Represents the result of a delete run request.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.DeleteUploadRequest">
            <summary>
            Container for the parameters to the DeleteUpload operation.
            Deletes an upload given the upload ARN.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DeleteUploadRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Represents the Amazon Resource Name (ARN) of the Device Farm upload you wish to delete.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.DeleteUploadResponse">
            <summary>
            Represents the result of a delete upload request.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Device">
            <summary>
            Represents a device type that an app is tested against.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The device's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.Carrier">
            <summary>
            Gets and sets the property Carrier. 
            <para>
            The device's carrier.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.Cpu">
            <summary>
            Gets and sets the property Cpu. 
            <para>
            Information about the device's CPU.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.FormFactor">
            <summary>
            Gets and sets the property FormFactor. 
            <para>
            The device's form factor.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            PHONE: The phone form factor.
            </para>
            </li> <li>
            <para>
            TABLET: The tablet form factor.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.HeapSize">
            <summary>
            Gets and sets the property HeapSize. 
            <para>
            The device's heap size, expressed in bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.Image">
            <summary>
            Gets and sets the property Image. 
            <para>
            The device's image name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.Manufacturer">
            <summary>
            Gets and sets the property Manufacturer. 
            <para>
            The device's manufacturer name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.Memory">
            <summary>
            Gets and sets the property Memory. 
            <para>
            The device's total memory size, expressed in bytes.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.Model">
            <summary>
            Gets and sets the property Model. 
            <para>
            The device's model name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The device's display name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.Os">
            <summary>
            Gets and sets the property Os. 
            <para>
            The device's operating system type.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The device's platform.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            ANDROID: The Android platform.
            </para>
            </li> <li>
            <para>
            IOS: The iOS platform.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.Radio">
            <summary>
            Gets and sets the property Radio. 
            <para>
            The device's radio.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Device.Resolution">
            <summary>
            Gets and sets the property Resolution.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.DeviceMinutes">
            <summary>
            Represents the total (metered or unmetered) minutes used by the resource to run tests.
            Contains the sum of minutes consumed by all children.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DeviceMinutes.Metered">
            <summary>
            Gets and sets the property Metered. 
            <para>
            When specified, represents only the sum of metered minutes used by the resource to
            run tests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DeviceMinutes.Total">
            <summary>
            Gets and sets the property Total. 
            <para>
            When specified, represents the total minutes used by the resource to run tests.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DeviceMinutes.Unmetered">
            <summary>
            Gets and sets the property Unmetered. 
            <para>
            When specified, represents only the sum of unmetered minutes used by the resource
            to run tests.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.DevicePool">
            <summary>
            Represents a collection of device types.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DevicePool.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The device pool's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DevicePool.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            The device pool's description.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DevicePool.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The device pool's name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DevicePool.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            Information about the device pool's rules.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DevicePool.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The device pool's type.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            CURATED: A device pool that is created and managed by AWS Device Farm.
            </para>
            </li> <li>
            <para>
            PRIVATE: A device pool that is created and managed by the device pool developer.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.DevicePoolCompatibilityResult">
            <summary>
            Represents a device pool compatibility result.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DevicePoolCompatibilityResult.Compatible">
            <summary>
            Gets and sets the property Compatible. 
            <para>
            Whether the result was compatible with the device pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DevicePoolCompatibilityResult.Device">
            <summary>
            Gets and sets the property Device.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.DevicePoolCompatibilityResult.IncompatibilityMessages">
            <summary>
            Gets and sets the property IncompatibilityMessages. 
            <para>
            Information about the compatibility.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetAccountSettingsRequest">
            <summary>
            Container for the parameters to the GetAccountSettings operation.
            Returns the number of unmetered iOS and/or unmetered Android devices that have been
            purchased by the account.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetAccountSettingsResponse">
            <summary>
            Represents the account settings return values from the <code>GetAccountSettings</code>
            request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetAccountSettingsResponse.AccountSettings">
            <summary>
            Gets and sets the property AccountSettings.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityRequest">
            <summary>
            Container for the parameters to the GetDevicePoolCompatibility operation.
            Gets information about compatibility with a device pool.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityRequest.AppArn">
            <summary>
            Gets and sets the property AppArn. 
            <para>
            The ARN of the app that is associated with the specified device pool.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityRequest.DevicePoolArn">
            <summary>
            Gets and sets the property DevicePoolArn. 
            <para>
            The device pool's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityRequest.TestType">
            <summary>
            Gets and sets the property TestType. 
            <para>
            The test type for the specified device pool.
            </para>
             
            <para>
            Allowed values include the following:
            </para>
             <ul> <li>
            <para>
            BUILTIN_FUZZ: The built-in fuzz type.
            </para>
            </li> <li>
            <para>
            BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app,
            interacting with it and capturing screenshots at the same time.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_JUNIT: The Appium Java JUnit type.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_TESTNG: The Appium Java TestNG type.
            </para>
            </li> <li>
            <para>
            APPIUM_PYTHON: The Appium Python type.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_PYTHON: The Appium Python type for Web apps.
            </para>
            </li> <li>
            <para>
            CALABASH: The Calabash type.
            </para>
            </li> <li>
            <para>
            INSTRUMENTATION: The Instrumentation type.
            </para>
            </li> <li>
            <para>
            UIAUTOMATION: The uiautomation type.
            </para>
            </li> <li>
            <para>
            UIAUTOMATOR: The uiautomator type.
            </para>
            </li> <li>
            <para>
            XCTEST: The XCode test type.
            </para>
            </li> <li>
            <para>
            XCTEST_UI: The XCode UI test type.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityResponse">
            <summary>
            Represents the result of describe device pool compatibility request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityResponse.CompatibleDevices">
            <summary>
            Gets and sets the property CompatibleDevices. 
            <para>
            Information about compatible devices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityResponse.IncompatibleDevices">
            <summary>
            Gets and sets the property IncompatibleDevices. 
            <para>
            Information about incompatible devices.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetDevicePoolRequest">
            <summary>
            Container for the parameters to the GetDevicePool operation.
            Gets information about a device pool.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetDevicePoolRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The device pool's ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetDevicePoolResponse">
            <summary>
            Represents the result of a get device pool request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetDevicePoolResponse.DevicePool">
            <summary>
            Gets and sets the property DevicePool.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetDeviceRequest">
            <summary>
            Container for the parameters to the GetDevice operation.
            Gets information about a unique device type.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetDeviceRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The device type's ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetDeviceResponse">
            <summary>
            Represents the result of a get device request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetDeviceResponse.Device">
            <summary>
            Gets and sets the property Device.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetJobRequest">
            <summary>
            Container for the parameters to the GetJob operation.
            Gets information about a job.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetJobRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The job's ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetJobResponse">
            <summary>
            Represents the result of a get job request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetJobResponse.Job">
            <summary>
            Gets and sets the property Job.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetOfferingStatusRequest">
            <summary>
            Container for the parameters to the GetOfferingStatus operation.
            Gets the current status and future status of all offerings purchased by an AWS account.
            The response indicates how many offerings are currently available and the offerings
            that will be available in the next period. The API returns a <code>NotEligible</code>
            error if the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetOfferingStatusRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetOfferingStatusResponse">
            <summary>
            Returns the status result for a device offering.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetOfferingStatusResponse.Current">
            <summary>
            Gets and sets the property Current. 
            <para>
            When specified, gets the offering status for the current period.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetOfferingStatusResponse.NextPeriod">
            <summary>
            Gets and sets the property NextPeriod. 
            <para>
            When specified, gets the offering status for the next period.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetOfferingStatusResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetProjectRequest">
            <summary>
            Container for the parameters to the GetProject operation.
            Gets information about a project.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetProjectRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The project's ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetProjectResponse">
            <summary>
            Represents the result of a get project request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetProjectResponse.Project">
            <summary>
            Gets and sets the property Project.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetRunRequest">
            <summary>
            Container for the parameters to the GetRun operation.
            Gets information about a run.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetRunRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The run's ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetRunResponse">
            <summary>
            Represents the result of a get run request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetRunResponse.Run">
            <summary>
            Gets and sets the property Run.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetSuiteRequest">
            <summary>
            Container for the parameters to the GetSuite operation.
            Gets information about a suite.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetSuiteRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The suite's ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetSuiteResponse">
            <summary>
            Represents the result of a get suite request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetSuiteResponse.Suite">
            <summary>
            Gets and sets the property Suite.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetTestRequest">
            <summary>
            Container for the parameters to the GetTest operation.
            Gets information about a test.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetTestRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The test's ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetTestResponse">
            <summary>
            Represents the result of a get test request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetTestResponse.Test">
            <summary>
            Gets and sets the property Test.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetUploadRequest">
            <summary>
            Container for the parameters to the GetUpload operation.
            Gets information about an upload.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetUploadRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The upload's ARN.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.GetUploadResponse">
            <summary>
            Represents the result of a get upload request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.GetUploadResponse.Upload">
            <summary>
            Gets and sets the property Upload.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.IdempotencyException">
            <summary>
             DeviceFarm exception
             </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.IdempotencyException.#ctor(System.String)">
            <summary>
            Constructs a new IdempotencyException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.IdempotencyException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of IdempotencyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.IdempotencyException.#ctor(System.Exception)">
            <summary>
            Construct instance of IdempotencyException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.IdempotencyException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotencyException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.IdempotencyException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of IdempotencyException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.IncompatibilityMessage">
            <summary>
            Represents information about incompatibility.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.IncompatibilityMessage.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message about the incompatibility.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.IncompatibilityMessage.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of incompatibility.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            ARN: The ARN.
            </para>
            </li> <li>
            <para>
            FORM_FACTOR: The form factor (for example, phone or tablet).
            </para>
            </li> <li>
            <para>
            MANUFACTURER: The manufacturer.
            </para>
            </li> <li>
            <para>
            PLATFORM: The platform (for example, Android or iOS).
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Job">
            <summary>
            Represents a device.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Job.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The job's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Job.Counters">
            <summary>
            Gets and sets the property Counters. 
            <para>
            The job's result counters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Job.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            When the job was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Job.Device">
            <summary>
            Gets and sets the property Device.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Job.DeviceMinutes">
            <summary>
            Gets and sets the property DeviceMinutes. 
            <para>
            Represents the total (metered or unmetered) minutes used by the job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Job.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message about the job's result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Job.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The job's name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Job.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            The job's result.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            ERRORED: An error condition.
            </para>
            </li> <li>
            <para>
            FAILED: A failed condition.
            </para>
            </li> <li>
            <para>
            SKIPPED: A skipped condition.
            </para>
            </li> <li>
            <para>
            STOPPED: A stopped condition.
            </para>
            </li> <li>
            <para>
            PASSED: A passing condition.
            </para>
            </li> <li>
            <para>
            PENDING: A pending condition.
            </para>
            </li> <li>
            <para>
            WARNED: A warning condition.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Job.Started">
            <summary>
            Gets and sets the property Started. 
            <para>
            The job's start time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Job.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The job's status.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            COMPLETED: A completed status.
            </para>
            </li> <li>
            <para>
            PENDING: A pending status.
            </para>
            </li> <li>
            <para>
            PROCESSING: A processing status.
            </para>
            </li> <li>
            <para>
            RUNNING: A running status.
            </para>
            </li> <li>
            <para>
            SCHEDULING: A scheduling status.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Job.Stopped">
            <summary>
            Gets and sets the property Stopped. 
            <para>
            The job's stop time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Job.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The job's type.
            </para>
             
            <para>
            Allowed values include the following:
            </para>
             <ul> <li>
            <para>
            BUILTIN_FUZZ: The built-in fuzz type.
            </para>
            </li> <li>
            <para>
            BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app,
            interacting with it and capturing screenshots at the same time.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_JUNIT: The Appium Java JUnit type.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_TESTNG: The Appium Java TestNG type.
            </para>
            </li> <li>
            <para>
            APPIUM_PYTHON: The Appium Python type.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_PYTHON: The Appium Python type for Web apps.
            </para>
            </li> <li>
            <para>
            CALABASH: The Calabash type.
            </para>
            </li> <li>
            <para>
            INSTRUMENTATION: The Instrumentation type.
            </para>
            </li> <li>
            <para>
            UIAUTOMATION: The uiautomation type.
            </para>
            </li> <li>
            <para>
            UIAUTOMATOR: The uiautomator type.
            </para>
            </li> <li>
            <para>
            XCTEST: The XCode test type.
            </para>
            </li> <li>
            <para>
            XCTEST_UI: The XCode UI test type.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.LimitExceededException">
            <summary>
             DeviceFarm exception
             </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListArtifactsRequest">
            <summary>
            Container for the parameters to the ListArtifacts operation.
            Gets information about artifacts.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListArtifactsRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Run, Job, Suite, or Test ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListArtifactsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListArtifactsRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The artifacts' type.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>FILE: The artifacts are files.</li> <li>LOG: The artifacts are logs.</li>
            <li>SCREENSHOT: The artifacts are screenshots.</li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListArtifactsResponse">
            <summary>
            Represents the result of a list artifacts operation.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListArtifactsResponse.Artifacts">
            <summary>
            Gets and sets the property Artifacts. 
            <para>
            Information about the artifacts.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListArtifactsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of items that are returned is significantly large, this is an identifier
            that is also returned, which can be used in a subsequent call to this operation to
            return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListDevicePoolsRequest">
            <summary>
            Container for the parameters to the ListDevicePools operation.
            Gets information about device pools.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListDevicePoolsRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The project ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListDevicePoolsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListDevicePoolsRequest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The device pools' type.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            CURATED: A device pool that is created and managed by AWS Device Farm.
            </para>
            </li> <li>
            <para>
            PRIVATE: A device pool that is created and managed by the device pool developer.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListDevicePoolsResponse">
            <summary>
            Represents the result of a list device pools request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListDevicePoolsResponse.DevicePools">
            <summary>
            Gets and sets the property DevicePools. 
            <para>
            Information about the device pools.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListDevicePoolsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of items that are returned is significantly large, this is an identifier
            that is also returned, which can be used in a subsequent call to this operation to
            return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListDevicesRequest">
            <summary>
            Container for the parameters to the ListDevices operation.
            Gets information about unique device types.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListDevicesRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The device types' ARNs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListDevicesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListDevicesResponse">
            <summary>
            Represents the result of a list devices operation.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListDevicesResponse.Devices">
            <summary>
            Gets and sets the property Devices. 
            <para>
            Information about the devices.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListDevicesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of items that are returned is significantly large, this is an identifier
            that is also returned, which can be used in a subsequent call to this operation to
            return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListJobsRequest">
            <summary>
            Container for the parameters to the ListJobs operation.
            Gets information about jobs.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListJobsRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The jobs' ARNs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListJobsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListJobsResponse">
            <summary>
            Represents the result of a list jobs request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListJobsResponse.Jobs">
            <summary>
            Gets and sets the property Jobs. 
            <para>
            Information about the jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListJobsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of items that are returned is significantly large, this is an identifier
            that is also returned, which can be used in a subsequent call to this operation to
            return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListOfferingsRequest">
            <summary>
            Container for the parameters to the ListOfferings operation.
            Returns a list of products or offerings that the user can manage through the API.
            Each offering record indicates the recurring price per unit and the frequency for
            that offering. The API returns a <code>NotEligible</code> error if the user is not
            permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListOfferingsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListOfferingsResponse">
            <summary>
            Represents the return values of the list of offerings.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListOfferingsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListOfferingsResponse.Offerings">
            <summary>
            Gets and sets the property Offerings. 
            <para>
            A value representing the list offering results.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListOfferingTransactionsRequest">
            <summary>
            Container for the parameters to the ListOfferingTransactions operation.
            Returns a list of all historical purchases, renewals, and system renewal transactions
            for an AWS account. The list is paginated and ordered by a descending timestamp (most
            recent transactions are first). The API returns a <code>NotEligible</code> error if
            the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListOfferingTransactionsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListOfferingTransactionsResponse">
            <summary>
            Returns the transaction log of the specified offerings.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListOfferingTransactionsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListOfferingTransactionsResponse.OfferingTransactions">
            <summary>
            Gets and sets the property OfferingTransactions. 
            <para>
            The audit log of subscriptions you have purchased and modified through AWS Device
            Farm.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListProjectsRequest">
            <summary>
            Container for the parameters to the ListProjects operation.
            Gets information about projects.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListProjectsRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The projects' ARNs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListProjectsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListProjectsResponse">
            <summary>
            Represents the result of a list projects request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListProjectsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of items that are returned is significantly large, this is an identifier
            that is also returned, which can be used in a subsequent call to this operation to
            return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListProjectsResponse.Projects">
            <summary>
            Gets and sets the property Projects. 
            <para>
            Information about the projects.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListRunsRequest">
            <summary>
            Container for the parameters to the ListRuns operation.
            Gets information about runs.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListRunsRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The runs' ARNs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListRunsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListRunsResponse">
            <summary>
            Represents the result of a list runs request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListRunsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of items that are returned is significantly large, this is an identifier
            that is also returned, which can be used in a subsequent call to this operation to
            return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListRunsResponse.Runs">
            <summary>
            Gets and sets the property Runs. 
            <para>
            Information about the runs.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListSamplesRequest">
            <summary>
            Container for the parameters to the ListSamples operation.
            Gets information about samples.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListSamplesRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The samples' ARNs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListSamplesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListSamplesResponse">
            <summary>
            Represents the result of a list samples request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListSamplesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of items that are returned is significantly large, this is an identifier
            that is also returned, which can be used in a subsequent call to this operation to
            return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListSamplesResponse.Samples">
            <summary>
            Gets and sets the property Samples. 
            <para>
            Information about the samples.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListSuitesRequest">
            <summary>
            Container for the parameters to the ListSuites operation.
            Gets information about suites.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListSuitesRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The suites' ARNs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListSuitesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListSuitesResponse">
            <summary>
            Represents the result of a list suites request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListSuitesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of items that are returned is significantly large, this is an identifier
            that is also returned, which can be used in a subsequent call to this operation to
            return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListSuitesResponse.Suites">
            <summary>
            Gets and sets the property Suites. 
            <para>
            Information about the suites.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListTestsRequest">
            <summary>
            Container for the parameters to the ListTests operation.
            Gets information about tests.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListTestsRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The tests' ARNs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListTestsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListTestsResponse">
            <summary>
            Represents the result of a list tests request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListTestsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of items that are returned is significantly large, this is an identifier
            that is also returned, which can be used in a subsequent call to this operation to
            return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListTestsResponse.Tests">
            <summary>
            Gets and sets the property Tests. 
            <para>
            Information about the tests.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListUniqueProblemsRequest">
            <summary>
            Container for the parameters to the ListUniqueProblems operation.
            Gets information about unique problems.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListUniqueProblemsRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The unique problems' ARNs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListUniqueProblemsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListUniqueProblemsResponse">
            <summary>
            Represents the result of a list unique problems request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListUniqueProblemsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of items that are returned is significantly large, this is an identifier
            that is also returned, which can be used in a subsequent call to this operation to
            return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListUniqueProblemsResponse.UniqueProblems">
            <summary>
            Gets and sets the property UniqueProblems. 
            <para>
            Information about the unique problems.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            ERRORED: An error condition.
            </para>
            </li> <li>
            <para>
            FAILED: A failed condition.
            </para>
            </li> <li>
            <para>
            SKIPPED: A skipped condition.
            </para>
            </li> <li>
            <para>
            STOPPED: A stopped condition.
            </para>
            </li> <li>
            <para>
            PASSED: A passing condition.
            </para>
            </li> <li>
            <para>
            PENDING: A pending condition.
            </para>
            </li> <li>
            <para>
            WARNED: A warning condition.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListUploadsRequest">
            <summary>
            Container for the parameters to the ListUploads operation.
            Gets information about uploads.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListUploadsRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The uploads' ARNs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListUploadsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            An identifier that was returned from the previous call to this operation, which can
            be used to return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ListUploadsResponse">
            <summary>
            Represents the result of a list uploads request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListUploadsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            If the number of items that are returned is significantly large, this is an identifier
            that is also returned, which can be used in a subsequent call to this operation to
            return the next set of items in the list.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ListUploadsResponse.Uploads">
            <summary>
            Gets and sets the property Uploads. 
            <para>
            Information about the uploads.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Location">
            <summary>
            Represents a latitude and longitude pair, expressed in geographic coordinate system
            degrees (for example 47.6204, -122.3491).
            
             
            <para>
            Elevation is currently not supported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Location.Latitude">
            <summary>
            Gets and sets the property Latitude. 
            <para>
            The latitude.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Location.Longitude">
            <summary>
            Gets and sets the property Longitude. 
            <para>
            The longitude.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.MonetaryAmount">
            <summary>
            A number representing the monetary amount for an offering or transaction.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.MonetaryAmount.Amount">
            <summary>
            Gets and sets the property Amount. 
            <para>
            The numerical amount of an offering or transaction.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.MonetaryAmount.CurrencyCode">
            <summary>
            Gets and sets the property CurrencyCode. 
            <para>
            The currency code of a monetary amount. For example, <code>USD</code> means "U.S.
            dollars."
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.NotEligibleException">
            <summary>
             DeviceFarm exception
             </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.NotEligibleException.#ctor(System.String)">
            <summary>
            Constructs a new NotEligibleException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.NotEligibleException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotEligibleException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.NotEligibleException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotEligibleException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.NotEligibleException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotEligibleException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.NotEligibleException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotEligibleException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.NotFoundException">
            <summary>
             DeviceFarm exception
             </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.NotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new NotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.NotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.NotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.NotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of NotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Offering">
            <summary>
            Represents the metadata of a device offering.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Offering.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A string describing the offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Offering.Id">
            <summary>
            Gets and sets the property Id. 
            <para>
            The ID that corresponds to a device offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Offering.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The platform of the device (e.g., ANDROID or IOS).
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Offering.RecurringCharges">
            <summary>
            Gets and sets the property RecurringCharges. 
            <para>
            Specifies whether there are recurring charges for the offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Offering.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type of offering (e.g., "RECURRING") for a device.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.OfferingStatus">
            <summary>
            The status of the offering.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.OfferingStatus.EffectiveOn">
            <summary>
            Gets and sets the property EffectiveOn. 
            <para>
            The date on which the offering is effective.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.OfferingStatus.Offering">
            <summary>
            Gets and sets the property Offering. 
            <para>
            Represents the metadata of an offering status.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.OfferingStatus.Quantity">
            <summary>
            Gets and sets the property Quantity. 
            <para>
            The number of available devices in the offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.OfferingStatus.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The type specified for the offering status.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.OfferingTransaction">
            <summary>
            Represents the metadata of an offering transaction.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.OfferingTransaction.Cost">
            <summary>
            Gets and sets the property Cost. 
            <para>
            The cost of an offering transaction.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.OfferingTransaction.CreatedOn">
            <summary>
            Gets and sets the property CreatedOn. 
            <para>
            The date on which an offering transaction was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.OfferingTransaction.OfferingStatus">
            <summary>
            Gets and sets the property OfferingStatus. 
            <para>
            The status of an offering transaction.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.OfferingTransaction.TransactionId">
            <summary>
            Gets and sets the property TransactionId. 
            <para>
            The transaction ID of the offering transaction.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Problem">
            <summary>
            Represents a specific warning or failure.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Problem.Device">
            <summary>
            Gets and sets the property Device. 
            <para>
            Information about the associated device.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Problem.Job">
            <summary>
            Gets and sets the property Job. 
            <para>
            Information about the associated job.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Problem.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message about the problem's result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Problem.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            The problem's result.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            ERRORED: An error condition.
            </para>
            </li> <li>
            <para>
            FAILED: A failed condition.
            </para>
            </li> <li>
            <para>
            SKIPPED: A skipped condition.
            </para>
            </li> <li>
            <para>
            STOPPED: A stopped condition.
            </para>
            </li> <li>
            <para>
            PASSED: A passing condition.
            </para>
            </li> <li>
            <para>
            PENDING: A pending condition.
            </para>
            </li> <li>
            <para>
            WARNED: A warning condition.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Problem.Run">
            <summary>
            Gets and sets the property Run. 
            <para>
            Information about the associated run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Problem.Suite">
            <summary>
            Gets and sets the property Suite. 
            <para>
            Information about the associated suite.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Problem.Test">
            <summary>
            Gets and sets the property Test. 
            <para>
            Information about the associated test.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ProblemDetail">
            <summary>
            Information about a problem detail.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ProblemDetail.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The problem detail's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ProblemDetail.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The problem detail's name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Project">
            <summary>
            Represents an operating-system neutral workspace for running and managing tests.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Project.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The project's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Project.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            When the project was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Project.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The project's name.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.PurchaseOfferingRequest">
            <summary>
            Container for the parameters to the PurchaseOffering operation.
            Immediately purchases offerings for an AWS account. Offerings renew with the latest
            total purchased quantity for an offering, unless the renewal was overridden. The API
            returns a <code>NotEligible</code> error if the user is not permitted to invoke the
            operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.PurchaseOfferingRequest.OfferingId">
            <summary>
            Gets and sets the property OfferingId. 
            <para>
            The ID of the offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.PurchaseOfferingRequest.Quantity">
            <summary>
            Gets and sets the property Quantity. 
            <para>
            The number of device slots you wish to purchase in an offering request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.PurchaseOfferingResponse">
            <summary>
            The result of the purchase offering (e.g., success or failure).
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.PurchaseOfferingResponse.OfferingTransaction">
            <summary>
            Gets and sets the property OfferingTransaction. 
            <para>
            Represents the offering transaction for the purchase result.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Radios">
            <summary>
            Represents the set of radios and their states on a device. Examples of radios include
            Wi-Fi, GPS, Bluetooth, and NFC.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Radios.Bluetooth">
            <summary>
            Gets and sets the property Bluetooth. 
            <para>
            True if Bluetooth is enabled at the beginning of the test; otherwise, false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Radios.Gps">
            <summary>
            Gets and sets the property Gps. 
            <para>
            True if GPS is enabled at the beginning of the test; otherwise, false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Radios.Nfc">
            <summary>
            Gets and sets the property Nfc. 
            <para>
            True if NFC is enabled at the beginning of the test; otherwise, false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Radios.Wifi">
            <summary>
            Gets and sets the property Wifi. 
            <para>
            True if Wi-Fi is enabled at the beginning of the test; otherwise, false.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.RecurringCharge">
            <summary>
            Specifies whether charges for devices will be recurring.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.RecurringCharge.Cost">
            <summary>
            Gets and sets the property Cost. 
            <para>
            The cost of the recurring charge.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.RecurringCharge.Frequency">
            <summary>
            Gets and sets the property Frequency. 
            <para>
            The frequency in which charges will recur.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.RenewOfferingRequest">
            <summary>
            Container for the parameters to the RenewOffering operation.
            Explicitly sets the quantity of devices to renew for an offering, starting from the
            <code>effectiveDate</code> of the next period. The API returns a <code>NotEligible</code>
            error if the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.RenewOfferingRequest.OfferingId">
            <summary>
            Gets and sets the property OfferingId. 
            <para>
            The ID of a request to renew an offering.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.RenewOfferingRequest.Quantity">
            <summary>
            Gets and sets the property Quantity. 
            <para>
            The quantity requested in an offering renewal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.RenewOfferingResponse">
            <summary>
            The result of a renewal offering.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.RenewOfferingResponse.OfferingTransaction">
            <summary>
            Gets and sets the property OfferingTransaction. 
            <para>
            Represents the status of the offering transaction for the renewal.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Resolution">
            <summary>
            Represents the screen resolution of a device in height and width, expressed in pixels.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Resolution.Height">
            <summary>
            Gets and sets the property Height. 
            <para>
            The screen resolution's height, expressed in pixels.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Resolution.Width">
            <summary>
            Gets and sets the property Width. 
            <para>
            The screen resolution's width, expressed in pixels.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Rule">
            <summary>
            Represents a condition for a device pool.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Rule.Attribute">
            <summary>
            Gets and sets the property Attribute. 
            <para>
            The rule's stringified attribute. For example, specify the value as <code>"\"abc\""</code>.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            ARN: The ARN.
            </para>
            </li> <li>
            <para>
            FORM_FACTOR: The form factor (for example, phone or tablet).
            </para>
            </li> <li>
            <para>
            MANUFACTURER: The manufacturer.
            </para>
            </li> <li>
            <para>
            PLATFORM: The platform (for example, Android or iOS).
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Rule.Operator">
            <summary>
            Gets and sets the property Operator. 
            <para>
            The rule's operator.
            </para>
             <ul> <li>
            <para>
            EQUALS: The equals operator.
            </para>
            </li> <li>
            <para>
            GREATER_THAN: The greater-than operator.
            </para>
            </li> <li>
            <para>
            IN: The in operator.
            </para>
            </li> <li>
            <para>
            LESS_THAN: The less-than operator.
            </para>
            </li> <li>
            <para>
            NOT_IN: The not-in operator.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Rule.Value">
            <summary>
            Gets and sets the property Value. 
            <para>
            The rule's value.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Run">
            <summary>
            Represents an app on a set of devices with a specific test and configuration.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The run's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.BillingMethod">
            <summary>
            Gets and sets the property BillingMethod. 
            <para>
            Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>.
            If the parameter is not specified, the default value is <code>unmetered</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.CompletedJobs">
            <summary>
            Gets and sets the property CompletedJobs. 
            <para>
            The total number of completed jobs.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.Counters">
            <summary>
            Gets and sets the property Counters. 
            <para>
            The run's result counters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            When the run was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.DeviceMinutes">
            <summary>
            Gets and sets the property DeviceMinutes. 
            <para>
            Represents the total (metered or unmetered) minutes used by the test run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message about the run's result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The run's name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.Platform">
            <summary>
            Gets and sets the property Platform. 
            <para>
            The run's platform.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            ANDROID: The Android platform.
            </para>
            </li> <li>
            <para>
            IOS: The iOS platform.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            The run's result.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            ERRORED: An error condition.
            </para>
            </li> <li>
            <para>
            FAILED: A failed condition.
            </para>
            </li> <li>
            <para>
            SKIPPED: A skipped condition.
            </para>
            </li> <li>
            <para>
            STOPPED: A stopped condition.
            </para>
            </li> <li>
            <para>
            PASSED: A passing condition.
            </para>
            </li> <li>
            <para>
            PENDING: A pending condition.
            </para>
            </li> <li>
            <para>
            WARNED: A warning condition.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.Started">
            <summary>
            Gets and sets the property Started. 
            <para>
            The run's start time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The run's status.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            COMPLETED: A completed status.
            </para>
            </li> <li>
            <para>
            PENDING: A pending status.
            </para>
            </li> <li>
            <para>
            PROCESSING: A processing status.
            </para>
            </li> <li>
            <para>
            RUNNING: A running status.
            </para>
            </li> <li>
            <para>
            SCHEDULING: A scheduling status.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.Stopped">
            <summary>
            Gets and sets the property Stopped. 
            <para>
            The run's stop time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.TotalJobs">
            <summary>
            Gets and sets the property TotalJobs. 
            <para>
            The total number of jobs for the run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Run.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The run's type.
            </para>
             
            <para>
            Must be one of the following values:
            </para>
             <ul> <li>
            <para>
            BUILTIN_FUZZ: The built-in fuzz type.
            </para>
            </li> <li>
            <para>
            BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app,
            interacting with it and capturing screenshots at the same time.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_JUNIT: The Appium Java JUnit type.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_TESTNG: The Appium Java TestNG type.
            </para>
            </li> <li>
            <para>
            APPIUM_PYTHON: The Appium Python type.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_PYTHON: The Appium Python type for Web apps.
            </para>
            </li> <li>
            <para>
            CALABASH: The Calabash type.
            </para>
            </li> <li>
            <para>
            INSTRUMENTATION: The Instrumentation type.
            </para>
            </li> <li>
            <para>
            UIAUTOMATION: The uiautomation type.
            </para>
            </li> <li>
            <para>
            UIAUTOMATOR: The uiautomator type.
            </para>
            </li> <li>
            <para>
            XCTEST: The XCode test type.
            </para>
            </li> <li>
            <para>
            XCTEST_UI: The XCode UI test type.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Sample">
            <summary>
            Represents a sample of performance data.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Sample.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The sample's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Sample.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The sample's type.
            </para>
             
            <para>
            Must be one of the following values:
            </para>
             <ul> <li>
            <para>
            CPU: A CPU sample type. This is expressed as the app processing CPU time (including
            child processes) as reported by process, as a percentage.
            </para>
            </li> <li>
            <para>
            MEMORY: A memory usage sample type. This is expressed as the total proportional set
            size of an app process, in kilobytes.
            </para>
            </li> <li>
            <para>
            NATIVE_AVG_DRAWTIME
            </para>
            </li> <li>
            <para>
            NATIVE_FPS
            </para>
            </li> <li>
            <para>
            NATIVE_FRAMES
            </para>
            </li> <li>
            <para>
            NATIVE_MAX_DRAWTIME
            </para>
            </li> <li>
            <para>
            NATIVE_MIN_DRAWTIME
            </para>
            </li> <li>
            <para>
            OPENGL_AVG_DRAWTIME
            </para>
            </li> <li>
            <para>
            OPENGL_FPS
            </para>
            </li> <li>
            <para>
            OPENGL_FRAMES
            </para>
            </li> <li>
            <para>
            OPENGL_MAX_DRAWTIME
            </para>
            </li> <li>
            <para>
            OPENGL_MIN_DRAWTIME
            </para>
            </li> <li>
            <para>
            RX
            </para>
            </li> <li>
            <para>
            RX_RATE: The total number of bytes per second (TCP and UDP) that are sent, by app
            process.
            </para>
            </li> <li>
            <para>
            THREADS: A threads sample type. This is expressed as the total number of threads per
            app process.
            </para>
            </li> <li>
            <para>
            TX
            </para>
            </li> <li>
            <para>
            TX_RATE: The total number of bytes per second (TCP and UDP) that are received, by
            app process.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Sample.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The pre-signed Amazon S3 URL that can be used with a corresponding GET request to
            download the sample's file.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ScheduleRunConfiguration">
            <summary>
            Represents the settings for a run. Includes things like location, radio states, auxiliary
            apps, and network profiles.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunConfiguration.AuxiliaryApps">
            <summary>
            Gets and sets the property AuxiliaryApps. 
            <para>
            A list of auxiliary apps for the run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunConfiguration.BillingMethod">
            <summary>
            Gets and sets the property BillingMethod. 
            <para>
            Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>.
            If the parameter is not specified, the default value is <code>unmetered</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunConfiguration.ExtraDataPackageArn">
            <summary>
            Gets and sets the property ExtraDataPackageArn. 
            <para>
            The ARN of the extra data for the run. The extra data is a .zip file that AWS Device
            Farm will extract to external data for Android or the app's sandbox for iOS.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunConfiguration.Locale">
            <summary>
            Gets and sets the property Locale. 
            <para>
            Information about the locale that is used for the run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunConfiguration.Location">
            <summary>
            Gets and sets the property Location. 
            <para>
            Information about the location that is used for the run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunConfiguration.NetworkProfileArn">
            <summary>
            Gets and sets the property NetworkProfileArn. 
            <para>
            Reserved for internal use.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunConfiguration.Radios">
            <summary>
            Gets and sets the property Radios. 
            <para>
            Information about the radio states for the run.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ScheduleRunRequest">
            <summary>
            Container for the parameters to the ScheduleRun operation.
            Schedules a run.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunRequest.AppArn">
            <summary>
            Gets and sets the property AppArn. 
            <para>
            The ARN of the app to schedule a run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunRequest.Configuration">
            <summary>
            Gets and sets the property Configuration. 
            <para>
            Information about the settings for the run to be scheduled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunRequest.DevicePoolArn">
            <summary>
            Gets and sets the property DevicePoolArn. 
            <para>
            The ARN of the device pool for the run to be scheduled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The name for the run to be scheduled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunRequest.ProjectArn">
            <summary>
            Gets and sets the property ProjectArn. 
            <para>
            The ARN of the project for the run to be scheduled.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunRequest.Test">
            <summary>
            Gets and sets the property Test. 
            <para>
            Information about the test for the run to be scheduled.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ScheduleRunResponse">
            <summary>
            Represents the result of a schedule run request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunResponse.Run">
            <summary>
            Gets and sets the property Run. 
            <para>
            Information about the scheduled run.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ScheduleRunTest">
            <summary>
            Represents additional test settings.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunTest.Filter">
            <summary>
            Gets and sets the property Filter. 
            <para>
            The test's filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunTest.Parameters">
            <summary>
            Gets and sets the property Parameters. 
            <para>
            The test's parameters, such as test framework parameters and fixture settings.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunTest.TestPackageArn">
            <summary>
            Gets and sets the property TestPackageArn. 
            <para>
            The ARN of the uploaded test that will be run.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.ScheduleRunTest.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The test's type.
            </para>
             
            <para>
            Must be one of the following values:
            </para>
             <ul> <li>
            <para>
            BUILTIN_FUZZ: The built-in fuzz type.
            </para>
            </li> <li>
            <para>
            BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app,
            interacting with it and capturing screenshots at the same time.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_JUNIT: The Appium Java JUnit type.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_TESTNG: The Appium Java TestNG type.
            </para>
            </li> <li>
            <para>
            APPIUM_PYTHON: The Appium Python type.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_PYTHON: The Appium Python type for Web apps.
            </para>
            </li> <li>
            <para>
            CALABASH: The Calabash type.
            </para>
            </li> <li>
            <para>
            INSTRUMENTATION: The Instrumentation type.
            </para>
            </li> <li>
            <para>
            UIAUTOMATION: The uiautomation type.
            </para>
            </li> <li>
            <para>
            UIAUTOMATOR: The uiautomator type.
            </para>
            </li> <li>
            <para>
            XCTEST: The XCode test type.
            </para>
            </li> <li>
            <para>
            XCTEST_UI: The XCode UI test type.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            <summary>
             DeviceFarm exception
             </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.ServiceAccountException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceAccountException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.ServiceAccountException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceAccountException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.ServiceAccountException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceAccountException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.ServiceAccountException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceAccountException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.ServiceAccountException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceAccountException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.StopRunRequest">
            <summary>
            Container for the parameters to the StopRun operation.
            Initiates a stop request for the current test run. AWS Device Farm will immediately
            stop the run on devices where tests have not started executing, and you will not be
            billed for these devices. On devices where tests have started executing, Setup Suite
            and Teardown Suite tests will run to completion before stopping execution on those
            devices. You will be billed for Setup, Teardown, and any tests that were in progress
            or already completed.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.StopRunRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            Represents the Amazon Resource Name (ARN) of the Device Farm run you wish to stop.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.StopRunResponse">
            <summary>
            Represents the results of your stop run attempt.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.StopRunResponse.Run">
            <summary>
            Gets and sets the property Run.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Suite">
            <summary>
            Represents a collection of one or more tests.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Suite.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The suite's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Suite.Counters">
            <summary>
            Gets and sets the property Counters. 
            <para>
            The suite's result counters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Suite.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            When the suite was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Suite.DeviceMinutes">
            <summary>
            Gets and sets the property DeviceMinutes. 
            <para>
            Represents the total (metered or unmetered) minutes used by the test suite.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Suite.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message about the suite's result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Suite.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The suite's name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Suite.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            The suite's result.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            ERRORED: An error condition.
            </para>
            </li> <li>
            <para>
            FAILED: A failed condition.
            </para>
            </li> <li>
            <para>
            SKIPPED: A skipped condition.
            </para>
            </li> <li>
            <para>
            STOPPED: A stopped condition.
            </para>
            </li> <li>
            <para>
            PASSED: A passing condition.
            </para>
            </li> <li>
            <para>
            PENDING: A pending condition.
            </para>
            </li> <li>
            <para>
            WARNED: A warning condition.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Suite.Started">
            <summary>
            Gets and sets the property Started. 
            <para>
            The suite's start time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Suite.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The suite's status.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            COMPLETED: A completed status.
            </para>
            </li> <li>
            <para>
            PENDING: A pending status.
            </para>
            </li> <li>
            <para>
            PROCESSING: A processing status.
            </para>
            </li> <li>
            <para>
            RUNNING: A running status.
            </para>
            </li> <li>
            <para>
            SCHEDULING: A scheduling status.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Suite.Stopped">
            <summary>
            Gets and sets the property Stopped. 
            <para>
            The suite's stop time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Suite.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The suite's type.
            </para>
             
            <para>
            Must be one of the following values:
            </para>
             <ul> <li>
            <para>
            BUILTIN_FUZZ: The built-in fuzz type.
            </para>
            </li> <li>
            <para>
            BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app,
            interacting with it and capturing screenshots at the same time.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_JUNIT: The Appium Java JUnit type.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_TESTNG: The Appium Java TestNG type.
            </para>
            </li> <li>
            <para>
            APPIUM_PYTHON: The Appium Python type.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_PYTHON: The Appium Python type for Web apps.
            </para>
            </li> <li>
            <para>
            CALABASH: The Calabash type.
            </para>
            </li> <li>
            <para>
            INSTRUMENTATION: The Instrumentation type.
            </para>
            </li> <li>
            <para>
            UIAUTOMATION: The uiautomation type.
            </para>
            </li> <li>
            <para>
            UIAUTOMATOR: The uiautomator type.
            </para>
            </li> <li>
            <para>
            XCTEST: The XCode test type.
            </para>
            </li> <li>
            <para>
            XCTEST_UI: The XCode UI test type.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Test">
            <summary>
            Represents a condition that is evaluated.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Test.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The test's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Test.Counters">
            <summary>
            Gets and sets the property Counters. 
            <para>
            The test's result counters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Test.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            When the test was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Test.DeviceMinutes">
            <summary>
            Gets and sets the property DeviceMinutes. 
            <para>
            Represents the total (metered or unmetered) minutes used by the test.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Test.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message about the test's result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Test.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The test's name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Test.Result">
            <summary>
            Gets and sets the property Result. 
            <para>
            The test's result.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            ERRORED: An error condition.
            </para>
            </li> <li>
            <para>
            FAILED: A failed condition.
            </para>
            </li> <li>
            <para>
            SKIPPED: A skipped condition.
            </para>
            </li> <li>
            <para>
            STOPPED: A stopped condition.
            </para>
            </li> <li>
            <para>
            PASSED: A passing condition.
            </para>
            </li> <li>
            <para>
            PENDING: A pending condition.
            </para>
            </li> <li>
            <para>
            WARNED: A warning condition.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Test.Started">
            <summary>
            Gets and sets the property Started. 
            <para>
            The test's start time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Test.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The test's status.
            </para>
             
            <para>
            Allowed values include:
            </para>
             <ul> <li>
            <para>
            COMPLETED: A completed status.
            </para>
            </li> <li>
            <para>
            PENDING: A pending status.
            </para>
            </li> <li>
            <para>
            PROCESSING: A processing status.
            </para>
            </li> <li>
            <para>
            RUNNING: A running status.
            </para>
            </li> <li>
            <para>
            SCHEDULING: A scheduling status.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Test.Stopped">
            <summary>
            Gets and sets the property Stopped. 
            <para>
            The test's stop time.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Test.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The test's type.
            </para>
             
            <para>
            Must be one of the following values:
            </para>
             <ul> <li>
            <para>
            BUILTIN_FUZZ: The built-in fuzz type.
            </para>
            </li> <li>
            <para>
            BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app,
            interacting with it and capturing screenshots at the same time.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_JUNIT: The Appium Java JUnit type.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_TESTNG: The Appium Java TestNG type.
            </para>
            </li> <li>
            <para>
            APPIUM_PYTHON: The Appium Python type.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_PYTHON: The Appium Python type for Web apps.
            </para>
            </li> <li>
            <para>
            CALABASH: The Calabash type.
            </para>
            </li> <li>
            <para>
            INSTRUMENTATION: The Instrumentation type.
            </para>
            </li> <li>
            <para>
            UIAUTOMATION: The uiautomation type.
            </para>
            </li> <li>
            <para>
            UIAUTOMATOR: The uiautomator type.
            </para>
            </li> <li>
            <para>
            XCTEST: The XCode test type.
            </para>
            </li> <li>
            <para>
            XCTEST_UI: The XCode UI test type.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.UniqueProblem">
            <summary>
            A collection of one or more problems, grouped by their result.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.UniqueProblem.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message about the unique problems' result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.UniqueProblem.Problems">
            <summary>
            Gets and sets the property Problems. 
            <para>
            Information about the problems.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.UpdateDevicePoolRequest">
            <summary>
            Container for the parameters to the UpdateDevicePool operation.
            Modifies the name, description, and rules in a device pool given the attributes and
            the pool ARN. Rule updates are all-or-nothing, meaning they can only be updated as
            a whole (or not at all).
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.UpdateDevicePoolRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resourc Name (ARN) of the Device Farm device pool you wish to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.UpdateDevicePoolRequest.Description">
            <summary>
            Gets and sets the property Description. 
            <para>
            A description of the device pool you wish to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.UpdateDevicePoolRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A string representing the name of the device pool you wish to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.UpdateDevicePoolRequest.Rules">
            <summary>
            Gets and sets the property Rules. 
            <para>
            Represents the rules you wish to modify for the device pool. Updating rules is optional;
            however, if you choose to update rules for your request, the update will replace the
            existing rules.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.UpdateDevicePoolResponse">
            <summary>
            Represents the result of an update device pool request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.UpdateDevicePoolResponse.DevicePool">
            <summary>
            Gets and sets the property DevicePool.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.UpdateProjectRequest">
            <summary>
            Container for the parameters to the UpdateProject operation.
            Modifies the specified project name, given the project ARN and a new name.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.UpdateProjectRequest.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the project whose name you wish to update.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.UpdateProjectRequest.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            A string representing the new name of the project that you are updating.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.UpdateProjectResponse">
            <summary>
            Represents the result of an update project request.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.UpdateProjectResponse.Project">
            <summary>
            Gets and sets the property Project.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Upload">
            <summary>
            An app or a set of one or more tests to upload or that have been uploaded.
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Upload.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The upload's ARN.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Upload.ContentType">
            <summary>
            Gets and sets the property ContentType. 
            <para>
            The upload's content type (for example, "application/octet-stream").
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Upload.Created">
            <summary>
            Gets and sets the property Created. 
            <para>
            When the upload was created.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Upload.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            A message about the upload's result.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Upload.Metadata">
            <summary>
            Gets and sets the property Metadata. 
            <para>
            The upload's metadata. For example, for Android, this contains information that is
            parsed from the manifest and is displayed in the AWS Device Farm console after the
            associated app is uploaded.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Upload.Name">
            <summary>
            Gets and sets the property Name. 
            <para>
            The upload's file name.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Upload.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The upload's status.
            </para>
             
            <para>
            Must be one of the following values:
            </para>
             <ul> <li>
            <para>
            FAILED: A failed status.
            </para>
            </li> <li>
            <para>
            INITIALIZED: An initialized status.
            </para>
            </li> <li>
            <para>
            PROCESSING: A processing status.
            </para>
            </li> <li>
            <para>
            SUCCEEDED: A succeeded status.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Upload.Type">
            <summary>
            Gets and sets the property Type. 
            <para>
            The upload's type.
            </para>
             
            <para>
            Must be one of the following values:
            </para>
             <ul> <li>
            <para>
            ANDROID_APP: An Android upload.
            </para>
            </li> <li>
            <para>
            IOS_APP: An iOS upload.
            </para>
            </li> <li>
            <para>
            WEB_APP: A web appliction upload.
            </para>
            </li> <li>
            <para>
            EXTERNAL_DATA: An external data upload.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.
            </para>
            </li> <li>
            <para>
            APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.
            </para>
            </li> <li>
            <para>
            APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.
            </para>
            </li> <li>
            <para>
            APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload.
            </para>
            </li> <li>
            <para>
            CALABASH_TEST_PACKAGE: A Calabash test package upload.
            </para>
            </li> <li>
            <para>
            INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.
            </para>
            </li> <li>
            <para>
            UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.
            </para>
            </li> <li>
            <para>
            UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.
            </para>
            </li> <li>
            <para>
            XCTEST_TEST_PACKAGE: An XCode test package upload.
            </para>
            </li> <li>
            <para>
            XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.
            </para>
            </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Upload.Url">
            <summary>
            Gets and sets the property Url. 
            <para>
            The pre-signed Amazon S3 URL that was used to store a file through a corresponding
            PUT request.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.AccountSettingsUnmarshaller">
            <summary>
            Response Unmarshaller for AccountSettings Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.AccountSettingsUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#AccountSettings,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.AccountSettingsUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.AccountSettingsUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ArtifactUnmarshaller">
            <summary>
            Response Unmarshaller for Artifact Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ArtifactUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Artifact,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ArtifactUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ArtifactUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CountersUnmarshaller">
            <summary>
            Response Unmarshaller for Counters Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CountersUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Counters,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CountersUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CountersUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CPUUnmarshaller">
            <summary>
            Response Unmarshaller for CPU Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CPUUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#CPU,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CPUUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CPUUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateDevicePoolRequestMarshaller">
            <summary>
            CreateDevicePool Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateDevicePoolRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateDevicePoolRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.CreateDevicePoolRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateDevicePoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateDevicePool operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateDevicePoolResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateDevicePoolResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateDevicePoolResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateProjectRequestMarshaller">
            <summary>
            CreateProject Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateProjectRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateProjectRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.CreateProjectRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateProjectResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateProject operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateProjectResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateProjectResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateProjectResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateUploadRequestMarshaller">
            <summary>
            CreateUpload Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateUploadRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateUploadRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.CreateUploadRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateUploadResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateUpload operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateUploadResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateUploadResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.CreateUploadResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteDevicePoolRequestMarshaller">
            <summary>
            DeleteDevicePool Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteDevicePoolRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteDevicePoolRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.DeleteDevicePoolRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteDevicePoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDevicePool operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteDevicePoolResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteDevicePoolResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteDevicePoolResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteProjectRequestMarshaller">
            <summary>
            DeleteProject Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteProjectRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteProjectRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.DeleteProjectRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteProjectResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteProject operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteProjectResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteProjectResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteProjectResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteRunRequestMarshaller">
            <summary>
            DeleteRun Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteRunRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteRunRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.DeleteRunRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteRunResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRun operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteRunResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteRunResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteRunResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteUploadRequestMarshaller">
            <summary>
            DeleteUpload Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteUploadRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteUploadRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.DeleteUploadRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteUploadResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteUpload operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteUploadResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteUploadResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeleteUploadResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeviceMinutesUnmarshaller">
            <summary>
            Response Unmarshaller for DeviceMinutes Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeviceMinutesUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#DeviceMinutes,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeviceMinutesUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeviceMinutesUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DevicePoolCompatibilityResultUnmarshaller">
            <summary>
            Response Unmarshaller for DevicePoolCompatibilityResult Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DevicePoolCompatibilityResultUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#DevicePoolCompatibilityResult,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DevicePoolCompatibilityResultUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DevicePoolCompatibilityResultUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DevicePoolUnmarshaller">
            <summary>
            Response Unmarshaller for DevicePool Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DevicePoolUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#DevicePool,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DevicePoolUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DevicePoolUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeviceUnmarshaller">
            <summary>
            Response Unmarshaller for Device Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Device,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.DeviceUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetAccountSettingsRequestMarshaller">
            <summary>
            GetAccountSettings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetAccountSettingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetAccountSettingsRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.GetAccountSettingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetAccountSettingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetAccountSettings operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetAccountSettingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetAccountSettingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetAccountSettingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolCompatibilityRequestMarshaller">
            <summary>
            GetDevicePoolCompatibility Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolCompatibilityRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolCompatibilityRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolCompatibilityResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDevicePoolCompatibility operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolCompatibilityResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolCompatibilityResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolCompatibilityResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolRequestMarshaller">
            <summary>
            GetDevicePool Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.GetDevicePoolRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDevicePool operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDevicePoolResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDeviceRequestMarshaller">
            <summary>
            GetDevice Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDeviceRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDeviceRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.GetDeviceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetDevice operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetDeviceResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetJobRequestMarshaller">
            <summary>
            GetJob Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetJobRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetJobRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.GetJobRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetJobResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetJob operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetJobResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetJobResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetJobResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetOfferingStatusRequestMarshaller">
            <summary>
            GetOfferingStatus Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetOfferingStatusRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetOfferingStatusRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.GetOfferingStatusRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetOfferingStatusResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetOfferingStatus operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetOfferingStatusResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetOfferingStatusResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetOfferingStatusResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetProjectRequestMarshaller">
            <summary>
            GetProject Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetProjectRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetProjectRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.GetProjectRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetProjectResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetProject operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetProjectResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetProjectResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetProjectResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetRunRequestMarshaller">
            <summary>
            GetRun Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetRunRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetRunRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.GetRunRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetRunResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetRun operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetRunResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetRunResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetRunResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetSuiteRequestMarshaller">
            <summary>
            GetSuite Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetSuiteRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetSuiteRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.GetSuiteRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetSuiteResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetSuite operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetSuiteResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetSuiteResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetSuiteResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetTestRequestMarshaller">
            <summary>
            GetTest Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetTestRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetTestRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.GetTestRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetTestResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetTest operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetTestResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetTestResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetTestResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetUploadRequestMarshaller">
            <summary>
            GetUpload Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetUploadRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetUploadRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.GetUploadRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetUploadResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetUpload operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetUploadResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetUploadResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.GetUploadResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.IncompatibilityMessageUnmarshaller">
            <summary>
            Response Unmarshaller for IncompatibilityMessage Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.IncompatibilityMessageUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#IncompatibilityMessage,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.IncompatibilityMessageUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.IncompatibilityMessageUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.JobUnmarshaller">
            <summary>
            Response Unmarshaller for Job Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.JobUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Job,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.JobUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.JobUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListArtifactsRequestMarshaller">
            <summary>
            ListArtifacts Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListArtifactsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListArtifactsRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListArtifactsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListArtifactsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListArtifacts operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListArtifactsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListArtifactsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListArtifactsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicePoolsRequestMarshaller">
            <summary>
            ListDevicePools Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicePoolsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicePoolsRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListDevicePoolsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicePoolsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDevicePools operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicePoolsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicePoolsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicePoolsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller">
            <summary>
            ListDevices Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicesRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListDevicesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListDevices operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListDevicesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller">
            <summary>
            ListJobs Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListJobsRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListJobsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListJobs operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListJobsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingsRequestMarshaller">
            <summary>
            ListOfferings Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingsRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListOfferingsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListOfferings operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingTransactionsRequestMarshaller">
            <summary>
            ListOfferingTransactions Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingTransactionsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingTransactionsRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListOfferingTransactionsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingTransactionsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListOfferingTransactions operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingTransactionsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingTransactionsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListOfferingTransactionsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListProjectsRequestMarshaller">
            <summary>
            ListProjects Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListProjectsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListProjectsRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListProjectsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListProjectsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListProjects operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListProjectsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListProjectsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListProjectsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListRunsRequestMarshaller">
            <summary>
            ListRuns Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListRunsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListRunsRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListRunsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListRunsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListRuns operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListRunsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListRunsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListRunsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSamplesRequestMarshaller">
            <summary>
            ListSamples Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSamplesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSamplesRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListSamplesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSamplesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSamples operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSamplesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSamplesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSamplesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSuitesRequestMarshaller">
            <summary>
            ListSuites Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSuitesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSuitesRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListSuitesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSuitesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListSuites operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSuitesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSuitesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListSuitesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListTestsRequestMarshaller">
            <summary>
            ListTests Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListTestsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListTestsRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListTestsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListTestsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTests operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListTestsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListTestsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListTestsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUniqueProblemsRequestMarshaller">
            <summary>
            ListUniqueProblems Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUniqueProblemsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUniqueProblemsRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListUniqueProblemsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUniqueProblemsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUniqueProblems operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUniqueProblemsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUniqueProblemsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUniqueProblemsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUploadsRequestMarshaller">
            <summary>
            ListUploads Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUploadsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUploadsRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ListUploadsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUploadsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListUploads operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUploadsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUploadsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ListUploadsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.LocationMarshaller">
            <summary>
            Location Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.LocationMarshaller.Marshall(Amazon.DeviceFarm.Model.Location,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.LocationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.MonetaryAmountUnmarshaller">
            <summary>
            Response Unmarshaller for MonetaryAmount Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.MonetaryAmountUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#MonetaryAmount,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.MonetaryAmountUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.MonetaryAmountUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.OfferingStatusUnmarshaller">
            <summary>
            Response Unmarshaller for OfferingStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.OfferingStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#OfferingStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.OfferingStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.OfferingStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.OfferingTransactionUnmarshaller">
            <summary>
            Response Unmarshaller for OfferingTransaction Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.OfferingTransactionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#OfferingTransaction,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.OfferingTransactionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.OfferingTransactionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.OfferingUnmarshaller">
            <summary>
            Response Unmarshaller for Offering Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.OfferingUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Offering,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.OfferingUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.OfferingUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ProblemDetailUnmarshaller">
            <summary>
            Response Unmarshaller for ProblemDetail Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ProblemDetailUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#ProblemDetail,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ProblemDetailUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ProblemDetailUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ProblemUnmarshaller">
            <summary>
            Response Unmarshaller for Problem Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ProblemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Problem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ProblemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ProblemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ProjectUnmarshaller">
            <summary>
            Response Unmarshaller for Project Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ProjectUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Project,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ProjectUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ProjectUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.PurchaseOfferingRequestMarshaller">
            <summary>
            PurchaseOffering Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.PurchaseOfferingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.PurchaseOfferingRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.PurchaseOfferingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.PurchaseOfferingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PurchaseOffering operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.PurchaseOfferingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.PurchaseOfferingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.PurchaseOfferingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RadiosMarshaller">
            <summary>
            Radios Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RadiosMarshaller.Marshall(Amazon.DeviceFarm.Model.Radios,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RadiosMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RecurringChargeUnmarshaller">
            <summary>
            Response Unmarshaller for RecurringCharge Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RecurringChargeUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#RecurringCharge,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RecurringChargeUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RecurringChargeUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RenewOfferingRequestMarshaller">
            <summary>
            RenewOffering Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RenewOfferingRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RenewOfferingRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.RenewOfferingRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RenewOfferingResponseUnmarshaller">
            <summary>
            Response Unmarshaller for RenewOffering operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RenewOfferingResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RenewOfferingResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RenewOfferingResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ResolutionUnmarshaller">
            <summary>
            Response Unmarshaller for Resolution Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ResolutionUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Resolution,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ResolutionUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ResolutionUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RuleMarshaller">
            <summary>
            Rule Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RuleMarshaller.Marshall(Amazon.DeviceFarm.Model.Rule,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RuleMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RuleUnmarshaller">
            <summary>
            Response Unmarshaller for Rule Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RuleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Rule,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RuleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RuleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RunUnmarshaller">
            <summary>
            Response Unmarshaller for Run Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RunUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Run,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RunUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.RunUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.SampleUnmarshaller">
            <summary>
            Response Unmarshaller for Sample Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.SampleUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Sample,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.SampleUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.SampleUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunConfigurationMarshaller">
            <summary>
            ScheduleRunConfiguration Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunConfigurationMarshaller.Marshall(Amazon.DeviceFarm.Model.ScheduleRunConfiguration,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunConfigurationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunRequestMarshaller">
            <summary>
            ScheduleRun Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.ScheduleRunRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ScheduleRun operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunTestMarshaller">
            <summary>
            ScheduleRunTest Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunTestMarshaller.Marshall(Amazon.DeviceFarm.Model.ScheduleRunTest,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.ScheduleRunTestMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.StopRunRequestMarshaller">
            <summary>
            StopRun Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.StopRunRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.StopRunRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.StopRunRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.StopRunResponseUnmarshaller">
            <summary>
            Response Unmarshaller for StopRun operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.StopRunResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.StopRunResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.StopRunResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.SuiteUnmarshaller">
            <summary>
            Response Unmarshaller for Suite Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.SuiteUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Suite,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.SuiteUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.SuiteUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.TestUnmarshaller">
            <summary>
            Response Unmarshaller for Test Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.TestUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Test,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.TestUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.TestUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UniqueProblemUnmarshaller">
            <summary>
            Response Unmarshaller for UniqueProblem Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UniqueProblemUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#UniqueProblem,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UniqueProblemUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UniqueProblemUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateDevicePoolRequestMarshaller">
            <summary>
            UpdateDevicePool Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateDevicePoolRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateDevicePoolRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.UpdateDevicePoolRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateDevicePoolResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateDevicePool operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateDevicePoolResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateDevicePoolResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateDevicePoolResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateProjectRequestMarshaller">
            <summary>
            UpdateProject Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateProjectRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateProjectRequestMarshaller.Marshall(Amazon.DeviceFarm.Model.UpdateProjectRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateProjectResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UpdateProject operation
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateProjectResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateProjectResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UpdateProjectResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UploadUnmarshaller">
            <summary>
            Response Unmarshaller for Upload Object
            </summary>  
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UploadUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#DeviceFarm#Model#Upload,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UploadUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.DeviceFarm.Model.Internal.MarshallTransformations.UploadUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.DeviceFarm.AmazonDeviceFarmRequest">
            <summary>
            Base class for DeviceFarm operation requests.
            </summary>
        </member>
        <member name="T:Amazon.DeviceFarm.AmazonDeviceFarmClient">
             <summary>
             Implementation for accessing DeviceFarm
            
             AWS Device Farm is a service that enables mobile app developers to test Android, iOS,
             and Fire OS apps on physical phones, tablets, and other devices in the cloud.
             </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.#ctor">
             <summary>
             Constructs AmazonDeviceFarmClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonDeviceFarmClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.#ctor(Amazon.DeviceFarm.AmazonDeviceFarmConfig)">
             <summary>
             Constructs AmazonDeviceFarmClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonDeviceFarmClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonDeviceFarmClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDeviceFarmClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.DeviceFarm.AmazonDeviceFarmConfig)">
            <summary>
            Constructs AmazonDeviceFarmClient with AWS Credentials and an
            AmazonDeviceFarmClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonDeviceFarmClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonDeviceFarmClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDeviceFarmClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.#ctor(System.String,System.String,Amazon.DeviceFarm.AmazonDeviceFarmConfig)">
            <summary>
            Constructs AmazonDeviceFarmClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDeviceFarmClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonDeviceFarmClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonDeviceFarmClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonDeviceFarmClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.#ctor(System.String,System.String,System.String,Amazon.DeviceFarm.AmazonDeviceFarmConfig)">
            <summary>
            Constructs AmazonDeviceFarmClient with AWS Access Key ID, AWS Secret Key and an
            AmazonDeviceFarmClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonDeviceFarmClient Configuration Object</param>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.CreateDevicePool(Amazon.DeviceFarm.Model.CreateDevicePoolRequest)">
            <summary>
            Creates a device pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDevicePool service method.</param>
            
            <returns>The response from the CreateDevicePool service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginCreateDevicePool(Amazon.DeviceFarm.Model.CreateDevicePoolRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateDevicePool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDevicePool operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateDevicePool
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndCreateDevicePool(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateDevicePool operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateDevicePool.</param>
            
            <returns>Returns a  CreateDevicePoolResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.CreateProject(System.String)">
            <summary>
            Creates a new project.
            </summary>
            <param name="name">The project's name.</param>
            
            <returns>The response from the CreateProject service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.CreateProject(Amazon.DeviceFarm.Model.CreateProjectRequest)">
            <summary>
            Creates a new project.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateProject service method.</param>
            
            <returns>The response from the CreateProject service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginCreateProject(Amazon.DeviceFarm.Model.CreateProjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateProject operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateProject operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateProject
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndCreateProject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateProject operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateProject.</param>
            
            <returns>Returns a  CreateProjectResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.CreateUpload(Amazon.DeviceFarm.Model.CreateUploadRequest)">
            <summary>
            Uploads an app or test scripts.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUpload service method.</param>
            
            <returns>The response from the CreateUpload service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginCreateUpload(Amazon.DeviceFarm.Model.CreateUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateUpload operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateUpload operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateUpload
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndCreateUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateUpload operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateUpload.</param>
            
            <returns>Returns a  CreateUploadResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.DeleteDevicePool(Amazon.DeviceFarm.Model.DeleteDevicePoolRequest)">
            <summary>
            Deletes a device pool given the pool ARN. Does not allow deletion of curated pools
            owned by the system.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDevicePool service method.</param>
            
            <returns>The response from the DeleteDevicePool service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginDeleteDevicePool(Amazon.DeviceFarm.Model.DeleteDevicePoolRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteDevicePool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDevicePool operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteDevicePool
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndDeleteDevicePool(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteDevicePool operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteDevicePool.</param>
            
            <returns>Returns a  DeleteDevicePoolResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.DeleteProject(Amazon.DeviceFarm.Model.DeleteProjectRequest)">
            <summary>
            Deletes an AWS Device Farm project, given the project ARN.
            
             
            <para>
            <b>Note</b> Deleting this resource does not stop an in-progress run.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteProject service method.</param>
            
            <returns>The response from the DeleteProject service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginDeleteProject(Amazon.DeviceFarm.Model.DeleteProjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteProject operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteProject operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteProject
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndDeleteProject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteProject operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteProject.</param>
            
            <returns>Returns a  DeleteProjectResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.DeleteRun(Amazon.DeviceFarm.Model.DeleteRunRequest)">
            <summary>
            Deletes the run, given the run ARN.
            
             
            <para>
            <b>Note</b> Deleting this resource does not stop an in-progress run.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRun service method.</param>
            
            <returns>The response from the DeleteRun service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginDeleteRun(Amazon.DeviceFarm.Model.DeleteRunRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteRun operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRun operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteRun
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndDeleteRun(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteRun operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteRun.</param>
            
            <returns>Returns a  DeleteRunResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.DeleteUpload(Amazon.DeviceFarm.Model.DeleteUploadRequest)">
            <summary>
            Deletes an upload given the upload ARN.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUpload service method.</param>
            
            <returns>The response from the DeleteUpload service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginDeleteUpload(Amazon.DeviceFarm.Model.DeleteUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteUpload operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUpload operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteUpload
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndDeleteUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteUpload operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteUpload.</param>
            
            <returns>Returns a  DeleteUploadResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetAccountSettings">
            <summary>
            Returns the number of unmetered iOS and/or unmetered Android devices that have been
            purchased by the account.
            </summary>
            
            <returns>The response from the GetAccountSettings service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetAccountSettings(Amazon.DeviceFarm.Model.GetAccountSettingsRequest)">
            <summary>
            Returns the number of unmetered iOS and/or unmetered Android devices that have been
            purchased by the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAccountSettings service method.</param>
            
            <returns>The response from the GetAccountSettings service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginGetAccountSettings(Amazon.DeviceFarm.Model.GetAccountSettingsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetAccountSettings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetAccountSettings operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetAccountSettings
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndGetAccountSettings(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetAccountSettings operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetAccountSettings.</param>
            
            <returns>Returns a  GetAccountSettingsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetDevice(System.String)">
            <summary>
            Gets information about a unique device type.
            </summary>
            <param name="arn">The device type's ARN.</param>
            
            <returns>The response from the GetDevice service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetDevice(Amazon.DeviceFarm.Model.GetDeviceRequest)">
            <summary>
            Gets information about a unique device type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDevice service method.</param>
            
            <returns>The response from the GetDevice service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginGetDevice(Amazon.DeviceFarm.Model.GetDeviceRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetDevice operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDevice operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetDevice
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndGetDevice(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetDevice operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetDevice.</param>
            
            <returns>Returns a  GetDeviceResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetDevicePool(System.String)">
            <summary>
            Gets information about a device pool.
            </summary>
            <param name="arn">The device pool's ARN.</param>
            
            <returns>The response from the GetDevicePool service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetDevicePool(Amazon.DeviceFarm.Model.GetDevicePoolRequest)">
            <summary>
            Gets information about a device pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDevicePool service method.</param>
            
            <returns>The response from the GetDevicePool service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginGetDevicePool(Amazon.DeviceFarm.Model.GetDevicePoolRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetDevicePool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDevicePool operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetDevicePool
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndGetDevicePool(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetDevicePool operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetDevicePool.</param>
            
            <returns>Returns a  GetDevicePoolResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetDevicePoolCompatibility(Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityRequest)">
            <summary>
            Gets information about compatibility with a device pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDevicePoolCompatibility service method.</param>
            
            <returns>The response from the GetDevicePoolCompatibility service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginGetDevicePoolCompatibility(Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetDevicePoolCompatibility operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDevicePoolCompatibility operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetDevicePoolCompatibility
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndGetDevicePoolCompatibility(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetDevicePoolCompatibility operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetDevicePoolCompatibility.</param>
            
            <returns>Returns a  GetDevicePoolCompatibilityResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetJob(System.String)">
            <summary>
            Gets information about a job.
            </summary>
            <param name="arn">The job's ARN.</param>
            
            <returns>The response from the GetJob service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetJob(Amazon.DeviceFarm.Model.GetJobRequest)">
            <summary>
            Gets information about a job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetJob service method.</param>
            
            <returns>The response from the GetJob service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginGetJob(Amazon.DeviceFarm.Model.GetJobRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetJob operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetJob
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndGetJob(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetJob operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetJob.</param>
            
            <returns>Returns a  GetJobResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetOfferingStatus(Amazon.DeviceFarm.Model.GetOfferingStatusRequest)">
            <summary>
            Gets the current status and future status of all offerings purchased by an AWS account.
            The response indicates how many offerings are currently available and the offerings
            that will be available in the next period. The API returns a <code>NotEligible</code>
            error if the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetOfferingStatus service method.</param>
            
            <returns>The response from the GetOfferingStatus service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotEligibleException">
            Exception gets thrown when a user is not eligible to perform the specified transaction.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginGetOfferingStatus(Amazon.DeviceFarm.Model.GetOfferingStatusRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetOfferingStatus operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetOfferingStatus operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetOfferingStatus
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndGetOfferingStatus(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetOfferingStatus operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetOfferingStatus.</param>
            
            <returns>Returns a  GetOfferingStatusResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetProject(System.String)">
            <summary>
            Gets information about a project.
            </summary>
            <param name="arn">The project's ARN.</param>
            
            <returns>The response from the GetProject service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetProject(Amazon.DeviceFarm.Model.GetProjectRequest)">
            <summary>
            Gets information about a project.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetProject service method.</param>
            
            <returns>The response from the GetProject service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginGetProject(Amazon.DeviceFarm.Model.GetProjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetProject operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetProject operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetProject
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndGetProject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetProject operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetProject.</param>
            
            <returns>Returns a  GetProjectResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetRun(System.String)">
            <summary>
            Gets information about a run.
            </summary>
            <param name="arn">The run's ARN.</param>
            
            <returns>The response from the GetRun service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetRun(Amazon.DeviceFarm.Model.GetRunRequest)">
            <summary>
            Gets information about a run.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRun service method.</param>
            
            <returns>The response from the GetRun service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginGetRun(Amazon.DeviceFarm.Model.GetRunRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetRun operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetRun operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetRun
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndGetRun(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetRun operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetRun.</param>
            
            <returns>Returns a  GetRunResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetSuite(System.String)">
            <summary>
            Gets information about a suite.
            </summary>
            <param name="arn">The suite's ARN.</param>
            
            <returns>The response from the GetSuite service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetSuite(Amazon.DeviceFarm.Model.GetSuiteRequest)">
            <summary>
            Gets information about a suite.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSuite service method.</param>
            
            <returns>The response from the GetSuite service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginGetSuite(Amazon.DeviceFarm.Model.GetSuiteRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetSuite operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSuite operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetSuite
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndGetSuite(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetSuite operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetSuite.</param>
            
            <returns>Returns a  GetSuiteResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetTest(System.String)">
            <summary>
            Gets information about a test.
            </summary>
            <param name="arn">The test's ARN.</param>
            
            <returns>The response from the GetTest service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetTest(Amazon.DeviceFarm.Model.GetTestRequest)">
            <summary>
            Gets information about a test.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTest service method.</param>
            
            <returns>The response from the GetTest service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginGetTest(Amazon.DeviceFarm.Model.GetTestRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetTest operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetTest operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetTest
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndGetTest(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetTest operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetTest.</param>
            
            <returns>Returns a  GetTestResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetUpload(System.String)">
            <summary>
            Gets information about an upload.
            </summary>
            <param name="arn">The upload's ARN.</param>
            
            <returns>The response from the GetUpload service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.GetUpload(Amazon.DeviceFarm.Model.GetUploadRequest)">
            <summary>
            Gets information about an upload.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUpload service method.</param>
            
            <returns>The response from the GetUpload service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginGetUpload(Amazon.DeviceFarm.Model.GetUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetUpload operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUpload operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetUpload
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndGetUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetUpload operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetUpload.</param>
            
            <returns>Returns a  GetUploadResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListArtifacts(Amazon.DeviceFarm.Model.ListArtifactsRequest)">
            <summary>
            Gets information about artifacts.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListArtifacts service method.</param>
            
            <returns>The response from the ListArtifacts service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListArtifacts(Amazon.DeviceFarm.Model.ListArtifactsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListArtifacts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListArtifacts operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListArtifacts
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListArtifacts(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListArtifacts operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListArtifacts.</param>
            
            <returns>Returns a  ListArtifactsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListDevicePools(Amazon.DeviceFarm.Model.ListDevicePoolsRequest)">
            <summary>
            Gets information about device pools.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevicePools service method.</param>
            
            <returns>The response from the ListDevicePools service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListDevicePools(Amazon.DeviceFarm.Model.ListDevicePoolsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListDevicePools operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDevicePools operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListDevicePools
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListDevicePools(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListDevicePools operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListDevicePools.</param>
            
            <returns>Returns a  ListDevicePoolsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListDevices(Amazon.DeviceFarm.Model.ListDevicesRequest)">
            <summary>
            Gets information about unique device types.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevices service method.</param>
            
            <returns>The response from the ListDevices service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListDevices(Amazon.DeviceFarm.Model.ListDevicesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListDevices operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDevices operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListDevices
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListDevices(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListDevices operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListDevices.</param>
            
            <returns>Returns a  ListDevicesResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListJobs(Amazon.DeviceFarm.Model.ListJobsRequest)">
            <summary>
            Gets information about jobs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListJobs service method.</param>
            
            <returns>The response from the ListJobs service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListJobs(Amazon.DeviceFarm.Model.ListJobsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListJobs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListJobs operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListJobs
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListJobs(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListJobs operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListJobs.</param>
            
            <returns>Returns a  ListJobsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListOfferings(Amazon.DeviceFarm.Model.ListOfferingsRequest)">
            <summary>
            Returns a list of products or offerings that the user can manage through the API.
            Each offering record indicates the recurring price per unit and the frequency for
            that offering. The API returns a <code>NotEligible</code> error if the user is not
            permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListOfferings service method.</param>
            
            <returns>The response from the ListOfferings service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotEligibleException">
            Exception gets thrown when a user is not eligible to perform the specified transaction.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListOfferings(Amazon.DeviceFarm.Model.ListOfferingsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListOfferings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListOfferings operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListOfferings
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListOfferings(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListOfferings operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListOfferings.</param>
            
            <returns>Returns a  ListOfferingsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListOfferingTransactions(Amazon.DeviceFarm.Model.ListOfferingTransactionsRequest)">
            <summary>
            Returns a list of all historical purchases, renewals, and system renewal transactions
            for an AWS account. The list is paginated and ordered by a descending timestamp (most
            recent transactions are first). The API returns a <code>NotEligible</code> error if
            the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListOfferingTransactions service method.</param>
            
            <returns>The response from the ListOfferingTransactions service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotEligibleException">
            Exception gets thrown when a user is not eligible to perform the specified transaction.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListOfferingTransactions(Amazon.DeviceFarm.Model.ListOfferingTransactionsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListOfferingTransactions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListOfferingTransactions operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListOfferingTransactions
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListOfferingTransactions(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListOfferingTransactions operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListOfferingTransactions.</param>
            
            <returns>Returns a  ListOfferingTransactionsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListProjects(Amazon.DeviceFarm.Model.ListProjectsRequest)">
            <summary>
            Gets information about projects.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProjects service method.</param>
            
            <returns>The response from the ListProjects service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListProjects(Amazon.DeviceFarm.Model.ListProjectsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListProjects operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListProjects operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListProjects
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListProjects(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListProjects operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListProjects.</param>
            
            <returns>Returns a  ListProjectsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListRuns(Amazon.DeviceFarm.Model.ListRunsRequest)">
            <summary>
            Gets information about runs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRuns service method.</param>
            
            <returns>The response from the ListRuns service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListRuns(Amazon.DeviceFarm.Model.ListRunsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListRuns operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRuns operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListRuns
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListRuns(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListRuns operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListRuns.</param>
            
            <returns>Returns a  ListRunsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListSamples(Amazon.DeviceFarm.Model.ListSamplesRequest)">
            <summary>
            Gets information about samples.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSamples service method.</param>
            
            <returns>The response from the ListSamples service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListSamples(Amazon.DeviceFarm.Model.ListSamplesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListSamples operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSamples operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListSamples
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListSamples(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListSamples operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListSamples.</param>
            
            <returns>Returns a  ListSamplesResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListSuites(Amazon.DeviceFarm.Model.ListSuitesRequest)">
            <summary>
            Gets information about suites.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSuites service method.</param>
            
            <returns>The response from the ListSuites service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListSuites(Amazon.DeviceFarm.Model.ListSuitesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListSuites operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSuites operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListSuites
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListSuites(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListSuites operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListSuites.</param>
            
            <returns>Returns a  ListSuitesResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListTests(Amazon.DeviceFarm.Model.ListTestsRequest)">
            <summary>
            Gets information about tests.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTests service method.</param>
            
            <returns>The response from the ListTests service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListTests(Amazon.DeviceFarm.Model.ListTestsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListTests operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTests operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListTests
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListTests(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListTests operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListTests.</param>
            
            <returns>Returns a  ListTestsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListUniqueProblems(Amazon.DeviceFarm.Model.ListUniqueProblemsRequest)">
            <summary>
            Gets information about unique problems.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUniqueProblems service method.</param>
            
            <returns>The response from the ListUniqueProblems service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListUniqueProblems(Amazon.DeviceFarm.Model.ListUniqueProblemsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListUniqueProblems operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUniqueProblems operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListUniqueProblems
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListUniqueProblems(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListUniqueProblems operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListUniqueProblems.</param>
            
            <returns>Returns a  ListUniqueProblemsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ListUploads(Amazon.DeviceFarm.Model.ListUploadsRequest)">
            <summary>
            Gets information about uploads.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUploads service method.</param>
            
            <returns>The response from the ListUploads service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginListUploads(Amazon.DeviceFarm.Model.ListUploadsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListUploads operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUploads operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListUploads
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndListUploads(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListUploads operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListUploads.</param>
            
            <returns>Returns a  ListUploadsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.PurchaseOffering(Amazon.DeviceFarm.Model.PurchaseOfferingRequest)">
            <summary>
            Immediately purchases offerings for an AWS account. Offerings renew with the latest
            total purchased quantity for an offering, unless the renewal was overridden. The API
            returns a <code>NotEligible</code> error if the user is not permitted to invoke the
            operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PurchaseOffering service method.</param>
            
            <returns>The response from the PurchaseOffering service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotEligibleException">
            Exception gets thrown when a user is not eligible to perform the specified transaction.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginPurchaseOffering(Amazon.DeviceFarm.Model.PurchaseOfferingRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the PurchaseOffering operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PurchaseOffering operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndPurchaseOffering
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndPurchaseOffering(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  PurchaseOffering operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginPurchaseOffering.</param>
            
            <returns>Returns a  PurchaseOfferingResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.RenewOffering(Amazon.DeviceFarm.Model.RenewOfferingRequest)">
            <summary>
            Explicitly sets the quantity of devices to renew for an offering, starting from the
            <code>effectiveDate</code> of the next period. The API returns a <code>NotEligible</code>
            error if the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RenewOffering service method.</param>
            
            <returns>The response from the RenewOffering service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotEligibleException">
            Exception gets thrown when a user is not eligible to perform the specified transaction.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginRenewOffering(Amazon.DeviceFarm.Model.RenewOfferingRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the RenewOffering operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RenewOffering operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndRenewOffering
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndRenewOffering(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  RenewOffering operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginRenewOffering.</param>
            
            <returns>Returns a  RenewOfferingResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.ScheduleRun(Amazon.DeviceFarm.Model.ScheduleRunRequest)">
            <summary>
            Schedules a run.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ScheduleRun service method.</param>
            
            <returns>The response from the ScheduleRun service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.IdempotencyException">
            An entity with the same name already exists.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginScheduleRun(Amazon.DeviceFarm.Model.ScheduleRunRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ScheduleRun operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ScheduleRun operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndScheduleRun
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndScheduleRun(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ScheduleRun operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginScheduleRun.</param>
            
            <returns>Returns a  ScheduleRunResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.StopRun(Amazon.DeviceFarm.Model.StopRunRequest)">
            <summary>
            Initiates a stop request for the current test run. AWS Device Farm will immediately
            stop the run on devices where tests have not started executing, and you will not be
            billed for these devices. On devices where tests have started executing, Setup Suite
            and Teardown Suite tests will run to completion before stopping execution on those
            devices. You will be billed for Setup, Teardown, and any tests that were in progress
            or already completed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopRun service method.</param>
            
            <returns>The response from the StopRun service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginStopRun(Amazon.DeviceFarm.Model.StopRunRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the StopRun operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StopRun operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndStopRun
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndStopRun(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  StopRun operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginStopRun.</param>
            
            <returns>Returns a  StopRunResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.UpdateDevicePool(Amazon.DeviceFarm.Model.UpdateDevicePoolRequest)">
            <summary>
            Modifies the name, description, and rules in a device pool given the attributes and
            the pool ARN. Rule updates are all-or-nothing, meaning they can only be updated as
            a whole (or not at all).
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDevicePool service method.</param>
            
            <returns>The response from the UpdateDevicePool service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginUpdateDevicePool(Amazon.DeviceFarm.Model.UpdateDevicePoolRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateDevicePool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateDevicePool operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateDevicePool
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndUpdateDevicePool(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateDevicePool operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateDevicePool.</param>
            
            <returns>Returns a  UpdateDevicePoolResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.UpdateProject(Amazon.DeviceFarm.Model.UpdateProjectRequest)">
            <summary>
            Modifies the specified project name, given the project ARN and a new name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateProject service method.</param>
            
            <returns>The response from the UpdateProject service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.BeginUpdateProject(Amazon.DeviceFarm.Model.UpdateProjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateProject operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateProject operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateProject
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.AmazonDeviceFarmClient.EndUpdateProject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateProject operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateProject.</param>
            
            <returns>Returns a  UpdateProjectResult from DeviceFarm.</returns>
        </member>
        <member name="T:Amazon.DeviceFarm.IAmazonDeviceFarm">
             <summary>
             Interface for accessing DeviceFarm
            
             AWS Device Farm is a service that enables mobile app developers to test Android, iOS,
             and Fire OS apps on physical phones, tablets, and other devices in the cloud.
             </summary>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.CreateDevicePool(Amazon.DeviceFarm.Model.CreateDevicePoolRequest)">
            <summary>
            Creates a device pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateDevicePool service method.</param>
            
            <returns>The response from the CreateDevicePool service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginCreateDevicePool(Amazon.DeviceFarm.Model.CreateDevicePoolRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateDevicePool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateDevicePool operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateDevicePool
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndCreateDevicePool(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateDevicePool operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateDevicePool.</param>
            
            <returns>Returns a  CreateDevicePoolResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.CreateProject(System.String)">
            <summary>
            Creates a new project.
            </summary>
            <param name="name">The project's name.</param>
            
            <returns>The response from the CreateProject service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.CreateProject(Amazon.DeviceFarm.Model.CreateProjectRequest)">
            <summary>
            Creates a new project.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateProject service method.</param>
            
            <returns>The response from the CreateProject service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginCreateProject(Amazon.DeviceFarm.Model.CreateProjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateProject operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateProject operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateProject
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndCreateProject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateProject operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateProject.</param>
            
            <returns>Returns a  CreateProjectResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.CreateUpload(Amazon.DeviceFarm.Model.CreateUploadRequest)">
            <summary>
            Uploads an app or test scripts.
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateUpload service method.</param>
            
            <returns>The response from the CreateUpload service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginCreateUpload(Amazon.DeviceFarm.Model.CreateUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the CreateUpload operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateUpload operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndCreateUpload
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndCreateUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  CreateUpload operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginCreateUpload.</param>
            
            <returns>Returns a  CreateUploadResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.DeleteDevicePool(Amazon.DeviceFarm.Model.DeleteDevicePoolRequest)">
            <summary>
            Deletes a device pool given the pool ARN. Does not allow deletion of curated pools
            owned by the system.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDevicePool service method.</param>
            
            <returns>The response from the DeleteDevicePool service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginDeleteDevicePool(Amazon.DeviceFarm.Model.DeleteDevicePoolRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteDevicePool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDevicePool operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteDevicePool
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndDeleteDevicePool(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteDevicePool operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteDevicePool.</param>
            
            <returns>Returns a  DeleteDevicePoolResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.DeleteProject(Amazon.DeviceFarm.Model.DeleteProjectRequest)">
            <summary>
            Deletes an AWS Device Farm project, given the project ARN.
            
             
            <para>
            <b>Note</b> Deleting this resource does not stop an in-progress run.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteProject service method.</param>
            
            <returns>The response from the DeleteProject service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginDeleteProject(Amazon.DeviceFarm.Model.DeleteProjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteProject operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteProject operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteProject
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndDeleteProject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteProject operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteProject.</param>
            
            <returns>Returns a  DeleteProjectResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.DeleteRun(Amazon.DeviceFarm.Model.DeleteRunRequest)">
            <summary>
            Deletes the run, given the run ARN.
            
             
            <para>
            <b>Note</b> Deleting this resource does not stop an in-progress run.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRun service method.</param>
            
            <returns>The response from the DeleteRun service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginDeleteRun(Amazon.DeviceFarm.Model.DeleteRunRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteRun operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRun operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteRun
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndDeleteRun(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteRun operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteRun.</param>
            
            <returns>Returns a  DeleteRunResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.DeleteUpload(Amazon.DeviceFarm.Model.DeleteUploadRequest)">
            <summary>
            Deletes an upload given the upload ARN.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteUpload service method.</param>
            
            <returns>The response from the DeleteUpload service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginDeleteUpload(Amazon.DeviceFarm.Model.DeleteUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the DeleteUpload operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteUpload operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndDeleteUpload
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndDeleteUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  DeleteUpload operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginDeleteUpload.</param>
            
            <returns>Returns a  DeleteUploadResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetAccountSettings">
            <summary>
            Returns the number of unmetered iOS and/or unmetered Android devices that have been
            purchased by the account.
            </summary>
            
            <returns>The response from the GetAccountSettings service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetAccountSettings(Amazon.DeviceFarm.Model.GetAccountSettingsRequest)">
            <summary>
            Returns the number of unmetered iOS and/or unmetered Android devices that have been
            purchased by the account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetAccountSettings service method.</param>
            
            <returns>The response from the GetAccountSettings service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginGetAccountSettings(Amazon.DeviceFarm.Model.GetAccountSettingsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetAccountSettings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetAccountSettings operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetAccountSettings
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndGetAccountSettings(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetAccountSettings operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetAccountSettings.</param>
            
            <returns>Returns a  GetAccountSettingsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetDevice(System.String)">
            <summary>
            Gets information about a unique device type.
            </summary>
            <param name="arn">The device type's ARN.</param>
            
            <returns>The response from the GetDevice service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetDevice(Amazon.DeviceFarm.Model.GetDeviceRequest)">
            <summary>
            Gets information about a unique device type.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDevice service method.</param>
            
            <returns>The response from the GetDevice service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginGetDevice(Amazon.DeviceFarm.Model.GetDeviceRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetDevice operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDevice operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetDevice
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndGetDevice(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetDevice operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetDevice.</param>
            
            <returns>Returns a  GetDeviceResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetDevicePool(System.String)">
            <summary>
            Gets information about a device pool.
            </summary>
            <param name="arn">The device pool's ARN.</param>
            
            <returns>The response from the GetDevicePool service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetDevicePool(Amazon.DeviceFarm.Model.GetDevicePoolRequest)">
            <summary>
            Gets information about a device pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDevicePool service method.</param>
            
            <returns>The response from the GetDevicePool service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginGetDevicePool(Amazon.DeviceFarm.Model.GetDevicePoolRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetDevicePool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDevicePool operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetDevicePool
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndGetDevicePool(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetDevicePool operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetDevicePool.</param>
            
            <returns>Returns a  GetDevicePoolResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetDevicePoolCompatibility(Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityRequest)">
            <summary>
            Gets information about compatibility with a device pool.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetDevicePoolCompatibility service method.</param>
            
            <returns>The response from the GetDevicePoolCompatibility service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginGetDevicePoolCompatibility(Amazon.DeviceFarm.Model.GetDevicePoolCompatibilityRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetDevicePoolCompatibility operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetDevicePoolCompatibility operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetDevicePoolCompatibility
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndGetDevicePoolCompatibility(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetDevicePoolCompatibility operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetDevicePoolCompatibility.</param>
            
            <returns>Returns a  GetDevicePoolCompatibilityResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetJob(System.String)">
            <summary>
            Gets information about a job.
            </summary>
            <param name="arn">The job's ARN.</param>
            
            <returns>The response from the GetJob service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetJob(Amazon.DeviceFarm.Model.GetJobRequest)">
            <summary>
            Gets information about a job.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetJob service method.</param>
            
            <returns>The response from the GetJob service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginGetJob(Amazon.DeviceFarm.Model.GetJobRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetJob operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetJob operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetJob
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndGetJob(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetJob operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetJob.</param>
            
            <returns>Returns a  GetJobResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetOfferingStatus(Amazon.DeviceFarm.Model.GetOfferingStatusRequest)">
            <summary>
            Gets the current status and future status of all offerings purchased by an AWS account.
            The response indicates how many offerings are currently available and the offerings
            that will be available in the next period. The API returns a <code>NotEligible</code>
            error if the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetOfferingStatus service method.</param>
            
            <returns>The response from the GetOfferingStatus service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotEligibleException">
            Exception gets thrown when a user is not eligible to perform the specified transaction.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginGetOfferingStatus(Amazon.DeviceFarm.Model.GetOfferingStatusRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetOfferingStatus operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetOfferingStatus operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetOfferingStatus
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndGetOfferingStatus(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetOfferingStatus operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetOfferingStatus.</param>
            
            <returns>Returns a  GetOfferingStatusResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetProject(System.String)">
            <summary>
            Gets information about a project.
            </summary>
            <param name="arn">The project's ARN.</param>
            
            <returns>The response from the GetProject service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetProject(Amazon.DeviceFarm.Model.GetProjectRequest)">
            <summary>
            Gets information about a project.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetProject service method.</param>
            
            <returns>The response from the GetProject service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginGetProject(Amazon.DeviceFarm.Model.GetProjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetProject operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetProject operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetProject
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndGetProject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetProject operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetProject.</param>
            
            <returns>Returns a  GetProjectResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetRun(System.String)">
            <summary>
            Gets information about a run.
            </summary>
            <param name="arn">The run's ARN.</param>
            
            <returns>The response from the GetRun service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetRun(Amazon.DeviceFarm.Model.GetRunRequest)">
            <summary>
            Gets information about a run.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetRun service method.</param>
            
            <returns>The response from the GetRun service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginGetRun(Amazon.DeviceFarm.Model.GetRunRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetRun operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetRun operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetRun
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndGetRun(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetRun operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetRun.</param>
            
            <returns>Returns a  GetRunResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetSuite(System.String)">
            <summary>
            Gets information about a suite.
            </summary>
            <param name="arn">The suite's ARN.</param>
            
            <returns>The response from the GetSuite service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetSuite(Amazon.DeviceFarm.Model.GetSuiteRequest)">
            <summary>
            Gets information about a suite.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetSuite service method.</param>
            
            <returns>The response from the GetSuite service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginGetSuite(Amazon.DeviceFarm.Model.GetSuiteRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetSuite operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetSuite operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetSuite
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndGetSuite(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetSuite operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetSuite.</param>
            
            <returns>Returns a  GetSuiteResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetTest(System.String)">
            <summary>
            Gets information about a test.
            </summary>
            <param name="arn">The test's ARN.</param>
            
            <returns>The response from the GetTest service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetTest(Amazon.DeviceFarm.Model.GetTestRequest)">
            <summary>
            Gets information about a test.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetTest service method.</param>
            
            <returns>The response from the GetTest service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginGetTest(Amazon.DeviceFarm.Model.GetTestRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetTest operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetTest operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetTest
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndGetTest(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetTest operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetTest.</param>
            
            <returns>Returns a  GetTestResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetUpload(System.String)">
            <summary>
            Gets information about an upload.
            </summary>
            <param name="arn">The upload's ARN.</param>
            
            <returns>The response from the GetUpload service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.GetUpload(Amazon.DeviceFarm.Model.GetUploadRequest)">
            <summary>
            Gets information about an upload.
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetUpload service method.</param>
            
            <returns>The response from the GetUpload service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginGetUpload(Amazon.DeviceFarm.Model.GetUploadRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the GetUpload operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetUpload operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndGetUpload
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndGetUpload(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  GetUpload operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginGetUpload.</param>
            
            <returns>Returns a  GetUploadResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListArtifacts(Amazon.DeviceFarm.Model.ListArtifactsRequest)">
            <summary>
            Gets information about artifacts.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListArtifacts service method.</param>
            
            <returns>The response from the ListArtifacts service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListArtifacts(Amazon.DeviceFarm.Model.ListArtifactsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListArtifacts operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListArtifacts operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListArtifacts
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListArtifacts(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListArtifacts operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListArtifacts.</param>
            
            <returns>Returns a  ListArtifactsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListDevicePools(Amazon.DeviceFarm.Model.ListDevicePoolsRequest)">
            <summary>
            Gets information about device pools.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevicePools service method.</param>
            
            <returns>The response from the ListDevicePools service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListDevicePools(Amazon.DeviceFarm.Model.ListDevicePoolsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListDevicePools operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDevicePools operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListDevicePools
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListDevicePools(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListDevicePools operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListDevicePools.</param>
            
            <returns>Returns a  ListDevicePoolsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListDevices(Amazon.DeviceFarm.Model.ListDevicesRequest)">
            <summary>
            Gets information about unique device types.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListDevices service method.</param>
            
            <returns>The response from the ListDevices service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListDevices(Amazon.DeviceFarm.Model.ListDevicesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListDevices operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListDevices operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListDevices
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListDevices(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListDevices operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListDevices.</param>
            
            <returns>Returns a  ListDevicesResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListJobs(Amazon.DeviceFarm.Model.ListJobsRequest)">
            <summary>
            Gets information about jobs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListJobs service method.</param>
            
            <returns>The response from the ListJobs service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListJobs(Amazon.DeviceFarm.Model.ListJobsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListJobs operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListJobs operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListJobs
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListJobs(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListJobs operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListJobs.</param>
            
            <returns>Returns a  ListJobsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListOfferings(Amazon.DeviceFarm.Model.ListOfferingsRequest)">
            <summary>
            Returns a list of products or offerings that the user can manage through the API.
            Each offering record indicates the recurring price per unit and the frequency for
            that offering. The API returns a <code>NotEligible</code> error if the user is not
            permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListOfferings service method.</param>
            
            <returns>The response from the ListOfferings service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotEligibleException">
            Exception gets thrown when a user is not eligible to perform the specified transaction.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListOfferings(Amazon.DeviceFarm.Model.ListOfferingsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListOfferings operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListOfferings operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListOfferings
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListOfferings(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListOfferings operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListOfferings.</param>
            
            <returns>Returns a  ListOfferingsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListOfferingTransactions(Amazon.DeviceFarm.Model.ListOfferingTransactionsRequest)">
            <summary>
            Returns a list of all historical purchases, renewals, and system renewal transactions
            for an AWS account. The list is paginated and ordered by a descending timestamp (most
            recent transactions are first). The API returns a <code>NotEligible</code> error if
            the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListOfferingTransactions service method.</param>
            
            <returns>The response from the ListOfferingTransactions service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotEligibleException">
            Exception gets thrown when a user is not eligible to perform the specified transaction.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListOfferingTransactions(Amazon.DeviceFarm.Model.ListOfferingTransactionsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListOfferingTransactions operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListOfferingTransactions operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListOfferingTransactions
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListOfferingTransactions(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListOfferingTransactions operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListOfferingTransactions.</param>
            
            <returns>Returns a  ListOfferingTransactionsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListProjects(Amazon.DeviceFarm.Model.ListProjectsRequest)">
            <summary>
            Gets information about projects.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListProjects service method.</param>
            
            <returns>The response from the ListProjects service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListProjects(Amazon.DeviceFarm.Model.ListProjectsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListProjects operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListProjects operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListProjects
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListProjects(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListProjects operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListProjects.</param>
            
            <returns>Returns a  ListProjectsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListRuns(Amazon.DeviceFarm.Model.ListRunsRequest)">
            <summary>
            Gets information about runs.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListRuns service method.</param>
            
            <returns>The response from the ListRuns service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListRuns(Amazon.DeviceFarm.Model.ListRunsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListRuns operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListRuns operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListRuns
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListRuns(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListRuns operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListRuns.</param>
            
            <returns>Returns a  ListRunsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListSamples(Amazon.DeviceFarm.Model.ListSamplesRequest)">
            <summary>
            Gets information about samples.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSamples service method.</param>
            
            <returns>The response from the ListSamples service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListSamples(Amazon.DeviceFarm.Model.ListSamplesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListSamples operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSamples operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListSamples
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListSamples(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListSamples operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListSamples.</param>
            
            <returns>Returns a  ListSamplesResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListSuites(Amazon.DeviceFarm.Model.ListSuitesRequest)">
            <summary>
            Gets information about suites.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListSuites service method.</param>
            
            <returns>The response from the ListSuites service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListSuites(Amazon.DeviceFarm.Model.ListSuitesRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListSuites operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListSuites operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListSuites
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListSuites(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListSuites operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListSuites.</param>
            
            <returns>Returns a  ListSuitesResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListTests(Amazon.DeviceFarm.Model.ListTestsRequest)">
            <summary>
            Gets information about tests.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTests service method.</param>
            
            <returns>The response from the ListTests service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListTests(Amazon.DeviceFarm.Model.ListTestsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListTests operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTests operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListTests
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListTests(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListTests operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListTests.</param>
            
            <returns>Returns a  ListTestsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListUniqueProblems(Amazon.DeviceFarm.Model.ListUniqueProblemsRequest)">
            <summary>
            Gets information about unique problems.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUniqueProblems service method.</param>
            
            <returns>The response from the ListUniqueProblems service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListUniqueProblems(Amazon.DeviceFarm.Model.ListUniqueProblemsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListUniqueProblems operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUniqueProblems operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListUniqueProblems
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListUniqueProblems(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListUniqueProblems operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListUniqueProblems.</param>
            
            <returns>Returns a  ListUniqueProblemsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ListUploads(Amazon.DeviceFarm.Model.ListUploadsRequest)">
            <summary>
            Gets information about uploads.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListUploads service method.</param>
            
            <returns>The response from the ListUploads service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginListUploads(Amazon.DeviceFarm.Model.ListUploadsRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ListUploads operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListUploads operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndListUploads
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndListUploads(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ListUploads operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginListUploads.</param>
            
            <returns>Returns a  ListUploadsResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.PurchaseOffering(Amazon.DeviceFarm.Model.PurchaseOfferingRequest)">
            <summary>
            Immediately purchases offerings for an AWS account. Offerings renew with the latest
            total purchased quantity for an offering, unless the renewal was overridden. The API
            returns a <code>NotEligible</code> error if the user is not permitted to invoke the
            operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PurchaseOffering service method.</param>
            
            <returns>The response from the PurchaseOffering service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotEligibleException">
            Exception gets thrown when a user is not eligible to perform the specified transaction.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginPurchaseOffering(Amazon.DeviceFarm.Model.PurchaseOfferingRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the PurchaseOffering operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PurchaseOffering operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndPurchaseOffering
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndPurchaseOffering(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  PurchaseOffering operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginPurchaseOffering.</param>
            
            <returns>Returns a  PurchaseOfferingResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.RenewOffering(Amazon.DeviceFarm.Model.RenewOfferingRequest)">
            <summary>
            Explicitly sets the quantity of devices to renew for an offering, starting from the
            <code>effectiveDate</code> of the next period. The API returns a <code>NotEligible</code>
            error if the user is not permitted to invoke the operation. Please contact <a href="mailto:aws-devicefarm-support@amazon.com">aws-devicefarm-support@amazon.com</a>
            if you believe that you should be able to invoke this operation.
            </summary>
            <param name="request">Container for the necessary parameters to execute the RenewOffering service method.</param>
            
            <returns>The response from the RenewOffering service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotEligibleException">
            Exception gets thrown when a user is not eligible to perform the specified transaction.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginRenewOffering(Amazon.DeviceFarm.Model.RenewOfferingRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the RenewOffering operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the RenewOffering operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndRenewOffering
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndRenewOffering(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  RenewOffering operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginRenewOffering.</param>
            
            <returns>Returns a  RenewOfferingResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.ScheduleRun(Amazon.DeviceFarm.Model.ScheduleRunRequest)">
            <summary>
            Schedules a run.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ScheduleRun service method.</param>
            
            <returns>The response from the ScheduleRun service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.IdempotencyException">
            An entity with the same name already exists.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginScheduleRun(Amazon.DeviceFarm.Model.ScheduleRunRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the ScheduleRun operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ScheduleRun operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndScheduleRun
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndScheduleRun(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  ScheduleRun operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginScheduleRun.</param>
            
            <returns>Returns a  ScheduleRunResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.StopRun(Amazon.DeviceFarm.Model.StopRunRequest)">
            <summary>
            Initiates a stop request for the current test run. AWS Device Farm will immediately
            stop the run on devices where tests have not started executing, and you will not be
            billed for these devices. On devices where tests have started executing, Setup Suite
            and Teardown Suite tests will run to completion before stopping execution on those
            devices. You will be billed for Setup, Teardown, and any tests that were in progress
            or already completed.
            </summary>
            <param name="request">Container for the necessary parameters to execute the StopRun service method.</param>
            
            <returns>The response from the StopRun service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginStopRun(Amazon.DeviceFarm.Model.StopRunRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the StopRun operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the StopRun operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndStopRun
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndStopRun(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  StopRun operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginStopRun.</param>
            
            <returns>Returns a  StopRunResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.UpdateDevicePool(Amazon.DeviceFarm.Model.UpdateDevicePoolRequest)">
            <summary>
            Modifies the name, description, and rules in a device pool given the attributes and
            the pool ARN. Rule updates are all-or-nothing, meaning they can only be updated as
            a whole (or not at all).
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateDevicePool service method.</param>
            
            <returns>The response from the UpdateDevicePool service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginUpdateDevicePool(Amazon.DeviceFarm.Model.UpdateDevicePoolRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateDevicePool operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateDevicePool operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateDevicePool
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndUpdateDevicePool(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateDevicePool operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateDevicePool.</param>
            
            <returns>Returns a  UpdateDevicePoolResult from DeviceFarm.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.UpdateProject(Amazon.DeviceFarm.Model.UpdateProjectRequest)">
            <summary>
            Modifies the specified project name, given the project ARN and a new name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the UpdateProject service method.</param>
            
            <returns>The response from the UpdateProject service method, as returned by DeviceFarm.</returns>
            <exception cref="T:Amazon.DeviceFarm.Model.ArgumentException">
            An invalid argument was specified.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.LimitExceededException">
            A limit was exceeded.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.NotFoundException">
            The specified entity was not found.
            </exception>
            <exception cref="T:Amazon.DeviceFarm.Model.ServiceAccountException">
            There was a problem with the service account.
            </exception>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.BeginUpdateProject(Amazon.DeviceFarm.Model.UpdateProjectRequest,System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the UpdateProject operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UpdateProject operation on AmazonDeviceFarmClient.</param>
            <param name="callback">An AsyncCallback delegate that is invoked when the operation completes.</param>
            <param name="state">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
                     procedure using the AsyncState property.</param>
            
            <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking EndUpdateProject
                    operation.</returns>
        </member>
        <member name="M:Amazon.DeviceFarm.IAmazonDeviceFarm.EndUpdateProject(System.IAsyncResult)">
            <summary>
            Finishes the asynchronous execution of the  UpdateProject operation.
            </summary>
            
            <param name="asyncResult">The IAsyncResult returned by the call to BeginUpdateProject.</param>
            
            <returns>Returns a  UpdateProjectResult from DeviceFarm.</returns>
        </member>
    </members>
</doc>
